{"version":3,"sources":["lib/db.ts","lib/theme.ts","lib/util.ts","actions/AppEventsActions.ts","actions/KanbanBoardActions.ts","dispatchers/AppEventsDispatcher.ts","lib/datetime.ts","data/initial-data.ts","states/KanbanBoardState.ts","actions/CalendarActions.ts","states/CalendarState.ts","states/AppEventsState.ts","store.ts","dispatchers/KanbanBoardDispatcher.ts","lib/gensym.ts","components/TextInputDialog.tsx","components/AppDrawer.tsx","components/ConfirmDialog.tsx","lib/csv.ts","components/KanbanDialog.tsx","views/KanbanBoardView.tsx","dispatchers/CalendarViewDispatcher.ts","views/CalendarView.tsx","lib/validation.ts","views/EditorView.tsx","views/SettingsView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["dbBaseName","window","location","pathname","replace","PouchDB","plugin","PouchDBFind","remoteDb","rep","localDb","auto_compaction","localConfigDb","startSync","a","allDocs","localDocs","remoteDocs","idSet","Set","rows","doc","add","id","sync","live","retry","doc_ids","Array","from","values","on","change","info","err","restartSync","cancel","e","setRemoteDb","url","user","password","close","match","auth","username","getLocalDb","isDark","matchMedia","matches","theme","createMuiTheme","palette","type","primary","main","blue","secondary","pink","getCurrentView","history","currentView","startsWith","actionCreator","actionCreatorFactory","updateAppConfig","async","resetApplication","appEventsActions","showAlertDialog","closeAlertDialog","startUpdateAppConfig","started","doneUpdateAppConfig","done","failedUpdateAppConfig","failed","startResetApplication","doneResetApplication","failedResetApplication","addBoard","changeActiveBoard","updateBoardName","deleteBoard","addSticky","updateSticky","updateStickyLanes","archiveSticky","deleteSticky","editBoardAndStickys","refreshActiveBoard","kanbanBoardActions","startAddBoard","doneAddBoard","failedAddBoard","startChangeActiveBoard","doneChangeActiveBoard","failedChangeActiveBoard","startUpdateBoardName","doneUpdateBoardName","failedUpdateBoardName","startDeleteBoard","doneDeleteBoard","failedDeleteBoard","startAddSticky","doneAddSticky","failedAddSticky","startUpdateSticky","doneUpdateSticky","failedUpdateSticky","startUpdateStickyLanes","doneUpdateStickyLanes","failedUpdateStickyLanes","startArchiveSticky","doneArchiveSticky","failedArchiveSticky","startDeleteSticky","doneDeleteSticky","failedDeleteSticky","startEditBoardAndStickys","doneEditBoardAndStickys","failedEditBoardAndStickys","startRefreshActiveBoard","doneRefreshActiveBoard","failedRefreshActiveBoard","mapDispatchToProps","dispatch","v","boardId","mapStateToProps","appState","Object","assign","appEvents","formatDate","d","String","getFullYear","padStart","getMonth","getDate","parseISODate","s","m","Date","Number","boardNote","initialData","kanbanBoardReducer","getKanbanBoardReducer","db","resp","include_docs","length","data","bulkDocs","boards","map","x","postRespBoards","now","records","rec","dueDate","filter","sort","b","name","toLocaleLowerCase","board","_id","initialState","activeBoard","activeBoardId","activeBoardIndex","getKanbanBoardStateFromDb","state","get","find","selector","docs","index","Math","max","findIndex","slice","concat","reducerWithInitialState","case","payload","boardName","taskStatuses","teamOrStories","tags","displayBarcode","displayMemo","displayFlags","displayTags","preferArchive","boardStyle","calendarStyle","post","then","saved","_rev","rev","getConstructedAppStore","params","result","setTimeout","push","catch","error","open","title","message","singleButton","colorIsSecondary","onClose","arg","alert","newState","dbBoard","put","record","remove","description","barcode","memo","flags","taskStatus","value","teamOrStory","kanbanId","taskStatusValue","teamOrStoryValue","recordsNew","recDb","recNew","calendarActions","showToday","showNextMonth","showPreviousMonth","showNextYear","showPreviousYear","calendarReducer","getCalendarReducer","activeMonth","appEventsReducer","getAppEventsReducer","confDb","defaultAppConfig","remote","endpointUrl","display","autoUpdate","autoUpdateInterval","alertDialog","appConfig","newConf","destroy","createHashHistory","hashType","store","getAppStore","createStore","combineReducers","connectRouter","router","kanbanBoard","calendar","compose","applyMiddleware","routerMiddleware","gensymSeed","gensym","TextInputDialog","props","useTheme","React","useState","setOpen","setValue","formDialogTitleId","handleCancelClick","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fieldLabel","fullWidth","validator","onChange","event","target","DialogActions","Button","variant","color","onClick","style","marginLeft","spacing","cancelButtonCaption","disabled","applyButtonCaption","useStyles","makeStyles","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","nested","paddingLeft","withRouter","connect","classes","trim","apply","setTextInputOpen","textInputOpen","boardsOpen","setBoardsOpen","matchesPrint","useMediaQuery","handleChangeView","viewName","Drawer","className","clsx","paper","anchor","IconButton","Divider","List","component","subheader","ListSubheader","ListItem","button","Collapse","in","timeout","unmountOnExit","disablePadding","key","selected","fontWeight","ev","view","handleClickChangeActiveBoard","ListItemText","ListItemIcon","ConfirmDialog","inputValue","setInputValue","fab","textAlign","split","arr","confirmingTextValue","confirmingTextLabel","marginRight","marginBottom","$s","getStringParsers","rawToToken","rawToken","concatTokens","tokens","reduce","seq","cls","notCls","cat","repeat","end","first","combine","erase","trans","ahead","quoted","input","spaceWithinSingleLine","nakid","cell","row","newline","parse","z","parserInput","succeeded","Error","formControl","minWidth","icon","fontSize","fabDelete","position","right","top","KanbanDialog","confirmOpen","setConfirmOpen","setDescription","setBarcode","setMemo","includes","join","setTags","setFlags","setDueDate","setTaskStatus","setTeamOrStory","taskStatusesId","teamOrStoryId","onCancel","handleTagsChange","handleFlagsChange","paddingBottom","Typography","utils","DateFnsUtils","multiline","rowsMax","helperText","format","KeyboardButtonProps","date","FormControl","marginTop","InputLabel","htmlFor","Select","inputProps","MenuItem","caption","tagsTrimmed","tagsParsed","parseCsv","flagsTrimmed","flagsParsed","onApply","isNaN","getTime","Fab","size","aria-label","onArchive","onDelete","DOMPurify","createDOMPurify","root","smallIcon","height","mapNeverStateToProps","firefox","navigator","userAgent","toLowerCase","indexOf","Sticky","today","expired","completed","data-record-id","draggable","onDragStart","dataTransfer","setData","matched","q","dangerouslySetInnerHTML","__html","sanitize","marked","Qr","fill","fillColor","cellSize","unit","toImgTag","Stickys","data-status","data-team-or-story","onDragOver","preventDefault","onDrop","elId","getData","el","document","getElementById","dataset","recordId","currentState","getState","align","cursor","textDecoration","padding","kanbanBoardState","flexGrow","backgroundColor","border","borderCollapse","tableLayout","calendarTitle","calendarTitleToolBar","left","overflow","calendarTopLeftHeader","calendarDaysHeader","calendarSundayHeader","calendarSaturdayHeader","calendarCell","verticalAlign","calendarWeekendCell","chip","borderRadius","textOverflow","paddingRight","chipWrap","CalendarItem","archived","month","firstDateOfMonth","lastDateOfMonth","firstDateOfCal","getDay","lastDateOfCal","nextCalDate","dates","week","wd","stickys","toLocaleDateString","userLanguage","language","browserLanguage","year","toISOString","paddingTop","minHeight","next","pickEditableBoardProps","sticky","checkStyleXSS","text","validateBoardProps","isArray","forEach","validateStickyProps","header","codemirror","fabSave","confirmDeletingOpen","setConfirmDeletingOpen","editorValue","setEditorValue","editCount","setEditCount","jsYaml","safeLoad","safeDump","lineWidth","options","mode","lineNumbers","lineWrapping","editor","conf","confirmResetAppOpen","setConfirmResetAppOpen","goAround","validateConfigProps","app","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","console","log","nextActiveBoardId","CssBaseline","ThemeProvider","path","exact","KanbanBoardView","CalendarView","EditorView","SettingsView","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c99e7783.chunk.js","sourcesContent":["// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport PouchDB     from 'pouchdb-browser';\r\nimport PouchDBFind from 'pouchdb-find';\r\n\r\n\r\n\r\nconst dbBaseName = window.location.pathname.replace(/\\//g, '_');\r\n\r\nPouchDB.plugin(PouchDBFind);\r\n\r\nlet remoteDb: PouchDB.Database | null = null;\r\nlet rep: PouchDB.Replication.Sync<{}> | null = null;\r\nconst localDb = new PouchDB(`kanban-board-v1@${dbBaseName}`, { auto_compaction: true });\r\nconst localConfigDb = new PouchDB(`kanban-board-config-v1@${dbBaseName}`, { auto_compaction: true });\r\n\r\n\r\nasync function startSync() {\r\n    if (remoteDb) {\r\n        const localDocs = await localDb.allDocs({});\r\n        const remoteDocs = remoteDb ? await remoteDb.allDocs({}) : null;\r\n        const idSet = new Set<string>();\r\n        for (const doc of localDocs.rows) {\r\n            idSet.add(doc.id);\r\n        }\r\n        if (remoteDocs) {\r\n            for (const doc of remoteDocs.rows) {\r\n                idSet.add(doc.id);\r\n            }\r\n        }\r\n\r\n        rep = localDb.sync(remoteDb, {\r\n            live: true,\r\n            retry: true,\r\n            doc_ids: Array.from(idSet.values()),\r\n        })\r\n        .on('change', change => {\r\n            // something changed!\r\n        })\r\n        .on('paused', info => {\r\n            // replication was paused, usually because of a lost connection\r\n        })\r\n        .on('active' as any, info => {\r\n            // TODO: TypeScript reports the error that parameter 'active' is invalid.\r\n            // replication was resumed\r\n        })\r\n        .on('complete', info => {\r\n            // replication was canceled!\r\n        })\r\n        .on('error', err => {\r\n            // totally unhandled error (shouldn't happen)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport async function restartSync() {\r\n    if (rep) {\r\n        try {\r\n            rep.cancel();\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n        rep = null;\r\n    }\r\n\r\n    await startSync();\r\n}\r\n\r\n\r\nexport async function setRemoteDb(url: string, user: string, password: string) {\r\n    if (rep) {\r\n        try {\r\n            rep.cancel();\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n        rep = null;\r\n    }\r\n    if (remoteDb) {\r\n        try {\r\n            await remoteDb.close();\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n        remoteDb = null;\r\n    }\r\n\r\n    if (url && url.match(/^https?:\\/\\//)) {\r\n        remoteDb = new PouchDB(url, {\r\n            auth: {\r\n                username: user,\r\n                password: password,\r\n            },\r\n        });\r\n\r\n        await startSync();\r\n    }\r\n}\r\n\r\n\r\nexport function getLocalDb() {\r\n    return localDb;\r\n}\r\n\r\nexport function getLocalConfigDb() {\r\n    return localConfigDb;\r\n}\r\n\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { blue, pink }     from '@material-ui/core/colors';\r\n\r\n\r\n\r\nexport const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: isDark ? {\r\n        type: 'dark',\r\n        primary: {\r\n            main: blue[500],\r\n        },\r\n        secondary: {\r\n            main: pink[500],\r\n        },\r\n    } : {\r\n        type: 'light',\r\n        primary: {\r\n            main: blue[500],\r\n        },\r\n        secondary: {\r\n            main: pink[500],\r\n        },\r\n    },\r\n});\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { History } from 'history';\r\n\r\n\r\n\r\nexport function getCurrentView(history: History<any>) {\r\n    let currentView = '';\r\n    if (history.location.pathname) {\r\n        if (history.location.pathname.startsWith('/kanban/')) {\r\n            currentView = 'kanban';\r\n        } else if (history.location.pathname.startsWith('/calendar/')) {\r\n            currentView = 'calendar';\r\n        } else if (history.location.pathname.startsWith('/edit/')) {\r\n            currentView = 'edit';\r\n        } else if (history.location.pathname.startsWith('/config/')) {\r\n            currentView = 'config';\r\n        }\r\n    }\r\n    return currentView;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport actionCreatorFactory,\r\n       { Action }             from 'typescript-fsa';\r\nimport { AppConfig,\r\n         ConfirmDialogProps,\r\n         AppEventsState }     from '../types';\r\n\r\n\r\n\r\nexport interface AppEventsActions {\r\n    showAlertDialog: (v: ConfirmDialogProps) =>\r\n        Action<ConfirmDialogProps>;\r\n    closeAlertDialog: () =>\r\n        Action<void>;\r\n\r\n    updateAppConfig: (v: AppConfig) =>\r\n        Action<AppConfig>;\r\n    resetApplication: () =>\r\n        Action<void>;\r\n\r\n    // from KanbanBoardActions\r\n    changeActiveBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n    refreshActiveBoard: () =>\r\n        Action<{}>;\r\n}\r\n\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\n\r\nconst updateAppConfig =\r\n    actionCreator.async<AppConfig, AppEventsState, Error>('ACTIONS_UPDATE_APP_CONFIG');\r\nconst resetApplication =\r\n    actionCreator.async<void, AppEventsState, Error>('ACTIONS_RESET_APPLICATION');\r\n\r\n\r\nexport const appEventsActions = {\r\n    showAlertDialog: actionCreator<ConfirmDialogProps>('ACTIONS_SHOW_ALERT_DIALOG'),\r\n    closeAlertDialog: actionCreator<void>('ACTIONS_CLOSE_ALERT_DIALOG'),\r\n\r\n    startUpdateAppConfig: updateAppConfig.started,\r\n    doneUpdateAppConfig: updateAppConfig.done,\r\n    failedUpdateAppConfig: updateAppConfig.failed,\r\n\r\n    startResetApplication: resetApplication.started,\r\n    doneResetApplication: resetApplication.done,\r\n    failedResetApplication: resetApplication.failed,\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport actionCreatorFactory,\r\n       { Action }                  from 'typescript-fsa';\r\nimport { KanbanBoardState,\r\n         KanbanBoardRecord,\r\n         KanbanRecord,\r\n         UpdateStickyLanesPayload,\r\n         ConfirmDialogProps }      from '../types';\r\n\r\n\r\n\r\nexport interface KanbanBoardActions {\r\n    addBoard: (boardName: string) =>\r\n        Action<{boardName: string}>;\r\n    changeActiveBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n        Action<{boardId: string, boardName: string}>;\r\n    deleteBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n\r\n    addSticky: () =>\r\n        Action<{}>;\r\n    updateSticky: (v: KanbanRecord) =>\r\n        Action<KanbanRecord>;\r\n    updateStickyLanes: (v: UpdateStickyLanesPayload) =>\r\n        Action<UpdateStickyLanesPayload>;\r\n    archiveSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n    deleteSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n\r\n    editBoardAndStickys: (v: KanbanBoardRecord) =>\r\n        Action<KanbanBoardRecord>;\r\n\r\n    refreshActiveBoard: () =>\r\n        Action<{}>;\r\n\r\n    // from AppEventsActions\r\n    showAlertDialog: (v: ConfirmDialogProps) =>\r\n        Action<ConfirmDialogProps>;\r\n    closeAlertDialog: () =>\r\n        Action<void>;\r\n}\r\n\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\n\r\nconst addBoard =\r\n    actionCreator.async<{boardName: string}, KanbanBoardState, Error>('ACTIONS_ADD_BOARD');\r\nconst changeActiveBoard =\r\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_CHANGE_ACTIVE_BOARD');\r\nconst updateBoardName =\r\n    actionCreator.async<{boardId: string, boardName: string}, KanbanBoardState, Error>('ACTIONS_UPDATE_BOARD_NAME');\r\nconst deleteBoard =\r\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_BOARD');\r\n\r\nconst addSticky =\r\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_ADD_STICKY');\r\nconst updateSticky =\r\n    actionCreator.async<KanbanRecord, KanbanBoardState, Error>('ACTIONS_UPDATE_STICKY');\r\nconst updateStickyLanes =\r\n    actionCreator.async<UpdateStickyLanesPayload, KanbanBoardState, Error>('ACTIONS_UPDATE_STICKY_LANES');\r\nconst archiveSticky =\r\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_ARCHIVE_STICKY');\r\nconst deleteSticky =\r\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_STICKY');\r\n\r\nconst editBoardAndStickys =\r\n    actionCreator.async<KanbanBoardRecord, KanbanBoardState, Error>('ACTIONS_EDIT_BOARD_AND_STICKYS');\r\n\r\nconst refreshActiveBoard =\r\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_REFRESH_ACTIVE_BOARD');\r\n\r\n\r\nexport const kanbanBoardActions = {\r\n    startAddBoard: addBoard.started,\r\n    doneAddBoard: addBoard.done,\r\n    failedAddBoard: addBoard.failed,\r\n\r\n    startChangeActiveBoard: changeActiveBoard.started,\r\n    doneChangeActiveBoard: changeActiveBoard.done,\r\n    failedChangeActiveBoard: changeActiveBoard.failed,\r\n\r\n    startUpdateBoardName: updateBoardName.started,\r\n    doneUpdateBoardName: updateBoardName.done,\r\n    failedUpdateBoardName: updateBoardName.failed,\r\n\r\n    startDeleteBoard: deleteBoard.started,\r\n    doneDeleteBoard: deleteBoard.done,\r\n    failedDeleteBoard: deleteBoard.failed,\r\n\r\n    startAddSticky: addSticky.started,\r\n    doneAddSticky: addSticky.done,\r\n    failedAddSticky: addSticky.failed,\r\n\r\n    startUpdateSticky: updateSticky.started,\r\n    doneUpdateSticky: updateSticky.done,\r\n    failedUpdateSticky: updateSticky.failed,\r\n\r\n    startUpdateStickyLanes: updateStickyLanes.started,\r\n    doneUpdateStickyLanes: updateStickyLanes.done,\r\n    failedUpdateStickyLanes: updateStickyLanes.failed,\r\n\r\n    startArchiveSticky: archiveSticky.started,\r\n    doneArchiveSticky: archiveSticky.done,\r\n    failedArchiveSticky: archiveSticky.failed,\r\n\r\n    startDeleteSticky: deleteSticky.started,\r\n    doneDeleteSticky: deleteSticky.done,\r\n    failedDeleteSticky: deleteSticky.failed,\r\n\r\n    startEditBoardAndStickys: editBoardAndStickys.started,\r\n    doneEditBoardAndStickys: editBoardAndStickys.done,\r\n    failedEditBoardAndStickys: editBoardAndStickys.failed,\r\n\r\n    startRefreshActiveBoard: refreshActiveBoard.started,\r\n    doneRefreshActiveBoard: refreshActiveBoard.done,\r\n    failedRefreshActiveBoard: refreshActiveBoard.failed,\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { Action }             from 'typescript-fsa';\r\nimport { Dispatch }           from 'redux';\r\nimport { AppConfig,\r\n         ConfirmDialogProps,\r\n         AppState }           from '../types';\r\nimport { AppEventsActions as AppEventsActions_,\r\n         appEventsActions }   from '../actions/AppEventsActions';\r\nimport { KanbanBoardActions as KanbanBoardActions_,\r\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\r\n\r\n\r\n\r\nexport type AppEventsActions = AppEventsActions_;\r\nexport type KanbanBoardActions = KanbanBoardActions_;\r\n\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\r\n    return {\r\n        showAlertDialog: (v: ConfirmDialogProps) =>\r\n            dispatch(appEventsActions.showAlertDialog(v)),\r\n        closeAlertDialog: () =>\r\n            dispatch(appEventsActions.closeAlertDialog()),\r\n\r\n        updateAppConfig: (v: AppConfig) =>\r\n            dispatch(appEventsActions.startUpdateAppConfig(v)),\r\n        resetApplication: () =>\r\n            dispatch(appEventsActions.startResetApplication()),\r\n\r\n        // from KanbanBoardActions\r\n        changeActiveBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startChangeActiveBoard({ boardId })),\r\n        refreshActiveBoard: () =>\r\n            dispatch(kanbanBoardActions.startRefreshActiveBoard({})),\r\n    }\r\n}\r\n\r\n\r\nexport function mapStateToProps(appState: AppState) {\r\n    return Object.assign({}, appState.appEvents);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport function formatDate(d: Date) {\r\n    return `${String(d.getFullYear()).padStart(4, '0')}-${\r\n        String(d.getMonth() + 1).padStart(2, '0')}-${\r\n        String(d.getDate()).padStart(2, '0')}`;\r\n}\r\n\r\nexport function parseISODate(s: string) {\r\n    const m = s.match(/^(?:(-?\\d{4,})-(\\d{2})-(\\d{2}))|(?:(-?\\d{4,})(\\d{2})(\\d{2}))$/);\r\n    if (m) {\r\n        return new Date(Number(m[1]), Number(m[2]) - 1, Number(m[3]));\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const boardStyle =\r\n`/* per-board customized styles */\r\n/*\r\n.KanbanBoardView-sticky-note {width: 200px}\r\n.KanbanBoardView-header-cell-task-statuses {min-width: 210px}\r\ntable.KanbanBoardView-board tbody th {\r\n    padding: 10px;\r\n    white-space: nowrap;\r\n}\r\n*/\r\ntable.KanbanBoardView-board thead th.status-backlog {\r\n    background-color: var(--weak-header-bg-color);\r\n}\r\ntable.KanbanBoardView-board td.status-backlog {\r\n    background-color: var(--weak-data-bg-color);\r\n}\r\ntable.KanbanBoardView-board thead th.status-done {\r\n    background-color: var(--weak-header-bg-color);\r\n}\r\ntable.KanbanBoardView-board td.status-done {\r\n    background-color: var(--weak-data-bg-color);\r\n}\r\n.team-or-story-team-b .KanbanBoardView-sticky-note {\r\n    background-color: var(--sticky-blue-color);\r\n}\r\n.status-done .KanbanBoardView-sticky-note {\r\n    background-color: var(--sticky-green-color);\r\n}\r\n.KanbanBoardView-sticky-tags .tag-bug {\r\n    color: white;\r\n    background-color: red;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-ok {\r\n    color: white;\r\n    background-color: green;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-NG {\r\n    color: white;\r\n    background-color: #e91e63;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-PR {\r\n    color: white;\r\n    background-color: purple;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-rejected {\r\n    color: white;\r\n    background-color: #990000;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-pending {\r\n    color: black;\r\n    background-color: #ff9900;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-merged {\r\n    color: white;\r\n    background-color: #006666;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-critical {\r\n    color: white;\r\n    background-color: red;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-high {\r\n    color: white;\r\n    background-color: #ff5522;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-moderate {\r\n    color: black;\r\n    background-color: #ffcc00;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-low {\r\n    color: black;\r\n    background-color: #cc9900;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-star {\r\n    color: inherit;\r\n    background-color: inherit;\r\n}\r\n`;\r\n\r\n\r\nexport const calendarStyle =\r\n`/* per-board customized styles */\r\ndiv.CalendarView-item-chip.status-done {\r\n    background-color: var(--sticky-green-color);\r\n}\r\n`;\r\n\r\n\r\nexport const boardNote =\r\n`# This is a board note.\r\n* Markdown syntax is available.\r\n* Go [Editor](#/edit/) to edit this note.`;\r\n\r\n\r\nexport const initialData = {\r\n    \"boards\": [{\r\n        \"type\": \"kanbanBoard\",\r\n        \"name\": \"Welcome Board\",\r\n        \"taskStatuses\": [{\r\n            \"value\": \"Backlog\",\r\n            \"caption\": \"🛌 Backlog\",\r\n            \"className\": \"status-backlog\"\r\n        }, {\r\n            \"value\": \"ToDo\",\r\n            \"caption\": \"📯 ToDo\",\r\n            \"className\": \"status-todo\"\r\n        }, {\r\n            \"value\": \"InProgress\",\r\n            \"caption\": \"⛏ InProgress\",\r\n            \"className\": \"status-inprogress\"\r\n        }, {\r\n            \"value\": \"Staging\",\r\n            \"caption\": \"📦 Staging\",\r\n            \"className\": \"status-staging\"\r\n        }, {\r\n            \"value\": \"Done\",\r\n            \"caption\": \"🎉 Done\",\r\n            \"className\": \"status-done\",\r\n            \"completed\": true\r\n        }],\r\n        \"teamOrStories\": [{\r\n            \"value\": \"Team A\",\r\n            \"caption\": \"🐆 Team A\",\r\n            \"className\": \"team-or-story-team-a\"\r\n        }, {\r\n            \"value\": \"Team B\",\r\n            \"caption\": \"🦃 Team B\",\r\n            \"className\": \"team-or-story-team-b\"\r\n        }, {\r\n            \"value\": \"Team C\",\r\n            \"caption\": \"🐍 Team C\",\r\n            \"className\": \"team-or-story-team-c\"\r\n        }],\r\n        \"tags\": [{\r\n            \"value\": \"bug\",\r\n            \"className\": \"tag-bug\"\r\n        }, {\r\n            \"value\": \"ok\",\r\n            \"className\": \"tag-ok\"\r\n        }, {\r\n            \"value\": \"NG\",\r\n            \"className\": \"tag-NG\"\r\n        }, {\r\n            \"value\": \"PR\",\r\n            \"className\": \"tag-PR\"\r\n        }, {\r\n            \"value\": \"rejected\",\r\n            \"className\": \"tag-rejected\"\r\n        }, {\r\n            \"value\": \"pending\",\r\n            \"className\": \"tag-pending\"\r\n        }, {\r\n            \"value\": \"merged\",\r\n            \"className\": \"tag-merged\"\r\n        }, {\r\n            \"value\": \"critical\",\r\n            \"className\": \"tag-critical\"\r\n        }, {\r\n            \"value\": \"high\",\r\n            \"className\": \"tag-high\"\r\n        }, {\r\n            \"value\": \"moderate\",\r\n            \"className\": \"tag-moderate\"\r\n        }, {\r\n            \"value\": \"low\",\r\n            \"className\": \"tag-low\"\r\n        }, {\r\n            \"value\": \"⭐\",\r\n            \"className\": \"tag-star\"\r\n        }, {\r\n            \"value\": \"⭐⭐\",\r\n            \"className\": \"tag-star\"\r\n        }, {\r\n            \"value\": \"⭐⭐⭐\",\r\n            \"className\": \"tag-star\"\r\n        }],\r\n        \"displayBarcode\": true,\r\n        \"displayMemo\": true,\r\n        \"displayFlags\": true,\r\n        \"displayTags\": true,\r\n        \"preferArchive\": false,\r\n        \"boardStyle\": boardStyle,\r\n        \"calendarStyle\": calendarStyle,\r\n        \"boardNote\": \"\",\r\n    }],\r\n    \"records\": [{\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Welcome to the Kanban Board App!\\n\" +\r\n            \"* This is a kanban (or sticky).\\n\" +\r\n            \"* Write one task for one kanban.\\n\" +\r\n            \"* To add a kanban to the board, Tap or click the “+” icon in the upper left corner of the board.\\n\" +\r\n            \"* Tap or click on kanban to edit.\\n\" +\r\n            \"* Drag and drop the kanban to change the status.\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"* Board and Kanban data are stored in the browser's local “indexed DB”.\\n\" +\r\n            \"* You can use a remote [“CouchDB”](https://couchdb.apache.org) server to synchronize multiple device boards.\\n\" +\r\n            \"* You can get a fully managed CouchDB server with [“IBM Cloudant®” from IBM Cloud](https://www.ibm.com/cloud/cloudant).\\n\" +\r\n            \"* Create an [IBM Cloud Lite account](https://www.ibm.com/cloud/free/) and get a free tier without a credit card.\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Go [Settings](#/config/) to setup\\n\\n\" +\r\n            \"----\\n\\n\" +\r\n            \"* `remote.endpointUrl`: Cloudant `External Endpoint` URL w/ DB name\\n\" +\r\n            \"  * e.g. `https://???-bluemix.cloudant.com/mydb`\\n\" +\r\n            \"* `remote.user`: Cloudant `API Key`\\n\" +\r\n            \"* `remote.password`: Cloudant `API Key`'s password\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"* You can customize the appearance and behavior of the board and kanban in the configuration editor view.\\n\\n\\n\" +\r\n            \"----\\n\\n\" +\r\n            \"# Go [Editor](#/edit/) to setup\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"InProgress\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"2030-01-01\",\r\n        \"description\":\r\n            \"### Hello, kanban board !\\n\\n\" +\r\n            \"* ~aaa~\\n\" +\r\n            \"  * **bbb**\\n\" +\r\n            \"* *ccc*\\n\\n\" +\r\n            \"----\\n\\n\" +\r\n            \"https://shellyln.github.io/\\n\\n\" +\r\n            \"![logo](https://shellyln.github.io/assets/image/shellyln.png)\",\r\n        \"barcode\": \"12345\",\r\n        \"memo\": \"memo\",\r\n        \"flags\": [\"Marked\"],\r\n        \"tags\": [\"PR\", \"bug\", \"ok\", \"NG\", \"rejected\", \"pending\", \"merged\", \"critical\", \"high\", \"moderate\", \"low\", \"⭐⭐⭐\"],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"Staging\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# What is a Kanban Board?\\n\" +\r\n            \"https://www.atlassian.com/agile/kanban/boards\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# What are WIP limits?\\n\" +\r\n            \"https://www.atlassian.com/agile/kanban/wip-limits\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Get Started With Cloudant in IBM Cloud\\n\" +\r\n            \"https://developer.ibm.com/clouddataservices/docs/cloudant/get-started/\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Sign up for IBM Cloud\\n\" +\r\n            \"https://cloud.ibm.com/registration\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"Release Kanban board app v0.0.1\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [\"ok\", \"merged\", \"v0.0.1\", \"feature-something\", \"#1\", \"#2\"],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team A\",\r\n        \"taskStatus\": \"Done\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"2030-01-01\",\r\n        \"description\": \"This record is archived.\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [\"Archived\"],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }]\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { reducerWithInitialState,\r\n         ReducerBuilder }         from 'typescript-fsa-reducers';\r\nimport { push }                   from 'connected-react-router';\r\nimport { KanbanBoardState,\r\n         KanbanBoardInitialData,\r\n         DocumentWithContents,\r\n         KanbanBoardDbRecord,\r\n         KanbanBoardDbRecordUserData,\r\n         KanbanBoardRecord,\r\n         KanbanRecord }           from '../types';\r\nimport { appEventsActions }       from '../actions/AppEventsActions';\r\nimport { kanbanBoardActions }     from '../actions/KanbanBoardActions';\r\nimport { restartSync,\r\n         getLocalDb }             from '../lib/db';\r\nimport { formatDate }             from '../lib/datetime';\r\nimport { getConstructedAppStore } from '../store';\r\nimport { initialData,\r\n         boardNote }              from '../data/initial-data';\r\n\r\n\r\n\r\nlet kanbanBoardReducer: ReducerBuilder<KanbanBoardState, KanbanBoardState> = null as any;\r\n\r\nexport async function getKanbanBoardReducer() {\r\n    if (!kanbanBoardReducer) {\r\n        const db = getLocalDb();\r\n\r\n        // TODO: try-catch\r\n        let resp: PouchDB.Core.AllDocsResponse<DocumentWithContents> = null as any;\r\n\r\n        resp = await db.allDocs({\r\n            include_docs: true,\r\n        });\r\n\r\n        if (resp.rows.length === 0) {\r\n            const data: KanbanBoardInitialData = initialData as any;\r\n\r\n            const postRespBoards = await db.bulkDocs([\r\n                ...data.boards.map(x => Object.assign({}, x, { boardNote })),\r\n            ], {});\r\n\r\n            const now = new Date();\r\n            for (const rec of data.records) {\r\n                rec.dueDate = formatDate(now);\r\n                rec.boardId = postRespBoards[0].id as string;\r\n            }\r\n            await db.bulkDocs([\r\n                ...data.records,\r\n            ], {});\r\n\r\n            resp = await db.allDocs({\r\n                include_docs: true,\r\n            });\r\n        }\r\n\r\n        const boards: KanbanBoardRecord[] = resp.rows\r\n            .filter(x => x.doc && x.doc.type === 'kanbanBoard')\r\n            .map(x => x.doc)\r\n            .sort((a: any, b: any) =>\r\n                String(a.name).toLocaleLowerCase() >= String(b.name).toLocaleLowerCase() ?\r\n                (String(a.name) === String(b.name) ? 0 : 1) : -1) as any;\r\n        for (const board of boards) {\r\n            const records: KanbanRecord[] = resp.rows\r\n                .filter(x => x.doc && x.doc.type === 'kanban' &&\r\n                    (x.doc as KanbanRecord).boardId === board._id)\r\n                .map(x => x.doc) as any;\r\n            board.records = records;\r\n        }\r\n\r\n        const initialState: KanbanBoardState = {\r\n            activeBoard: boards[0],\r\n            boards: boards,\r\n            activeBoardId: boards[0]._id,\r\n            activeBoardIndex: 0,\r\n        };\r\n\r\n        const getKanbanBoardStateFromDb = async (state: KanbanBoardState, boardId: string) => {\r\n            const board = await db.get<KanbanBoardRecord>(boardId, {});\r\n            if (! board) {\r\n                return state;\r\n            }\r\n            const records: KanbanRecord[] = (await db.find({selector: {\r\n                type: 'kanban',\r\n                boardId: board._id,\r\n            }})).docs as any;\r\n        \r\n            board.records = records;\r\n            const index = Math.max(0, state.boards.findIndex(x => x._id === board._id));\r\n            const boards = state.boards.slice(0, index).concat(\r\n                [board],\r\n                state.boards.slice(index + 1),\r\n            );\r\n\r\n            return (Object.assign({}, state, {\r\n                boards,\r\n                activeBoardId: board._id,\r\n                activeBoard: board,\r\n                activeBoardIndex: index,\r\n            }));\r\n        }\r\n\r\n        kanbanBoardReducer = reducerWithInitialState(initialState)\r\n            //// addBoard async actions ////\r\n            .case(kanbanBoardActions.startAddBoard, (state, payload) => {\r\n                const data: KanbanBoardInitialData = initialData as any;\r\n                const board: KanbanBoardDbRecordUserData = {\r\n                    type: 'kanbanBoard',\r\n                    name: payload.boardName,\r\n                    taskStatuses: data.boards[0].taskStatuses,\r\n                    teamOrStories: data.boards[0].teamOrStories,\r\n                    tags: data.boards[0].tags,\r\n                    displayBarcode: data.boards[0].displayBarcode,\r\n                    displayMemo: data.boards[0].displayMemo,\r\n                    displayFlags: data.boards[0].displayFlags,\r\n                    displayTags: data.boards[0].displayTags,\r\n                    preferArchive: data.boards[0].preferArchive,\r\n                    boardStyle: data.boards[0].boardStyle,\r\n                    calendarStyle: data.boards[0].calendarStyle,\r\n                    boardNote: data.boards[0].boardNote,\r\n                };\r\n                db.post(board, {})\r\n                .then(v => {\r\n                    const saved: KanbanBoardRecord = board as any;\r\n                    saved._id = v.id;\r\n                    saved._rev = v.rev;\r\n                    saved.records = [];\r\n                    state.boards = state.boards.concat([saved]);\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddBoard({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoardId: v.id, activeBoard: saved }),\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(push(`/kanban/${v.id}`));\r\n                    }, 30);\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddBoard({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to add board: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneAddBoard, (state, arg) => {\r\n                setTimeout(() => {\r\n                    restartSync()\r\n                    .then(() => {\r\n                        //\r\n                    }).catch(err => {\r\n                        alert(err.message);\r\n                    })\r\n                }, 1500);\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedAddBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// changeActiveBoard async actions ////\r\n            .case(kanbanBoardActions.startChangeActiveBoard, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const newState = await getKanbanBoardStateFromDb(state, payload.boardId);\r\n\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneChangeActiveBoard({\r\n                            params: payload,\r\n                            result: newState,\r\n                        }));\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedChangeActiveBoard({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to change active board: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => {\r\n                                    getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog());\r\n                                    setTimeout(() => {\r\n                                        getConstructedAppStore().dispatch(push(`/kanban/`));\r\n                                    }, 500);\r\n                                },\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneChangeActiveBoard, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedChangeActiveBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// updateBoardName async actions ////\r\n            .case(kanbanBoardActions.startUpdateBoardName, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const dbBoard = await db.get<KanbanBoardRecord>(payload.boardId);\r\n                        if (! dbBoard) {\r\n                            return state;\r\n                        }\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: dbBoard._id,\r\n                        }})).docs as any;\r\n\r\n                        const change = Object.assign({}, dbBoard, { name: payload.boardName });\r\n                        const saved = await db.put(change, {});\r\n\r\n                        change.records = records;\r\n                        change._id = saved.id;\r\n                        change._rev = saved.rev;\r\n\r\n                        const index = state.boards.findIndex(x => x._id === payload.boardId);\r\n                        const board = Object.assign({}, state.boards[index] || {}, change);\r\n\r\n                        const boards = index >= 0 ?\r\n                            state.boards.slice(0, index).concat(\r\n                                [board],\r\n                                state.boards.slice(index + 1),\r\n                            ) : state.boards;\r\n\r\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateBoardName({\r\n                            params: payload,\r\n                            result: Object.assign({}, state, {\r\n                                boards,\r\n                                activeBoardId: board._id,\r\n                                activeBoard: board,\r\n                            }),\r\n                        }));\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateBoardName({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to change board name: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneUpdateBoardName, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedUpdateBoardName, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// deleteBoard async actions ////\r\n            .case(kanbanBoardActions.startDeleteBoard, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        if (state.boards.length <= 1) {\r\n                            return state;\r\n                        }\r\n                        const dbBoard = await db.get<KanbanBoardDbRecord>(payload.boardId);\r\n                        if (! dbBoard) {\r\n                            return state;\r\n                        }\r\n\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: payload.boardId,\r\n                        }})).docs as any;\r\n\r\n                        for (const record of records) {\r\n                            await db.remove(record, {});\r\n                        }\r\n\r\n                        await db.remove(dbBoard, {});\r\n\r\n                        const activeBoardId = state.activeBoardId === payload.boardId ?\r\n                            state.boards[0]._id : state.activeBoardId;\r\n                        const newState = await getKanbanBoardStateFromDb(state, activeBoardId);\r\n\r\n                        const index = newState.boards.findIndex(x => x._id === payload.boardId);\r\n\r\n                        const boards = index >= 0 ?\r\n                            newState.boards.slice(0, index).concat(\r\n                                newState.boards.slice(index + 1),\r\n                            ) : newState.boards;\r\n\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteBoard({\r\n                                params: payload,\r\n                                result: Object.assign({}, state, {\r\n                                    boards,\r\n                                    activeBoardId,\r\n                                    activeBoard: newState.activeBoard,\r\n                                    activeBoardIndex: newState.boards.findIndex(x => x._id === activeBoardId),\r\n                                }),\r\n                            }));\r\n                            setTimeout(() => {\r\n                                getConstructedAppStore().dispatch(push(`/kanban/${activeBoardId}`));\r\n                                setTimeout(() => {\r\n                                    getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                        open: true,\r\n                                        title: 'Done',\r\n                                        message: 'Board is deleted successfully',\r\n                                        singleButton: true,\r\n                                        onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                                    }));\r\n                                }, 30);\r\n                            }, 30);\r\n                        }, 30);\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteBoard({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to delete board: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneDeleteBoard, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedDeleteBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// addSticky async actions ////\r\n            .case(kanbanBoardActions.startAddSticky, (state, payload) => {\r\n                const now = new Date();\r\n                const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n\r\n                const change: KanbanRecord = {\r\n                    type: 'kanban',\r\n                    dueDate: formatDate(today),\r\n                    description: '# Untitled',\r\n                    barcode: '',\r\n                    memo: '',\r\n                    flags: [],\r\n                    tags: [],\r\n                    boardId: state.activeBoardId,\r\n                    taskStatus: state.activeBoard.taskStatuses[0].value,\r\n                    teamOrStory: state.activeBoard.teamOrStories[0].value,\r\n                } as any;\r\n\r\n                const records = state.activeBoard.records.concat([change]);\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.post(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to add sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneAddSticky, (state, arg) => {\r\n                setTimeout(() => {\r\n                    restartSync()\r\n                    .then(() => {\r\n                        //\r\n                    }).catch(err => {\r\n                        alert(err.message);\r\n                    })\r\n                }, 1500);\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedAddSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// updateSticky async actions ////\r\n            .case(kanbanBoardActions.startUpdateSticky, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload._id);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = Object.assign({}, state.activeBoard.records[index], {\r\n                    dueDate: payload.dueDate,\r\n                    description: payload.description,\r\n                    barcode: payload.barcode,\r\n                    memo: payload.memo,\r\n                    tags: payload.tags,\r\n                    flags: payload.flags,\r\n                    taskStatus: payload.taskStatus,\r\n                    teamOrStory: payload.teamOrStory,\r\n                });\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    [change],\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.put(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to save the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneUpdateSticky, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedUpdateSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// updateStickyLanes async actions ////\r\n            .case(kanbanBoardActions.startUpdateStickyLanes, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = Object.assign({}, state.activeBoard.records[index], {\r\n                    taskStatus: payload.taskStatusValue,\r\n                    teamOrStory: payload.teamOrStoryValue,\r\n                });\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    [change],\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.put(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateStickyLanes({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateStickyLanes({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to save the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneUpdateStickyLanes, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedUpdateStickyLanes, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// archiveSticky async actions ////\r\n            .case(kanbanBoardActions.startArchiveSticky, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = Object.assign({}, state.activeBoard.records[index]);\r\n                change.flags = (change.flags || []).filter(x => x !== 'Archived');\r\n                change.flags.push('Archived');\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    [change],\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.put(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneArchiveSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedArchiveSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to archive the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneArchiveSticky, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedArchiveSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// deleteSticky async actions ////\r\n            .case(kanbanBoardActions.startDeleteSticky, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = state.activeBoard.records[index];\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.remove(change, {})\r\n                .then(v => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to delete the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneDeleteSticky, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedDeleteSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// editBoardAndStickys async actions ////\r\n            .case(kanbanBoardActions.startEditBoardAndStickys, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const index = state.boards.findIndex(x => x._id === payload._id);\r\n                        if (index < 0) {\r\n                            return state;\r\n                        }\r\n\r\n                        const change = Object.assign({}, state.boards[index], {\r\n                            name: payload.name || 'Untitled',\r\n                            taskStatuses: payload.taskStatuses || initialData.boards[0].taskStatuses,\r\n                            teamOrStories: payload.teamOrStories || initialData.boards[0].teamOrStories,\r\n                            tags: payload.tags || [],\r\n                            displayBarcode: !!payload.displayBarcode,\r\n                            displayMemo: !!payload.displayMemo,\r\n                            displayFlags: !!payload.displayFlags,\r\n                            displayTags: !!payload.displayTags,\r\n                            preferArchive: !!payload.preferArchive,\r\n                            boardStyle: payload.boardStyle || '',\r\n                            calendarStyle: payload.calendarStyle || '',\r\n                            boardNote: payload.boardNote || '',\r\n                        });\r\n\r\n                        const v = await db.put(change, {});\r\n                        change._id = v.id;\r\n                        change._rev = v.rev;\r\n\r\n                        const boards = state.boards.slice(0, index).concat(\r\n                            [change],\r\n                            state.boards.slice(index + 1),\r\n                        );\r\n                        let activeBoard = change._id === state.activeBoard._id ? change : state.activeBoard;\r\n\r\n                        // TODO: sticky records\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: change._id,\r\n                        }})).docs as any;\r\n\r\n                        const recordsNew: KanbanRecord[] = [];\r\n                        for (const rec of payload.records || []) {\r\n                            const recDb = records.find(x => x._id === rec._id);\r\n                            let recNew: KanbanRecord = null as any;\r\n                            if (recDb) {\r\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id, _rev: recDb._rev });\r\n                                const resp = await db.put(recNew, {});\r\n                                recNew._id = resp.id;\r\n                                recNew._rev = resp.rev;\r\n                            } else {\r\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id });\r\n                                delete recNew._id;\r\n                                delete recNew._rev;\r\n                                const resp = await db.post(recNew, {});\r\n                                recNew._id = resp.id;\r\n                                recNew._rev = resp.rev;\r\n                            }\r\n                            recordsNew.push(recNew);\r\n                        }\r\n                        for (const recDb of records) {\r\n                            const recNew = recordsNew.find(x => x._id === recDb._id);\r\n                            if (! recNew) {\r\n                                await db.remove(recDb, {});\r\n                            }\r\n                        }\r\n                        change.records = recordsNew;\r\n\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneEditBoardAndStickys({\r\n                            params: payload,\r\n                            result: Object.assign({}, state, {\r\n                                boards,\r\n                                activeBoardId: activeBoard._id,\r\n                                activeBoard: activeBoard,\r\n                            }),\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Done',\r\n                                message: 'Board is saved successfully',\r\n                                singleButton: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedEditBoardAndStickys({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to save the board: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneEditBoardAndStickys, (state, arg) => {\r\n                setTimeout(() => {\r\n                    restartSync()\r\n                    .then(() => {\r\n                        //\r\n                    }).catch(err => {\r\n                        alert(err.message);\r\n                    })\r\n                }, 1500);\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedEditBoardAndStickys, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// refreshActiveBoard async actions ////\r\n            .case(kanbanBoardActions.startRefreshActiveBoard, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const newState = await getKanbanBoardStateFromDb(state, state.activeBoard._id);\r\n\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneRefreshActiveBoard({\r\n                            params: payload,\r\n                            result: newState,\r\n                        }));\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedRefreshActiveBoard({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneRefreshActiveBoard, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedRefreshActiveBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n            ;\r\n    }\r\n    return kanbanBoardReducer;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport actionCreatorFactory,\r\n       { Action }             from 'typescript-fsa';\r\nimport { KanbanRecord,\r\n         ConfirmDialogProps } from '../types';\r\n\r\n\r\n\r\nexport interface CalendarActions {\r\n    showToday: () =>\r\n        Action<void>;\r\n    showNextMonth: () =>\r\n        Action<void>;\r\n    showPreviousMonth: () =>\r\n        Action<void>;\r\n    showNextYear: () =>\r\n        Action<void>;\r\n    showPreviousYear: () =>\r\n        Action<void>;\r\n\r\n    // from KanbanBoardActions\r\n    changeActiveBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n        Action<{boardId: string, boardName: string}>;\r\n    updateSticky: (v: KanbanRecord) =>\r\n        Action<KanbanRecord>;\r\n    archiveSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n    deleteSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n\r\n    // from AppEventsActions\r\n    showAlertDialog: (v: ConfirmDialogProps) =>\r\n        Action<ConfirmDialogProps>;\r\n    closeAlertDialog: () =>\r\n        Action<void>;\r\n}\r\n\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\nexport const calendarActions = {\r\n    showToday: actionCreator<void>('ACTIONS_SHOW_TODAY'),\r\n    showNextMonth: actionCreator<void>('ACTIONS_SHOW_NEXT_MONTH'),\r\n    showPreviousMonth: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_MONTH'),\r\n    showNextYear: actionCreator<void>('ACTIONS_SHOW_NEXT_YEAR'),\r\n    showPreviousYear: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_YEAR'),\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { reducerWithInitialState,\r\n         ReducerBuilder }         from 'typescript-fsa-reducers';\r\nimport { CalendarState }          from '../types';\r\nimport { calendarActions }        from '../actions/CalendarActions';\r\n\r\n\r\n\r\nlet calendarReducer: ReducerBuilder<CalendarState, CalendarState> = null as any;\r\n\r\nexport async function getCalendarReducer() {\r\n    if (!calendarReducer) {\r\n        const initialState: CalendarState = {\r\n            activeMonth: new Date(), // TODO: not impl\r\n        };\r\n        calendarReducer = reducerWithInitialState(initialState)\r\n            .case(calendarActions.showToday, (state) => {\r\n                const now = new Date();\r\n                const m = new Date(now.getFullYear(), now.getMonth(), 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showNextMonth, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear(), now.getMonth() + 1, 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showPreviousMonth, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear(), now.getMonth() - 1, 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showNextYear, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear() + 1, now.getMonth(), 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showPreviousYear, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear() - 1, now.getMonth(), 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            ;\r\n    }\r\n    return calendarReducer;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { reducerWithInitialState,\r\n         ReducerBuilder }         from 'typescript-fsa-reducers';\r\nimport { AppEventsState }         from '../types';\r\nimport { appEventsActions }       from '../actions/AppEventsActions';\r\nimport { getLocalConfigDb,\r\n         getLocalDb,\r\n         setRemoteDb }            from '../lib/db';\r\nimport { getConstructedAppStore } from '../store';\r\n\r\n\r\n\r\nlet appEventsReducer: ReducerBuilder<AppEventsState, AppEventsState> = null as any;\r\n\r\nexport async function getAppEventsReducer() {\r\n    if (!appEventsReducer) {\r\n        const confDb = getLocalConfigDb();\r\n        const db = getLocalDb();\r\n\r\n        // TODO: try-catch\r\n        let resp: PouchDB.Core.AllDocsResponse<{}> = null as any;\r\n\r\n        resp = await confDb.allDocs({\r\n            include_docs: true,\r\n        });\r\n\r\n        const defaultAppConfig = {\r\n            remote: {\r\n                endpointUrl: '',\r\n                user: '',\r\n                password: '',\r\n            },\r\n            display: {\r\n                autoUpdate: false,\r\n                autoUpdateInterval: 2419200,\r\n            },\r\n        };\r\n\r\n        if (resp.rows.length === 0) {\r\n            await confDb.post({\r\n                type: 'appConfig',\r\n                ...defaultAppConfig,\r\n            }, {});\r\n\r\n            resp = await confDb.allDocs({\r\n                include_docs: true,\r\n            });\r\n        }\r\n\r\n        const initialState: AppEventsState = {\r\n            alertDialog: {\r\n                open: false,\r\n                title: '',\r\n                message: '',\r\n                onClose: () => void 0,\r\n            },\r\n            appConfig: {\r\n                ...defaultAppConfig,\r\n                ...resp.rows[0].doc,\r\n            } as any,\r\n        };\r\n\r\n        if (initialState.appConfig.remote && initialState.appConfig.remote.endpointUrl) {\r\n            setRemoteDb(\r\n                initialState.appConfig.remote.endpointUrl,\r\n                initialState.appConfig.remote.user || '',\r\n                initialState.appConfig.remote.password || '',\r\n            )\r\n            .then(() => {\r\n                //\r\n            })\r\n            .catch(err => {\r\n                alert('Failed to connect to the remote DB: ' + err.message);\r\n            });\r\n        } else {\r\n            setRemoteDb('', '', '')\r\n            .then(() => {\r\n                //\r\n            })\r\n            .catch(err => {\r\n                alert('Failed to connect to the remote DB: ' + err.message);\r\n            });\r\n        }\r\n\r\n        appEventsReducer = reducerWithInitialState(initialState)\r\n            .case(appEventsActions.showAlertDialog, (state, payload) => {\r\n                return Object.assign({}, state, {\r\n                    alertDialog: payload,\r\n                });\r\n            })\r\n            .case(appEventsActions.closeAlertDialog, (state) => {\r\n                return Object.assign({}, state, {\r\n                    alertDialog: initialState,\r\n                });\r\n            })\r\n\r\n            //// updateAppConfig async actions ////\r\n            .case(appEventsActions.startUpdateAppConfig, (state, payload) => {\r\n                const newConf = Object.assign({}, state.appConfig,\r\n                    payload.remote && payload.remote.endpointUrl ?\r\n                        { remote: payload.remote } :\r\n                        { remote: defaultAppConfig.remote },\r\n                    payload.display ?\r\n                        { display: payload.display } :\r\n                        { display: defaultAppConfig.display }\r\n                );\r\n\r\n                confDb.put(newConf, {})\r\n                .then(v => {\r\n                    newConf._id = v.id;\r\n                    newConf._rev = v.rev;\r\n\r\n                    getConstructedAppStore().dispatch(appEventsActions.doneUpdateAppConfig({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { appConfig: newConf }),\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Done',\r\n                            message: 'Settings is saved successfully',\r\n                            singleButton: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n\r\n                    if (newConf.remote.endpointUrl) {\r\n                        setRemoteDb(\r\n                            newConf.remote.endpointUrl,\r\n                            newConf.remote.user,\r\n                            newConf.remote.password,\r\n                        )\r\n                        .then(() => {\r\n                            //\r\n                        })\r\n                        .catch(err => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to connect to the remote DB: ' + err.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(appEventsActions.failedUpdateAppConfig({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to update settings: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// resetApplication async actions ////\r\n            .case(appEventsActions.startResetApplication, (state) => {\r\n                (async () => {\r\n                    try {\r\n                        try {\r\n                            await setRemoteDb('', '', '');\r\n                        } catch (e) {\r\n                            alert(e);\r\n                        }\r\n                        try {\r\n                            await db.destroy({});\r\n                        } catch (e) {\r\n                            alert(e);\r\n                        }\r\n                        try {\r\n                            await confDb.destroy({});\r\n                        } catch (e) {\r\n                            alert(e);\r\n                        }\r\n\r\n                        alert('All app data and configurations are removed. Please reload page.');\r\n\r\n                        getConstructedAppStore().dispatch(appEventsActions.doneResetApplication({\r\n                            result: state,\r\n                        }));\r\n                    } catch (e) {\r\n                        alert(e);\r\n                        getConstructedAppStore().dispatch(appEventsActions.failedResetApplication({\r\n                            error: e,\r\n                        }));\r\n                    }\r\n                })();\r\n\r\n                return state;\r\n            })\r\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\r\n                return state;\r\n            })\r\n            ;\r\n    }\r\n    return appEventsReducer;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { createStore,\r\n         combineReducers, \r\n         applyMiddleware,\r\n         compose,\r\n         Store,\r\n         AnyAction }             from 'redux';\r\nimport { createHashHistory }     from 'history';\r\nimport { connectRouter,\r\n         routerMiddleware }      from 'connected-react-router';\r\nimport { AppState }              from './types';\r\nimport { getKanbanBoardReducer } from './states/KanbanBoardState';\r\nimport { getCalendarReducer }    from './states/CalendarState';\r\nimport { getAppEventsReducer }   from './states/AppEventsState';\r\n\r\n\r\n\r\nexport const history = createHashHistory({\r\n    hashType: 'slash',\r\n});\r\n\r\n\r\nlet store: Store<AppState, AnyAction> = null as any;\r\n\r\n\r\nexport function getConstructedAppStore() {\r\n    return store;\r\n}\r\n\r\n\r\nexport default async function getAppStore() {\r\n    if (!store) {\r\n        store = createStore(\r\n            combineReducers<AppState>({\r\n                router: connectRouter(history),\r\n                appEvents: await getAppEventsReducer(),\r\n                kanbanBoard: await getKanbanBoardReducer(),\r\n                calendar: await getCalendarReducer(),\r\n            }),\r\n            compose(\r\n                applyMiddleware(\r\n                    routerMiddleware(history),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n    return store;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { Action }             from 'typescript-fsa';\r\nimport { Dispatch }           from 'redux';\r\nimport { KanbanBoardRecord,\r\n         KanbanRecord,\r\n         UpdateStickyLanesPayload,\r\n         ConfirmDialogProps,\r\n         AppState }           from '../types';\r\nimport { AppEventsActions as AppEventsActions_,\r\n         appEventsActions } from '../actions/AppEventsActions';\r\nimport { KanbanBoardActions as KanbanBoardActions_,\r\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\r\n\r\n\r\n\r\nexport type AppEventsActions = AppEventsActions_;\r\nexport type KanbanBoardActions = KanbanBoardActions_;\r\n\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\r\n    return {\r\n        addBoard: (boardName: string) =>\r\n            dispatch(kanbanBoardActions.startAddBoard({ boardName })),\r\n        changeActiveBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startChangeActiveBoard({ boardId })),\r\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\r\n        deleteBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startDeleteBoard({ boardId })),\r\n\r\n        addSticky: () =>\r\n            dispatch(kanbanBoardActions.startAddSticky({})),\r\n        updateSticky: (v: KanbanRecord) =>\r\n            dispatch(kanbanBoardActions.startUpdateSticky(v)),\r\n        updateStickyLanes: (v: UpdateStickyLanesPayload) =>\r\n            dispatch(kanbanBoardActions.startUpdateStickyLanes(v)),\r\n        archiveSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startArchiveSticky({ kanbanId })),\r\n        deleteSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startDeleteSticky({ kanbanId })),\r\n\r\n        editBoardAndStickys: (v: KanbanBoardRecord) =>\r\n            dispatch(kanbanBoardActions.startEditBoardAndStickys(v)),\r\n\r\n        refreshActiveBoard: () =>\r\n            dispatch(kanbanBoardActions.startRefreshActiveBoard({})),\r\n\r\n        // from AppEventsActions\r\n        showAlertDialog: (v: ConfirmDialogProps) =>\r\n            dispatch(appEventsActions.showAlertDialog(v)),\r\n        closeAlertDialog: () =>\r\n            dispatch(appEventsActions.closeAlertDialog()),\r\n    };\r\n}\r\n\r\n\r\nexport function mapStateToProps(appState: AppState) {\r\n    return Object.assign({}, appState.kanbanBoard);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet gensymSeed = 0;\r\n\r\nexport default function gensym(): string {\r\n    return `$$gensym$$_xjKvAjFXoVtro45V_${gensymSeed++}$$`;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                    from 'react';\r\nimport Button                   from '@material-ui/core/Button';\r\nimport TextField                from '@material-ui/core/TextField';\r\nimport Dialog                   from '@material-ui/core/Dialog';\r\nimport DialogActions            from '@material-ui/core/DialogActions';\r\nimport DialogContent            from '@material-ui/core/DialogContent';\r\nimport DialogContentText        from '@material-ui/core/DialogContentText';\r\nimport DialogTitle              from '@material-ui/core/DialogTitle';\r\nimport CheckIcon                from '@material-ui/icons/Check';\r\nimport CancelIcon               from '@material-ui/icons/Cancel';\r\nimport { useTheme }             from '@material-ui/core/styles';\r\nimport gensym                   from '../lib/gensym';\r\nimport { TextInputDialogProps } from '../types';\r\n\r\n\r\n\r\nconst TextInputDialog: React.FC<TextInputDialogProps> = (props) => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [value, setValue] = React.useState(props.value);\r\n\r\n    const formDialogTitleId = gensym();\r\n\r\n    function handleCancelClick() {\r\n        setOpen(false);\r\n        props.onClose(false);\r\n    }\r\n\r\n    function handleApplyClick() {\r\n        setOpen(false);\r\n        props.onClose(true, value);\r\n    }\r\n\r\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\r\n            <DialogTitle id={formDialogTitleId}>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                {props.message ?\r\n                    <DialogContentText>{props.message}</DialogContentText> :\r\n                    <></>\r\n                }\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={props.fieldLabel}\r\n                    fullWidth\r\n                    value={value}\r\n                    error={props.validator ? props.validator(value) : false}\r\n                    onChange={handleValueChange}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick={handleCancelClick}>\r\n                    <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Cancel'}\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\r\n                    disabled={props.validator ? props.validator(value) : false}\r\n                    onClick={handleApplyClick}>\r\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Apply'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\nexport default TextInputDialog;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                  from 'react';\r\nimport { connect }            from 'react-redux';\r\nimport { withRouter,\r\n         RouteChildrenProps } from 'react-router';\r\nimport Drawer                 from '@material-ui/core/Drawer';\r\nimport Divider                from '@material-ui/core/Divider';\r\nimport IconButton             from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon        from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon       from '@material-ui/icons/ChevronRight';\r\nimport AddBoxIcon             from '@material-ui/icons/AddBox';\r\nimport TableChartIcon         from '@material-ui/icons/TableChart';\r\nimport CalendarTodayIcon      from '@material-ui/icons/CalendarToday';\r\nimport EditIcon               from '@material-ui/icons/Edit';\r\nimport SettingsIcon           from '@material-ui/icons/Settings';\r\nimport HelpIcon               from '@material-ui/icons/Help';\r\nimport ExpandLessIcon         from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon         from '@material-ui/icons/ExpandMore';\r\nimport Collapse               from '@material-ui/core/Collapse';\r\nimport List                   from '@material-ui/core/List';\r\nimport ListSubheader          from '@material-ui/core/ListSubheader';\r\nimport ListItem               from '@material-ui/core/ListItem';\r\nimport ListItemIcon           from '@material-ui/core/ListItemIcon';\r\nimport ListItemText           from '@material-ui/core/ListItemText';\r\nimport { makeStyles }         from '@material-ui/core/styles';\r\nimport useMediaQuery          from '@material-ui/core/useMediaQuery';\r\nimport clsx                   from 'clsx';\r\nimport { KanbanBoardState }   from '../types';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         KanbanBoardActions } from '../dispatchers/KanbanBoardDispatcher';\r\nimport { getCurrentView }     from '../lib/util';\r\nimport TextInputDialog        from '../components/TextInputDialog';\r\n\r\n\r\n\r\ntype AppDrawerProps = KanbanBoardState & KanbanBoardActions & RouteChildrenProps<{}>;\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(6) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(6) + 1,\r\n        },\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\n\r\nconst AppDrawer: React.FC<AppDrawerProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [textInputOpen, setTextInputOpen] = React.useState({\r\n        open: false,\r\n        title: '',\r\n        message: '',\r\n        fieldLabel: '',\r\n        value: '',\r\n        validator: (value: string) => value.trim().length <= 0,\r\n        onClose: handleCloseDialogAddNewBoard,\r\n    });\r\n    const [boardsOpen, setBoardsOpen] = React.useState(true);\r\n    const matchesPrint = useMediaQuery('print');\r\n\r\n    function handleDrawerToggle() {\r\n        setOpen(!open);\r\n    }\r\n\r\n    function handleClickChangeActiveBoard(id: string) {\r\n        let view = 'kanban';\r\n        if (props.history.location.pathname) {\r\n            if (props.history.location.pathname.startsWith('/calendar/')) {\r\n                view = 'calendar';\r\n            } else if (props.history.location.pathname.startsWith('/edit/')) {\r\n                view = 'edit';\r\n            }\r\n        }\r\n        props.history.push(`/${view}/${id}`);\r\n    }\r\n\r\n    function handleClickAddNewBoard() {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, {\r\n            open: true,\r\n            title: 'New board',\r\n            message: '',\r\n            fieldLabel: 'Board name',\r\n            value: '',\r\n        }));\r\n    }\r\n    \r\n    function handleCloseDialogAddNewBoard(apply: boolean, value?: string) {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\r\n        if (apply && value) {\r\n            props.addBoard(value);\r\n        }\r\n    }\r\n\r\n    function handleChangeView(viewName: string, id: string) {\r\n        if (id === props.activeBoardId) {\r\n            props.history.push(`/${viewName}/${id}`);\r\n        }\r\n    }\r\n\r\n    function handleBoardsOpenClick() {\r\n        setBoardsOpen(!boardsOpen);\r\n    }\r\n\r\n    let currentView = getCurrentView(props.history);\r\n\r\n    return (\r\n        <>\r\n            {!matchesPrint ?\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    className={clsx(classes.drawer, {\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    })}\r\n                    classes={{\r\n                        paper: clsx({\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open,\r\n                        }),\r\n                    }}\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    >\r\n                    <div className={''}>\r\n                        <IconButton onClick={handleDrawerToggle}>\r\n                            {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    {open ?\r\n                        <>\r\n                            <List\r\n                                component=\"nav\"\r\n                                aria-labelledby=\"nested-list-subheader\"\r\n                                subheader={\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                        Boards\r\n                                    </ListSubheader>\r\n                                }>\r\n                                <ListItem button\r\n                                    onClick={handleBoardsOpenClick}>\r\n                                    {boardsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                                </ListItem>\r\n                                <Collapse in={boardsOpen} timeout=\"auto\" unmountOnExit>\r\n                                    <List component=\"div\" disablePadding>\r\n                                        {props.boards.map(x =>\r\n                                            <ListItem button\r\n                                                    key={x._id}\r\n                                                    selected={x._id === props.activeBoardId}\r\n                                                    className={clsx(classes.nested)}\r\n                                                    style={{fontWeight: x._id === props.activeBoardId ? 'bold' : 'normal'}}\r\n                                                    onClick={ev => handleClickChangeActiveBoard(x._id)} >\r\n                                                <ListItemText\r\n                                                    primary={x.name} />\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </List>\r\n                                </Collapse>\r\n                            </List>\r\n                            <ListItem button\r\n                                onClick={handleClickAddNewBoard}>\r\n                                <ListItemIcon><AddBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"New board...\" />\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                    <List>\r\n                        {/* settings */}\r\n                        <ListItem button\r\n                                selected={currentView === 'kanban' || currentView === ''}\r\n                                onClick={ev => handleChangeView('kanban', props.activeBoardId)}>\r\n                            <ListItemIcon><TableChartIcon /></ListItemIcon>\r\n                            {open ? <ListItemText primary=\"Kanban\" /> : <></>}\r\n                        </ListItem>\r\n                        <ListItem button\r\n                                selected={currentView === 'calendar'}\r\n                                onClick={ev => handleChangeView('calendar', props.activeBoardId)}>\r\n                            <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\r\n                            {open ? <ListItemText primary=\"Calendar\" /> : <></>}\r\n                        </ListItem>\r\n                        <ListItem button\r\n                                selected={currentView === 'edit'}\r\n                                onClick={ev => handleChangeView('edit', props.activeBoardId)}>\r\n                            <ListItemIcon><EditIcon /></ListItemIcon>\r\n                            {open ? <ListItemText primary=\"Editor\" /> : <></>}\r\n                        </ListItem>\r\n                    </List>\r\n                    {open ?\r\n                        <>\r\n                            <Divider />\r\n                            <ListItem button\r\n                                    selected={currentView === 'config'}\r\n                                    onClick={ev => props.history.push(`/config/`)}>\r\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                                {open ? <ListItemText primary=\"Settings\" /> : <></>}\r\n                            </ListItem>\r\n                            <List>\r\n                                <ListItem button\r\n                                        onClick={ev => window.open('https://github.com/shellyln/kanban-board-app#tips', '_blank')}>\r\n                                    <ListItemIcon><HelpIcon /></ListItemIcon>\r\n                                    {open ? <ListItemText primary=\"Help\" /> : <></>}\r\n                                </ListItem>\r\n                            </List>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </Drawer> :\r\n                <></>\r\n            }\r\n            {textInputOpen.open ?\r\n                <TextInputDialog\r\n                    open={true}\r\n                    title={textInputOpen.title}\r\n                    message={textInputOpen.message}\r\n                    fieldLabel={textInputOpen.fieldLabel}\r\n                    value={textInputOpen.value}\r\n                    validator={textInputOpen.validator}\r\n                    onClose={textInputOpen.onClose} /> :\r\n                <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default (withRouter(connect(mapStateToProps, mapDispatchToProps)(AppDrawer) as any) as any) as React.FC;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                  from 'react';\r\nimport Button                 from '@material-ui/core/Button';\r\nimport TextField              from '@material-ui/core/TextField';\r\nimport Dialog                 from '@material-ui/core/Dialog';\r\nimport DialogActions          from '@material-ui/core/DialogActions';\r\nimport DialogContent          from '@material-ui/core/DialogContent';\r\nimport DialogContentText      from '@material-ui/core/DialogContentText';\r\nimport DialogTitle            from '@material-ui/core/DialogTitle';\r\nimport CheckIcon              from '@material-ui/icons/Check';\r\nimport CancelIcon             from '@material-ui/icons/Cancel';\r\nimport { useTheme }           from '@material-ui/core/styles';\r\nimport gensym                 from '../lib/gensym';\r\nimport { ConfirmDialogProps } from '../types';\r\n\r\n\r\n\r\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = (props) => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    const formDialogTitleId = gensym();\r\n\r\n    function handleCancelClick() {\r\n        setOpen(false);\r\n        props.onClose(false);\r\n    }\r\n\r\n    function handleApplyClick() {\r\n        if (props.confirmingTextValue && props.confirmingTextValue !== inputValue) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        props.onClose(true);\r\n    }\r\n\r\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\r\n            {props.fab ? props.fab : <></>}\r\n            <DialogTitle id={formDialogTitleId} style={{textAlign: 'center'}}>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText style={{textAlign: 'center'}}>\r\n                    {(props.message || '').split('\\n').map((x, index, arr) =>\r\n                        <span key={'content-' + index}>\r\n                            {x}\r\n                            {index <= (arr.length - 1) ? <br/> : <></>}\r\n                        </span>)\r\n                    }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {props.confirmingTextValue ?\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={props.confirmingTextLabel}\r\n                    value={inputValue}\r\n                    onChange={handleValueChange}\r\n                    style={{marginLeft: theme.spacing(1), marginRight: theme.spacing(1), marginBottom: theme.spacing(1)}}\r\n                    /> :\r\n                    <></>\r\n            }\r\n            <DialogActions style={{margin: 'auto'}}>\r\n                {!props.singleButton?\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        onClick={handleCancelClick} >\r\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Cancel'}\r\n                    </Button> :\r\n                    <></>\r\n                }\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\r\n                    disabled={props.confirmingTextValue ? inputValue !== props.confirmingTextValue : false}\r\n                    onClick={handleApplyClick} >\r\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Apply'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\nexport default ConfirmDialog;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { parserInput }      from 'fruitsconfits/modules/lib/types';\r\nimport { getStringParsers } from 'fruitsconfits/modules/lib/string-parser';\r\n\r\n\r\n\r\ntype Ctx = undefined;\r\ntype Ast = string | string[];\r\n\r\n\r\nconst $s = getStringParsers<Ctx, Ast>({\r\n    rawToToken: rawToken => rawToken,\r\n    concatTokens: tokens => (tokens.length ?\r\n        [tokens.reduce((a, b) => a as string + b as string)] : []),\r\n});\r\n\r\nconst {seq, cls, notCls, classes, cat,\r\n        repeat, end, first, combine, erase, trans, ahead} = $s;\r\n\r\n\r\nconst quoted = trans(input => input.length ? input : [''])(\r\n    erase(repeat(classes.spaceWithinSingleLine), cls('\"')),\r\n    cat(repeat(first(\r\n        trans(input => ['\"'])(seq('\"\"')),\r\n        notCls('\"'),\r\n    ))),\r\n    erase(cls('\"'), repeat(erase(classes.spaceWithinSingleLine))),);\r\n\r\nconst nakid = trans(input => input.length ? input : [''])(\r\n    erase(repeat(classes.spaceWithinSingleLine)),\r\n    cat(repeat(first(\r\n        erase(classes.spaceWithinSingleLine, ahead(cls(',', '\\r\\n', '\\n', '\\r'))),\r\n        notCls(',', '\\r\\n', '\\n', '\\r'),\r\n    ))),);\r\n\r\nconst cell = first(quoted, nakid);\r\n\r\nconst row = trans(input => [input as string[]])(\r\n    cell,\r\n    repeat(combine(erase(seq(',')), cell)),);\r\n\r\nconst rows = combine(\r\n    row,\r\n    repeat(combine(erase(classes.newline), row)),\r\n    end(),);\r\n\r\n\r\nexport function parse(s: string) {\r\n    const z = rows(parserInput(s));\r\n    if (! z.succeeded) {\r\n        throw new Error(z.message);\r\n    }\r\n    return z.tokens as string[][];\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                      from 'react';\r\nimport                                 'date-fns';\r\nimport DateFnsUtils               from '@date-io/date-fns';\r\nimport { MaterialUiPickersDate }  from '@material-ui/pickers/typings/date';\r\nimport { MuiPickersUtilsProvider,\r\n         KeyboardDatePicker }     from '@material-ui/pickers';\r\nimport Button                     from '@material-ui/core/Button';\r\nimport TextField                  from '@material-ui/core/TextField';\r\nimport Select                     from '@material-ui/core/Select';\r\nimport MenuItem                   from '@material-ui/core/MenuItem';\r\nimport InputLabel                 from '@material-ui/core/InputLabel';\r\nimport FormControl                from '@material-ui/core/FormControl';\r\nimport Dialog                     from '@material-ui/core/Dialog';\r\nimport DialogActions              from '@material-ui/core/DialogActions';\r\nimport DialogContent              from '@material-ui/core/DialogContent';\r\nimport DialogTitle                from '@material-ui/core/DialogTitle';\r\nimport Typography                 from '@material-ui/core/Typography';\r\nimport Fab                        from '@material-ui/core/Fab';\r\nimport ArchiveIcon                from '@material-ui/icons/Archive';\r\nimport DeleteIcon                 from '@material-ui/icons/Delete';\r\nimport CheckIcon                  from '@material-ui/icons/Check';\r\nimport CancelIcon                 from '@material-ui/icons/Cancel';\r\nimport { makeStyles,\r\n         useTheme }               from '@material-ui/core/styles';\r\nimport clsx                       from 'clsx';\r\nimport gensym                     from '../lib/gensym';\r\nimport { KanbanDialogProps }      from '../types';\r\nimport { formatDate,\r\n         parseISODate }           from '../lib/datetime';\r\nimport ConfirmDialog              from '../components/ConfirmDialog';\r\nimport { parse as parseCsv }      from '../lib/csv';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        minWidth: 220,\r\n    },\r\n    icon: {\r\n        margin: theme.spacing(1),\r\n        fontSize: 26,\r\n    },\r\n    fabDelete: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst KanbanDialog: React.FC<KanbanDialogProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [confirmOpen, setConfirmOpen] = React.useState(false);\r\n    const [description, setDescription] = React.useState(props.record.description);\r\n    const [barcode, setBarcode] = React.useState(props.record.barcode);\r\n    const [memo, setMemo] = React.useState(props.record.memo);\r\n    const [tags, setTags] = React.useState(props.record.tags ?\r\n        props.record.tags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\r\n    const [flags, setFlags] = React.useState(props.record.flags ?\r\n        props.record.flags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\r\n    const [dueDate, setDueDate] = React.useState<MaterialUiPickersDate>(parseISODate(props.record.dueDate));\r\n    const [taskStatus, setTaskStatus] = React.useState(props.record.taskStatus);\r\n    const [teamOrStory, setTeamOrStory] = React.useState(props.record.teamOrStory);\r\n\r\n    const formDialogTitleId = gensym();\r\n    const taskStatusesId = gensym();\r\n    const teamOrStoryId = gensym();\r\n\r\n    function handleCancelClick() {\r\n        setOpen(false);\r\n        props.onCancel();\r\n    }\r\n\r\n    function handleApplyClick() {\r\n        setOpen(false);\r\n\r\n        const tagsTrimmed = tags.trim();\r\n        const tagsParsed = tagsTrimmed ? parseCsv(tagsTrimmed) : [];\r\n\r\n        const flagsTrimmed = flags.trim();\r\n        const flagsParsed = flagsTrimmed ? parseCsv(flagsTrimmed) : [];\r\n\r\n        props.onApply(Object.assign({}, props.record, {\r\n            description,\r\n            barcode,\r\n            memo,\r\n            tags: (tagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\r\n            flags: (flagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\r\n            dueDate: (dueDate && !Number.isNaN(dueDate.getTime())) ? formatDate(dueDate) : '',\r\n            taskStatus,\r\n            teamOrStory,\r\n        }));\r\n    }\r\n\r\n    function handleArchiveOrDeleteClick() {\r\n        setConfirmOpen(true);\r\n    }\r\n\r\n    function handleDescriptionChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    function handleDueDateChange(date: MaterialUiPickersDate) {\r\n        setDueDate(date);\r\n    }\r\n\r\n    function handleTaskStatusChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\r\n        if (! event.target.name) {\r\n            return;\r\n        }\r\n        setTaskStatus(event.target.value as string);\r\n    }\r\n\r\n    function handleTeamOrStoryChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\r\n        if (! event.target.name) {\r\n            return;\r\n        }\r\n        setTeamOrStory(event.target.value as string);\r\n    }\r\n\r\n    function handleTagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setTags(event.target.value);\r\n    }\r\n\r\n    function handleFlagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setFlags(event.target.value);\r\n    }\r\n\r\n    function handleBarcodeChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setBarcode(event.target.value);\r\n    }\r\n\r\n    function handleMemoChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setMemo(event.target.value);\r\n    }\r\n\r\n    function handleConfirmArchiving(apply: boolean) {\r\n        setConfirmOpen(false);\r\n        if (apply) {\r\n            setOpen(false);\r\n            props.onArchive(props.record._id);\r\n        }\r\n    }\r\n\r\n    function handleConfirmDeleting(apply: boolean) {\r\n        setConfirmOpen(false);\r\n        if (apply) {\r\n            setOpen(false);\r\n            props.onDelete(props.record._id);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\r\n                <DialogTitle id={formDialogTitleId} style={{paddingBottom: '0'}}>\r\n                    Edit Kanban\r\n                    <Button\r\n                        className={clsx(classes.fabDelete)}\r\n                        variant=\"outlined\"\r\n                        color={props.board.preferArchive ? 'default' : 'secondary'}\r\n                        onClick={handleArchiveOrDeleteClick} >\r\n                        {props.board.preferArchive ? <ArchiveIcon /> : <DeleteIcon color=\"secondary\" />}\r\n                        <Typography variant=\"body1\" color={props.board.preferArchive ? 'initial' : 'secondary'}\r\n                            style={{marginLeft: theme.spacing(1)}} >\r\n                            {props.board.preferArchive ? 'Archive' : 'Delete'}\r\n                        </Typography>\r\n                    </Button>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <div>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows={4}\r\n                                rowsMax={16}\r\n                                fullWidth\r\n                                value={description}\r\n                                onChange={handleDescriptionChange}\r\n                                helperText=\"Markdown syntax is available\"\r\n                                />\r\n                        </div>\r\n                        <div>\r\n                            <KeyboardDatePicker\r\n                                margin=\"dense\"\r\n                                label=\"Due date\"\r\n                                format=\"yyyy-MM-dd\"\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                value={dueDate}\r\n                                onChange={handleDueDateChange}\r\n                                />\r\n                        </div>\r\n                        <div>\r\n                            <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\r\n                                <InputLabel htmlFor={taskStatusesId}>Status</InputLabel>\r\n                                <Select\r\n                                    value={taskStatus}\r\n                                    onChange={handleTaskStatusChange}\r\n                                    inputProps={{\r\n                                        name: 'taskStatus',\r\n                                        id: taskStatusesId,\r\n                                    }}\r\n                                    >\r\n                                    {props.taskStatuses.map(x => (\r\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\r\n                                <InputLabel htmlFor={teamOrStoryId}>Team / Story</InputLabel>\r\n                                <Select\r\n                                    value={teamOrStory}\r\n                                    onChange={handleTeamOrStoryChange}\r\n                                    inputProps={{\r\n                                        name: 'teamOrStory',\r\n                                        id: teamOrStoryId,\r\n                                    }}\r\n                                    >\r\n                                    {props.teamOrStories.map(x => (\r\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        {props.board.displayTags && props.board.displayFlags ?\r\n                            <div>\r\n                                <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\r\n                                    <TextField\r\n                                        margin=\"dense\"\r\n                                        label=\"Tags\"\r\n                                        value={tags}\r\n                                        onChange={handleTagsChange}\r\n                                        helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                        />\r\n                                </FormControl>\r\n                                <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\r\n                                    <TextField\r\n                                        margin=\"dense\"\r\n                                        label=\"Flags\"\r\n                                        value={flags}\r\n                                        onChange={handleFlagsChange}\r\n                                        helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                        />\r\n                                </FormControl>\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayTags && !props.board.displayFlags ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Tags\"\r\n                                    fullWidth\r\n                                    value={tags}\r\n                                    onChange={handleTagsChange}\r\n                                    helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayFlags && !props.board.displayTags ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Flags\"\r\n                                    fullWidth\r\n                                    value={flags}\r\n                                    onChange={handleFlagsChange}\r\n                                    helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayBarcode ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Barcode\"\r\n                                    multiline\r\n                                    rows={1}\r\n                                    rowsMax={16}\r\n                                    fullWidth\r\n                                    value={barcode}\r\n                                    onChange={handleBarcodeChange}\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayMemo ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Memo\"\r\n                                    multiline\r\n                                    rows={1}\r\n                                    rowsMax={16}\r\n                                    fullWidth\r\n                                    value={memo}\r\n                                    onChange={handleMemoChange}\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelClick} variant=\"outlined\" color=\"default\">\r\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />Cancel\r\n                    </Button>\r\n                    <Button onClick={handleApplyClick} variant=\"contained\" color=\"primary\">\r\n                        <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {confirmOpen ?\r\n                <ConfirmDialog\r\n                    open={true}\r\n                    title={props.board.preferArchive ? 'Archive kanban' : 'Delete kanban'}\r\n                    message={`Are you sure want to ${props.board.preferArchive ? 'archive' : 'delete'} the kanban?`}\r\n                    colorIsSecondary={props.board.preferArchive ? false : true}\r\n                    applyButtonCaption={props.board.preferArchive ? 'Archive' : 'Delete'}\r\n                    fab={props.board.preferArchive ?\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"archive\" style={{margin: 'auto'}}>\r\n                            <ArchiveIcon />\r\n                        </Fab> :\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    }\r\n                    onClose={props.board.preferArchive ?\r\n                        handleConfirmArchiving:\r\n                        handleConfirmDeleting} /> :\r\n                <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default KanbanDialog;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                      from 'react';\r\nimport { connect }                from 'react-redux';\r\nimport { RouteComponentProps }    from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }               from '@material-ui/core/styles';\r\nimport Typography                 from '@material-ui/core/Typography';\r\nimport IconButton                 from '@material-ui/core/IconButton';\r\nimport AddBoxIcon                 from '@material-ui/icons/AddBox';\r\nimport clsx                       from 'clsx';\r\nimport marked                     from 'marked';\r\nimport createDOMPurify            from 'dompurify';\r\nimport { Qr }                     from 'red-agate-barcode';\r\nimport { LaneDef,\r\n         StatusLaneDef,\r\n         KanbanRecord,\r\n         KanbanBoardState, \r\n         KanbanBoardRecord }      from '../types';\r\nimport gensym                     from '../lib/gensym';\r\nimport { parseISODate }           from '../lib/datetime';\r\nimport { isDark }                 from '../lib/theme';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         KanbanBoardActions }     from '../dispatchers/KanbanBoardDispatcher';\r\nimport KanbanDialog               from '../components/KanbanDialog';\r\nimport TextInputDialog            from '../components/TextInputDialog';\r\nimport { getConstructedAppStore } from '../store';\r\nimport                                 './KanbanBoardView.css';\r\n\r\n\r\n\r\ntype StickysProps = KanbanBoardActions & {\r\n    records: KanbanRecord[],\r\n    taskStatus: StatusLaneDef,\r\n    teamOrStory: LaneDef,\r\n    taskStatuses: StatusLaneDef[],\r\n    teamOrStories: LaneDef[],\r\n    board: KanbanBoardRecord,\r\n};\r\n\r\ntype StickyProps = KanbanBoardActions & {\r\n    record: KanbanRecord,\r\n    taskStatus: StatusLaneDef,\r\n    teamOrStory: LaneDef,\r\n    taskStatuses: StatusLaneDef[],\r\n    teamOrStories: LaneDef[],\r\n    board: KanbanBoardRecord,\r\n};\r\n\r\ntype KanbanBoardViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst DOMPurify = createDOMPurify(window);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    smallIcon: {\r\n        width: '20px',\r\n        height: '20px',\r\n    },\r\n}));\r\n\r\n\r\nconst mapNeverStateToProps = () => ({});\r\n\r\nconst agent = window.navigator.userAgent.toLowerCase();\r\nconst firefox = (agent.indexOf('firefox') !== -1);\r\n\r\n\r\nconst Sticky_: React.FC<StickyProps> = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const now = new Date();\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\r\n    const expired = (! props.taskStatus.completed) &&\r\n        (dueDate ? dueDate < today : false);\r\n\r\n    function handleOnDragStart(ev: React.DragEvent) {\r\n        ev.dataTransfer.setData('elId', (ev.target as any).id);\r\n    }\r\n\r\n    function handleEditApply(rec: KanbanRecord) {\r\n        props.updateSticky(rec);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleArchive(id: string) {\r\n        props.archiveSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleDelete(id: string) {\r\n        props.deleteSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleEditCancel() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a\r\n                id={gensym()}\r\n                data-record-id={props.record._id || ''}\r\n                className=\"KanbanBoardView-sticky-link\"\r\n                draggable\r\n                onClick={ev => setOpen(true)}\r\n                onDragStart={handleOnDragStart}>\r\n                <div\r\n                    className={'KanbanBoardView-sticky-note' + (expired ? ' expired' : '')} >\r\n                    {props.board.displayTags && props.record.tags.length ?\r\n                        <ul className=\"KanbanBoardView-sticky-tags\">{\r\n                            props.record.tags.map((x, index) => {\r\n                                const tags = props.board.tags || [];\r\n                                const matched = tags.find(q => q.value === x);\r\n                                return (\r\n                                    <li key={props.record._id + '-tag-' + index}\r\n                                        className={matched ? matched.className : ''}>{x}</li>\r\n                                );\r\n                            })\r\n                        }</ul> :\r\n                        <></>\r\n                    }\r\n                    <div\r\n                        className=\"KanbanBoardView-sticky-description\"\r\n                        dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(marked(props.record.description))}} />\r\n                    {props.board.displayBarcode && props.record.barcode ?\r\n                        <div className=\"KanbanBoardView-sticky-barcode\"\r\n                            dangerouslySetInnerHTML={{__html: new Qr({\r\n                            fill: true,\r\n                            fillColor: isDark ? '#fff' : '#000',\r\n                            cellSize: 2,\r\n                            unit: 'px',\r\n                            data: props.record.barcode,\r\n                        }).toImgTag()}} />\r\n                        : <></>\r\n                    }\r\n                    {props.record.flags.includes('Marked') ?\r\n                        <div className=\"marked\">{'📍'}</div> :\r\n                        <></>\r\n                    }\r\n                    {props.record.dueDate ?\r\n                        <div className=\"due-date\">{(expired ? '🔥' : '⏳' ) + props.record.dueDate}</div> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            </a>\r\n            {open ?\r\n                <KanbanDialog\r\n                    open={true}\r\n                    record={props.record}\r\n                    teamOrStories={props.teamOrStories}\r\n                    taskStatuses={props.taskStatuses}\r\n                    board={props.board}\r\n                    onApply={handleEditApply}\r\n                    onArchive={handleArchive}\r\n                    onDelete={handleDelete}\r\n                    onCancel={handleEditCancel} /> : <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nconst Sticky = connect(mapNeverStateToProps, mapDispatchToProps)(Sticky_);\r\n\r\n\r\nconst Stickys_: React.FC<StickysProps> = (props) => {\r\n    function handleOnDragOver(ev: React.DragEvent) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    function handleOnDrop(ev: React.DragEvent) {\r\n        try {\r\n            const elId = ev.dataTransfer.getData('elId');\r\n            const el = document.getElementById(elId);\r\n            props.updateStickyLanes({\r\n                kanbanId: (el as any).dataset.recordId,\r\n                taskStatusValue: props.taskStatus.value,\r\n                teamOrStoryValue: props.teamOrStory.value,\r\n            })\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n        ev.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                'KanbanBoardView-sticky-wrap ' + \r\n                (props.teamOrStory.className || '') + ' ' +\r\n                (props.taskStatus.className || '')}\r\n            data-status={props.taskStatus.value}\r\n            data-team-or-story={props.teamOrStory.value}\r\n            onDragOver={handleOnDragOver}\r\n            onDrop={handleOnDrop}\r\n            >\r\n            {props.records.filter(x => !x.flags || !x.flags.includes('Archived')).map(record => (\r\n                <Sticky\r\n                    key={record._id || gensym()}\r\n                    teamOrStory={props.teamOrStory}\r\n                    taskStatus={props.taskStatus}\r\n                    teamOrStories={props.teamOrStories}\r\n                    taskStatuses={props.taskStatuses}\r\n                    board={props.board}\r\n                    record={record}/>\r\n            ))}{\r\n                // NOTE: hack for the height of div becomes 0 in Firefox\r\n                firefox ? <>&nbsp;</> : <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst Stickys = connect(mapNeverStateToProps, mapDispatchToProps)(Stickys_);\r\n\r\n\r\nconst KanbanBoardView: React.FC<KanbanBoardViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [textInputOpen, setTextInputOpen] = React.useState({\r\n        open: false,\r\n        title: '',\r\n        message: '',\r\n        fieldLabel: '',\r\n        value: '',\r\n        validator: (value: string) => value.trim().length <= 0,\r\n        onClose: handleCloseDialogEditBoardName,\r\n    });\r\n\r\n    function handleClickEditBoardName() {\r\n        const currentState = getConstructedAppStore().getState();\r\n        setTextInputOpen(Object.assign({}, textInputOpen, {\r\n            open: true,\r\n            title: 'Edit board name',\r\n            message: '',\r\n            fieldLabel: 'Board name',\r\n            value: currentState.kanbanBoard.activeBoard.name,\r\n        }));\r\n    }\r\n\r\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\r\n        if (apply && value) {\r\n            const currentState = getConstructedAppStore().getState();\r\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\r\n        }\r\n    }\r\n\r\n    if (props.match.params.id) {\r\n        if (props.activeBoard._id !== props.match.params.id) {\r\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\r\n            props.changeActiveBoard(props.match.params.id);\r\n            return (\r\n                <div className=\"KanbanBoardView-content\">\r\n                    {index < 0 ?\r\n                        <>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(10)}}\r\n                                variant=\"h4\" align=\"center\">\r\n                                No boards found.\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\r\n                                variant=\"body1\" align=\"center\"\r\n                                onClick={ev => {props.history.push('/')}} >\r\n                                Click here to show main board.\r\n                            </Typography>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"KanbanBoardView-content\">\r\n            <style dangerouslySetInnerHTML={{__html: props.activeBoard.boardStyle}}></style>\r\n            <Typography\r\n                variant=\"h6\" align=\"center\" style={{cursor: 'pointer'}}\r\n                onClick={handleClickEditBoardName} >{props.activeBoard.name}</Typography>\r\n            <table className=\"KanbanBoardView-board\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"KanbanBoardView-header-cell-add-sticky\">\r\n                            <IconButton style={{margin: 0, padding: 0}}\r\n                                        onClick={ev => props.addSticky()}>\r\n                                <AddBoxIcon className={clsx(classes.smallIcon)} />\r\n                            </IconButton>\r\n                        </th>\r\n                        {props.activeBoard.taskStatuses.map(taskStatus => (\r\n                            <th key={taskStatus.value}\r\n                                className={\r\n                                    'KanbanBoardView-header-cell-task-statuses ' +\r\n                                    (taskStatus.className || '')}>\r\n                                {taskStatus.caption || taskStatus.value}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.activeBoard.teamOrStories.map(teamOrStory => (\r\n                        <tr key={teamOrStory.value}>\r\n                            <th className={\r\n                                'KanbanBoardView-header-cell-team-or-stories ' +\r\n                                (teamOrStory.className || '')}>\r\n                                {teamOrStory.caption || teamOrStory.value}\r\n                            </th>\r\n                            {props.activeBoard.taskStatuses.map(taskStatus => (\r\n                                <td key={taskStatus.value}\r\n                                    className={\r\n                                        (teamOrStory.className || '') + ' ' +\r\n                                        (taskStatus.className || '')}>\r\n                                    <Stickys\r\n                                        teamOrStory={teamOrStory}\r\n                                        taskStatus={taskStatus}\r\n                                        teamOrStories={props.activeBoard.teamOrStories}\r\n                                        taskStatuses={props.activeBoard.taskStatuses}\r\n                                        board={props.activeBoard}\r\n                                        records={props.activeBoard.records.filter(\r\n                                            x => x.teamOrStory === teamOrStory.value &&\r\n                                                 x.taskStatus  === taskStatus.value)} />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            {props.activeBoard.boardNote ?\r\n                <div className=\"KanbanBoardView-board-note-wrap\">\r\n                    <div className=\"KanbanBoardView-board-note\"\r\n                        dangerouslySetInnerHTML={{__html : DOMPurify.sanitize(marked(props.activeBoard.boardNote))}} />\r\n                </div> :\r\n                <></>\r\n            }\r\n            {textInputOpen.open ?\r\n                <TextInputDialog\r\n                    open={true}\r\n                    title={textInputOpen.title}\r\n                    message={textInputOpen.message}\r\n                    fieldLabel={textInputOpen.fieldLabel}\r\n                    value={textInputOpen.value}\r\n                    validator={textInputOpen.validator}\r\n                    onClose={textInputOpen.onClose} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanBoardView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { Action }             from 'typescript-fsa';\r\nimport { Dispatch }           from 'redux';\r\nimport { KanbanRecord,\r\n         ConfirmDialogProps,\r\n         AppState }           from '../types';\r\nimport { AppEventsActions as AppEventsActions_,\r\n         appEventsActions }   from '../actions/AppEventsActions';\r\nimport { CalendarActions as CalendarActions_,\r\n         calendarActions }    from '../actions/CalendarActions';\r\nimport { KanbanBoardActions as KanbanBoardActions_,\r\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\r\n\r\n\r\n\r\nexport type AppEventsActions = AppEventsActions_;\r\nexport type CalendarActions = CalendarActions_;\r\nexport type KanbanBoardActions = KanbanBoardActions_;\r\n\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\r\n    return {\r\n        showToday: () =>\r\n            dispatch(calendarActions.showToday()),\r\n        showNextMonth: () =>\r\n            dispatch(calendarActions.showNextMonth()),\r\n        showPreviousMonth: () =>\r\n            dispatch(calendarActions.showPreviousMonth()),\r\n        showNextYear: () =>\r\n            dispatch(calendarActions.showNextYear()),\r\n        showPreviousYear: () =>\r\n            dispatch(calendarActions.showPreviousYear()),\r\n\r\n        // from AppEventsActions\r\n        showAlertDialog: (v: ConfirmDialogProps) =>\r\n            dispatch(appEventsActions.showAlertDialog(v)),\r\n        closeAlertDialog: () =>\r\n            dispatch(appEventsActions.closeAlertDialog()),\r\n\r\n        // from KanbanBoardActions\r\n        changeActiveBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startChangeActiveBoard(Object.assign({}, { boardId }, { dispatch }))),\r\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\r\n        updateSticky: (v: KanbanRecord) =>\r\n            dispatch(kanbanBoardActions.startUpdateSticky(Object.assign({}, v, { dispatch }))),\r\n        archiveSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startArchiveSticky({ kanbanId })),\r\n        deleteSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startDeleteSticky(Object.assign({}, { kanbanId }, { dispatch }))),\r\n    }\r\n}\r\n\r\n\r\nexport function mapStateToProps(appState: AppState) {\r\n    return Object.assign({}, { kanbanBoardState: appState.kanbanBoard }, appState.calendar);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                      from 'react';\r\nimport { connect }                from 'react-redux';\r\nimport { RouteComponentProps }    from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }               from '@material-ui/core/styles';\r\nimport Typography                 from '@material-ui/core/Typography';\r\nimport IconButton                 from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon            from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon           from '@material-ui/icons/ChevronRight';\r\nimport SkipPreviousIcon           from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon               from '@material-ui/icons/SkipNext';\r\nimport CalendarTodayIcon          from '@material-ui/icons/CalendarToday';\r\nimport clsx                       from 'clsx';\r\nimport { KanbanRecord,\r\n         CalendarState,\r\n         KanbanBoardState, \r\n         KanbanBoardRecord }      from '../types';\r\nimport { parseISODate }           from '../lib/datetime';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         CalendarActions }        from '../dispatchers/CalendarViewDispatcher';\r\nimport KanbanDialog               from '../components/KanbanDialog';\r\nimport TextInputDialog            from '../components/TextInputDialog';\r\nimport { getConstructedAppStore } from '../store';\r\nimport                                 './CalendarView.css';\r\n\r\n\r\n\r\ntype CalendarItemProps = CalendarState & CalendarActions &\r\n        { kanbanBoardState: KanbanBoardState } & {\r\n    board: KanbanBoardRecord,\r\n    record: KanbanRecord,\r\n};\r\n\r\n\r\ntype CalendarViewProps = CalendarState & CalendarActions &\r\n        { kanbanBoardState: KanbanBoardState } & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'var(--main-text-color)',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n    },\r\n    calendar: {\r\n        width: 'calc(100% - 30px)',\r\n        height: '100%',\r\n        margin: '15px',\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        tableLayout: 'fixed',\r\n    },\r\n    calendarTitle: {\r\n        position: 'relative',\r\n        height: '30px',\r\n    },\r\n    calendarTitleToolBar: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        margin: '3px 3px 6px 4px',\r\n        overflow: 'hidden',\r\n        width: 'calc(100% - 30px)',\r\n        height: '39px',\r\n    },\r\n    calendarTopLeftHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n    },\r\n    calendarDaysHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        width: '14%',\r\n    },\r\n    calendarSundayHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        width: '14%',\r\n        backgroundColor: 'var(--weak-header-bg-color)',\r\n        color: 'var(--calendar-sunday-color)',\r\n    },\r\n    calendarSaturdayHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        width: '14%',\r\n        backgroundColor: 'var(--weak-header-bg-color)',\r\n        color: 'var(--calendar-saturday-color)',\r\n    },\r\n    calendarCell: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        verticalAlign: 'top',\r\n    },\r\n    calendarWeekendCell: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        verticalAlign: 'top',\r\n        backgroundColor: 'var(--weak-data-bg-color)',\r\n    },\r\n    chip: {\r\n        fontSize: 'smaller',\r\n        borderRadius: '5px',\r\n        backgroundColor:'var(--sticky-blue-color)',\r\n        color: 'var(--main-text-color)',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginBottom: '2px',\r\n        paddingLeft: '3px',\r\n        paddingRight: '3px',\r\n    },\r\n    chipWrap: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst CalendarItem_: React.FC<CalendarItemProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const teamOrStory = props.board.teamOrStories.find(x => x.value === props.record.teamOrStory);\r\n    const taskStatus = props.board.taskStatuses.find(x => x.value === props.record.taskStatus);\r\n\r\n    const now = new Date();\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\r\n    const expired = (! (taskStatus && taskStatus.completed)) &&\r\n        (dueDate ? dueDate < today : false);\r\n    const archived = props.record.flags && props.record.flags.includes('Archived');\r\n\r\n    function handleEditApply(rec: KanbanRecord) {\r\n        props.updateSticky(rec);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleArchive(id: string) {\r\n        props.archiveSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleDelete(id: string) {\r\n        props.deleteSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleEditCancel() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a\r\n                className={clsx(classes.chipWrap)}\r\n                onClick={ev => setOpen(true)}>\r\n                <div className={clsx(classes.chip) + ' CalendarView-item-chip' +\r\n                    (teamOrStory ? ' ' + teamOrStory.className : '') +\r\n                    (taskStatus ? ' ' + taskStatus.className : '') +\r\n                    (expired ? ' expired' : '') +\r\n                    (archived ? ' archived' : '')}>\r\n                    {props.record.description.trim().replace(/\\n/g, ' ').replace(/#+/g, '').trim()}\r\n                </div>\r\n            </a>\r\n            {open ?\r\n                <KanbanDialog\r\n                    open={true}\r\n                    record={props.record}\r\n                    teamOrStories={props.kanbanBoardState.activeBoard.teamOrStories}\r\n                    taskStatuses={props.kanbanBoardState.activeBoard.taskStatuses}\r\n                    board={props.board}\r\n                    onApply={handleEditApply}\r\n                    onArchive={handleArchive}\r\n                    onDelete={handleDelete}\r\n                    onCancel={handleEditCancel} /> : <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nconst CalendarItem = connect(mapStateToProps, mapDispatchToProps)(CalendarItem_);\r\n\r\nconst CalendarView: React.FC<CalendarViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [textInputOpen, setTextInputOpen] = React.useState({\r\n        open: false,\r\n        title: '',\r\n        message: '',\r\n        fieldLabel: '',\r\n        value: '',\r\n        validator: (value: string) => value.trim().length <= 0,\r\n        onClose: handleCloseDialogEditBoardName,\r\n    });\r\n\r\n    function handleClickEditBoardName() {\r\n        const currentState = getConstructedAppStore().getState();\r\n        setTextInputOpen(Object.assign({}, textInputOpen, {\r\n            open: true,\r\n            title: 'Edit board name',\r\n            message: '',\r\n            fieldLabel: 'Board name',\r\n            value: currentState.kanbanBoard.activeBoard.name,\r\n        }));\r\n    }\r\n\r\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\r\n        if (apply && value) {\r\n            const currentState = getConstructedAppStore().getState();\r\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\r\n        }\r\n    }\r\n\r\n    if (props.match.params.id) {\r\n        if (props.kanbanBoardState.activeBoard._id !== props.match.params.id) {\r\n            const index = props.kanbanBoardState.boards.findIndex(x => x._id === props.match.params.id);\r\n            props.changeActiveBoard(props.match.params.id);\r\n            return (\r\n                <div className={classes.root}>\r\n                    {index < 0 ?\r\n                        <>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(10)}}\r\n                                variant=\"h4\" align=\"center\">\r\n                                No boards found.\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\r\n                                variant=\"body1\" align=\"center\"\r\n                                onClick={ev => {props.history.push('/')}} >\r\n                                Click here to show main board.\r\n                            </Typography>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const month = props.activeMonth;\r\n\r\n    const firstDateOfMonth = new Date(month.getFullYear(), month.getMonth(), 1);\r\n    const lastDateOfMonth = new Date(month.getFullYear(), month.getMonth() + 1, 0);\r\n    const firstDateOfCal = new Date(\r\n        firstDateOfMonth.getFullYear(), firstDateOfMonth.getMonth(),\r\n        1 - firstDateOfMonth.getDay());\r\n    const lastDateOfCal = new Date(\r\n        lastDateOfMonth.getFullYear(), lastDateOfMonth.getMonth(),\r\n        lastDateOfMonth.getDate() + (6 - lastDateOfMonth.getDay()));\r\n    const nextCalDate = new Date(\r\n        lastDateOfCal.getFullYear(), lastDateOfCal.getMonth(),\r\n        lastDateOfCal.getDate() + 1);\r\n\r\n    const dates: Array<Date[]> = [];\r\n    let week: Date[] = [];\r\n    dates.push(week);\r\n    for (let wd = firstDateOfCal;\r\n            wd.getTime() <= lastDateOfCal.getTime();\r\n            wd = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1)) {\r\n        if (7 <= week.length) {\r\n            week = [];\r\n            dates.push(week);\r\n        }\r\n        week.push(wd);\r\n    }\r\n\r\n    const stickys = props.kanbanBoardState.activeBoard.records.filter(x => {\r\n        if (!x.dueDate) {\r\n            return false;\r\n        }\r\n        const d = new Date(x.dueDate);\r\n        if (firstDateOfCal <= d && d < nextCalDate) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <style dangerouslySetInnerHTML={{__html: props.kanbanBoardState.activeBoard.calendarStyle}}></style>\r\n            <div className={clsx(classes.calendarTitle)}>\r\n                <div className={clsx(classes.calendarTitleToolBar)}>\r\n                    <IconButton onClick={ev => props.showToday()}>\r\n                        <CalendarTodayIcon /><Typography variant=\"caption\" style={{marginLeft: '1em'}}>Today</Typography>\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showPreviousYear()}>\r\n                        <SkipPreviousIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showPreviousMonth()}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showNextMonth()}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showNextYear()}>\r\n                        <SkipNextIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '2em'}}>{\r\n                        props.activeMonth.toLocaleDateString(\r\n                            (navigator as any).userLanguage || navigator.language || (navigator as any).browserLanguage || 'en',\r\n                            {year: 'numeric', month: 'long'})\r\n                    }</Typography>\r\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '3em', cursor: 'pointer'}}\r\n                        onClick={handleClickEditBoardName} >{\r\n                        props.kanbanBoardState.activeBoard.name}</Typography>\r\n                </div>\r\n            </div>\r\n            <table className={clsx(classes.calendar)}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={clsx(classes.calendarTopLeftHeader)}></th>\r\n                        <th className={clsx(classes.calendarSundayHeader)}>Sun</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Mon</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Tue</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Wed</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Thu</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Fri</th>\r\n                        <th className={clsx(classes.calendarSaturdayHeader)}>Sat</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dates.map(week =>\r\n                        <tr key={week[0].getTime()}>\r\n                            <td className={clsx(classes.calendarCell)}></td>\r\n                            {week.map((wd: Date, index: number) =>\r\n                                <td key={wd.toISOString()}\r\n                                    className={clsx(index === 0 || index === 6 ? classes.calendarWeekendCell :classes.calendarCell)}>\r\n                                    <div style={{position: 'relative'}}>\r\n                                        <div style={{position: 'absolute', top: '0', right: '0'}}>\r\n                                            {wd.getDate()}\r\n                                        </div>\r\n                                        <div style={{paddingTop: '20px', minHeight: '80px'}}>\r\n                                            {stickys.filter(x => {\r\n                                                const d = new Date(x.dueDate);\r\n                                                const next = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1);\r\n                                                if (wd <= d && d < next) {\r\n                                                    return true;\r\n                                                } else {\r\n                                                    return false;\r\n                                                }\r\n                                            }).map(x =>\r\n                                                <CalendarItem\r\n                                                    board={props.kanbanBoardState.activeBoard}\r\n                                                    key={x._id}\r\n                                                    record={x} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            {textInputOpen.open ?\r\n                <TextInputDialog\r\n                    open={true}\r\n                    title={textInputOpen.title}\r\n                    message={textInputOpen.message}\r\n                    fieldLabel={textInputOpen.fieldLabel}\r\n                    value={textInputOpen.value}\r\n                    validator={textInputOpen.validator}\r\n                    onClose={textInputOpen.onClose} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { KanbanBoardRecord,\r\n         KanbanRecord,\r\n         AppConfig }       from '../types';\r\n\r\n\r\n\r\nexport function pickEditableStickyProps(sticky: KanbanRecord) {\r\n    return (Object.assign(sticky._id ? { _id: sticky._id } : {}, {\r\n        dueDate: sticky.dueDate || '',\r\n        taskStatus: sticky.taskStatus || '',\r\n        teamOrStory: sticky.teamOrStory || '',\r\n        flags: sticky.flags || [],\r\n        tags: sticky.tags || [],\r\n        description: sticky.description || '',\r\n        barcode: sticky.barcode || '',\r\n        memo: sticky.memo || '',\r\n    }));\r\n}\r\n\r\n\r\nexport function pickEditableBoardProps(board: KanbanBoardRecord) {\r\n    return ({\r\n        name: board.name || '',\r\n        taskStatuses: board.taskStatuses || [],\r\n        teamOrStories: board.teamOrStories || [],\r\n        tags: board.tags || [],\r\n        displayBarcode: !!board.displayBarcode,\r\n        displayMemo: !!board.displayMemo,\r\n        displayFlags: !!board.displayFlags,\r\n        displayTags: !!board.displayTags,\r\n        preferArchive: !!board.preferArchive,\r\n        boardStyle: board.boardStyle || '',\r\n        calendarStyle: board.calendarStyle || '',\r\n        boardNote: board.boardNote || '',\r\n        records: (board.records && board.records.map(x => pickEditableStickyProps(x))) || [],\r\n    });\r\n}\r\n\r\n\r\nexport function validateStickyProps(sticky: KanbanRecord) {\r\n    if (typeof sticky.dueDate !== 'string') {\r\n        throw new Error('string property \"dueDate\" is required.');\r\n    }\r\n    if (typeof sticky.taskStatus !== 'string') {\r\n        throw new Error('string property \"taskStatus\" is required.');\r\n    }\r\n    if (typeof sticky.teamOrStory !== 'string') {\r\n        throw new Error('string property \"teamOrStory\" is required.');\r\n    }\r\n    if (sticky.flags && Array.isArray(sticky.flags)) {\r\n        sticky.flags.forEach(x => {\r\n            if (typeof x !== 'string') {\r\n                throw new Error('property \"flags[x]\" should be string.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"flags\" is required.');\r\n    }\r\n    if (sticky.tags && Array.isArray(sticky.tags)) {\r\n        sticky.tags.forEach(x => {\r\n            if (typeof x !== 'string') {\r\n                throw new Error('property \"tags[x]\" should be string.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"tags\" is required.');\r\n    }\r\n    if (typeof sticky.description !== 'string') {\r\n        throw new Error('string property \"description\" is required.');\r\n    }\r\n    if (typeof sticky.barcode !== 'string') {\r\n        throw new Error('string property \"barcode\" is required.');\r\n    }\r\n    if (typeof sticky.memo !== 'string') {\r\n        throw new Error('string property \"memo\" is required.');\r\n    }\r\n    return sticky;\r\n}\r\n\r\n\r\nfunction checkStyleXSS(text: string) {\r\n    if (text.match(/<\\/style\\s*>/i) || text.match(/<script\\b/i)) {\r\n        throw new Error('bad style text is set.');\r\n    }\r\n}\r\n\r\n\r\nexport function validateBoardProps(board: KanbanBoardRecord) {\r\n    if (typeof board.name !== 'string') {\r\n        throw new Error('string property \"name\" is required.');\r\n    }\r\n    if (board.taskStatuses && Array.isArray(board.taskStatuses)) {\r\n        board.taskStatuses.forEach(x => {\r\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\r\n                throw new Error('property \"taskStatuses[x].caption\" should be string.');\r\n            }\r\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\r\n                throw new Error('property \"taskStatuses[x].className\" should be string.');\r\n            }\r\n            if (x.completed !== null && x.completed !== void 0 && typeof x.completed !== 'boolean') {\r\n                throw new Error('property \"taskStatuses[x].completed\" should be boolean.');\r\n            }\r\n            if (typeof x.value !== 'string') {\r\n                throw new Error('string property \"taskStatuses[x].value\" is required.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"taskStatuses\" is required.');\r\n    }\r\n    if (board.teamOrStories && Array.isArray(board.teamOrStories)) {\r\n        board.teamOrStories.forEach(x => {\r\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\r\n                throw new Error('property \"teamOrStories[x].caption\" should be string.');\r\n            }\r\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\r\n                throw new Error('property \"teamOrStories[x].className\" should be string.');\r\n            }\r\n            if (typeof x.value !== 'string') {\r\n                throw new Error('string property \"teamOrStories[x].value\" is required.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"teamOrStories\" is required.');\r\n    }\r\n    if (board.tags && Array.isArray(board.tags)) {\r\n        board.tags.forEach(x => {\r\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\r\n                throw new Error('property \"tags[x].className\" should be string.');\r\n            }\r\n            if (typeof x.value !== 'string') {\r\n                throw new Error('string property \"tags[x].value\" is required.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"tags\" is required.');\r\n    }\r\n    if (typeof board.displayBarcode !== 'boolean') {\r\n        throw new Error('boolean property \"displayBarcode\" is required.');\r\n    }\r\n    if (typeof board.displayMemo !== 'boolean') {\r\n        throw new Error('boolean property \"displayMemo\" is required.');\r\n    }\r\n    if (typeof board.displayFlags !== 'boolean') {\r\n        throw new Error('boolean property \"displayFlags\" is required.');\r\n    }\r\n    if (typeof board.displayTags !== 'boolean') {\r\n        throw new Error('boolean property \"displayTags\" is required.');\r\n    }\r\n    if (typeof board.preferArchive !== 'boolean') {\r\n        throw new Error('boolean property \"preferArchive\" is required.');\r\n    }\r\n    if (typeof board.boardStyle !== 'string') {\r\n        throw new Error('string property \"boardStyle\" is required.');\r\n    }\r\n    checkStyleXSS(board.boardStyle);\r\n    if (typeof board.calendarStyle !== 'string') {\r\n        throw new Error('string property \"calendarStyle\" is required.');\r\n    }\r\n    checkStyleXSS(board.calendarStyle);\r\n    if (typeof board.boardNote !== 'string') {\r\n        throw new Error('string property \"boardNote\" is required.');\r\n    }\r\n\r\n    if (board.records && Array.isArray(board.records)) {\r\n        board.records.forEach(x => validateStickyProps(x));\r\n    } else {\r\n        throw new Error('array property \"records\" is required.');\r\n    }\r\n\r\n    return board;\r\n}\r\n\r\n\r\nexport function pickEditableConfigProps(conf: AppConfig) {\r\n    return ({\r\n        remote: {\r\n            endpointUrl: conf.remote && conf.remote.endpointUrl ?\r\n                conf.remote.endpointUrl : '',\r\n            user: conf.remote && conf.remote.user ?\r\n                conf.remote.user : '',\r\n            password: conf.remote && conf.remote.password ?\r\n                conf.remote.password : '',\r\n        },\r\n        display: {\r\n            autoUpdate: !!(conf.display && conf.display.autoUpdate),\r\n            autoUpdateInterval: conf.display && conf.display.autoUpdateInterval ?\r\n                conf.display.autoUpdateInterval : 2419200,\r\n            goAround: !!(conf.display && conf.display.goAround),\r\n        },\r\n    });\r\n}\r\n\r\n\r\nexport function validateConfigProps(conf: AppConfig) {\r\n    if (! conf.remote) {\r\n        throw new Error('object property \"remote\" is required.');\r\n    }\r\n    if (typeof conf.remote.endpointUrl !== 'string') {\r\n        throw new Error('string property \"remote.endpointUrl\" is required.');\r\n    }\r\n    if (typeof conf.remote.user !== 'string') {\r\n        throw new Error('string property \"remote.user\" is required.');\r\n    }\r\n    if (typeof conf.remote.password !== 'string') {\r\n        throw new Error('string property \"remote.password\" is required.');\r\n    }\r\n\r\n    if (! conf.display) {\r\n        throw new Error('object property \"display\" is required.');\r\n    }\r\n    if (typeof conf.display.autoUpdate !== 'boolean') {\r\n        throw new Error('boolean property \"display.autoUpdate\" is required.');\r\n    }\r\n    if (typeof conf.display.autoUpdateInterval !== 'number') {\r\n        throw new Error('number property \"display.autoUpdateInterval\" is required.');\r\n    }\r\n    if (conf.display.autoUpdateInterval < 10) {\r\n        throw new Error('number property \"display.autoUpdateInterval\" should 10 <= autoUpdateInterval (unit: sec).');\r\n    }\r\n    if (typeof conf.display.goAround !== 'boolean') {\r\n        throw new Error('boolean property \"display.goAround\" is required.');\r\n    }\r\n    return conf;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                          from 'react';\r\nimport { connect }                    from 'react-redux';\r\nimport { RouteComponentProps }        from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }                   from '@material-ui/core/styles';\r\nimport Button                         from '@material-ui/core/Button';\r\nimport CheckIcon                      from '@material-ui/icons/Check';\r\nimport DeleteIcon                     from '@material-ui/icons/Delete';\r\nimport Typography                     from '@material-ui/core/Typography';\r\nimport Fab                            from '@material-ui/core/Fab';\r\nimport clsx                           from 'clsx';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport                                     'codemirror/lib/codemirror.css';\r\nimport                                     'codemirror/theme/material.css';\r\nimport                                     'codemirror/mode/yaml/yaml';\r\nimport jsYaml                         from 'js-yaml';\r\nimport { KanbanBoardState }           from '../types';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         KanbanBoardActions }         from '../dispatchers/KanbanBoardDispatcher';\r\nimport ConfirmDialog                  from '../components/ConfirmDialog';\r\nimport { pickEditableBoardProps,\r\n         validateBoardProps }         from '../lib/validation';\r\nimport                                     './EditorView.css';\r\n\r\n\r\n\r\ntype EditorViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'var(--main-text-color)',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    header: {\r\n        height: '45px',\r\n        position: 'relative',\r\n    },\r\n    codemirror: {\r\n        display: 'grid',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100vh - 65px)',\r\n    },\r\n    fabSave: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        left: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n    fabDelete: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n}));\r\n\r\n\r\nconst EditorView: React.FC<EditorViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [confirmDeletingOpen, setConfirmDeletingOpen] = React.useState(false);\r\n    const [editorValue, setEditorValue] = React.useState('');\r\n    const [editCount, setEditCount] = React.useState(0);\r\n    // NOTE: codeMirror.current.props.value is NOT updated after onChange event.\r\n    // const codeMirror = useRef((null as any) as CodeMirror);\r\n\r\n    function handleSaveClick() {\r\n        try {\r\n            const data = jsYaml.safeLoad(editorValue);\r\n            if (data) {\r\n                validateBoardProps(data);\r\n                props.editBoardAndStickys(Object.assign({}, data, { _id: props.activeBoard._id }));\r\n            } else {\r\n                //\r\n            }\r\n        } catch (e) {\r\n            props.showAlertDialog({\r\n                open: true,\r\n                title: 'Error',\r\n                message: e.message || String(e),\r\n                singleButton: true,\r\n                colorIsSecondary: true,\r\n                onClose: () => props.closeAlertDialog(),\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleConfirmDeleting(apply: boolean) {\r\n        setConfirmDeletingOpen(false);\r\n        if (apply) {\r\n            props.deleteBoard(props.activeBoard._id);\r\n        }\r\n    }\r\n\r\n    function handleEditorChange(editor: any, data: any, value: string) {\r\n        setEditorValue(value);\r\n        setEditCount(editCount + 1);\r\n    }\r\n\r\n    if (props.match.params.id) {\r\n        if (props.activeBoard._id !== props.match.params.id) {\r\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\r\n            props.changeActiveBoard(props.match.params.id);\r\n\r\n            // NOTE: dirty hack\r\n            setTimeout(() => {\r\n                setEditCount(0);\r\n            }, 30);\r\n\r\n            return (\r\n                <div className={classes.root}>\r\n                    {index < 0 ?\r\n                        <>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(10)}}\r\n                                variant=\"h4\" align=\"center\">\r\n                                No boards found.\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\r\n                                variant=\"body1\" align=\"center\"\r\n                                onClick={ev => {props.history.push('/')}} >\r\n                                Click here to show main board.\r\n                            </Typography>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <div className={clsx(classes.header)}>\r\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{props.activeBoard.name}</Typography>\r\n                <Button\r\n                    className={clsx(classes.fabSave)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={editCount === 0}\r\n                    onClick={handleSaveClick} >\r\n                    <CheckIcon />\r\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\r\n                        Save\r\n                    </Typography>\r\n                </Button>\r\n                {props.boards.length > 1 ?\r\n                    <Button\r\n                        className={clsx(classes.fabDelete)}\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={ev => setConfirmDeletingOpen(true)} >\r\n                        <DeleteIcon color=\"secondary\" />\r\n                        <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\r\n                            Delete\r\n                        </Typography>\r\n                    </Button> :\r\n                    <></>\r\n                }\r\n            </div>\r\n            <div>\r\n                <CodeMirror\r\n                    className={clsx(classes.codemirror)}\r\n                    value={`# Board settings\\n\\n${\r\n                        jsYaml.safeDump(pickEditableBoardProps(props.activeBoard), {lineWidth: 1000})\r\n                    }`}\r\n                    options={{\r\n                        mode: 'yaml',\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        lineWrapping: true,\r\n                    }}\r\n                    onChange={handleEditorChange}\r\n                />\r\n            </div>\r\n            {confirmDeletingOpen ?\r\n                <ConfirmDialog\r\n                    open={confirmDeletingOpen}\r\n                    title=\"Delete board\"\r\n                    message=\"Are you sure want to delete the board?\"\r\n                    colorIsSecondary={true}\r\n                    applyButtonCaption=\"Delete\"\r\n                    confirmingTextLabel={'Type \"Delete board\" to delete this board.'}\r\n                    confirmingTextValue=\"Delete board\"\r\n                    fab={\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    }\r\n                    onClose={handleConfirmDeleting} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                          from 'react';\r\nimport { connect }                    from 'react-redux';\r\nimport { RouteComponentProps }        from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }                   from '@material-ui/core/styles';\r\nimport Button                         from '@material-ui/core/Button';\r\nimport CheckIcon                      from '@material-ui/icons/Check';\r\nimport DeleteIcon                     from '@material-ui/icons/Delete';\r\nimport Typography                     from '@material-ui/core/Typography';\r\nimport Fab                            from '@material-ui/core/Fab';\r\nimport clsx                           from 'clsx';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport                                     'codemirror/lib/codemirror.css';\r\nimport                                     'codemirror/theme/material.css';\r\nimport                                     'codemirror/mode/yaml/yaml';\r\nimport jsYaml                         from 'js-yaml';\r\nimport { AppEventsState }             from '../types';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         AppEventsActions }           from '../dispatchers/AppEventsDispatcher';\r\nimport ConfirmDialog                  from '../components/ConfirmDialog';\r\nimport { pickEditableConfigProps,\r\n         validateConfigProps }        from '../lib/validation';\r\nimport                                     './SettingsView.css';\r\n\r\n\r\n\r\ntype SettingsViewProps = AppEventsState & AppEventsActions & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'var(--main-text-color)',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    header: {\r\n        height: '45px',\r\n        position: 'relative',\r\n    },\r\n    codemirror: {\r\n        display: 'grid',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100vh - 65px)',\r\n    },\r\n    fabSave: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        left: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n    fabDelete: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n}));\r\n\r\n\r\nconst SettingsView: React.FC<SettingsViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [confirmResetAppOpen, setConfirmResetAppOpen] = React.useState(false);\r\n    const [editorValue, setEditorValue] = React.useState('');\r\n    const [editCount, setEditCount] = React.useState(0);\r\n\r\n    function handleSaveClick() {\r\n        try {\r\n            const data = jsYaml.safeLoad(editorValue);\r\n            if (data) {\r\n                validateConfigProps(data);\r\n                props.updateAppConfig(Object.assign({}, data));\r\n            } else {\r\n                throw new Error('object property \"remote\" is required.');\r\n            }\r\n        } catch (e) {\r\n            props.showAlertDialog({\r\n                open: true,\r\n                title: 'Error',\r\n                message: e.message || String(e),\r\n                singleButton: true,\r\n                colorIsSecondary: true,\r\n                onClose: () => props.closeAlertDialog(),\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleConfirmResetApplication(apply: boolean) {\r\n        setConfirmResetAppOpen(false);\r\n        if (apply) {\r\n            props.resetApplication();\r\n        }\r\n    }\r\n\r\n    function handleEditorChange(editor: any, data: any, value: string) {\r\n        setEditorValue(value);\r\n        setEditCount(editCount + 1);\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <div className={clsx(classes.header)}>\r\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{'Application Settings'}</Typography>\r\n                <Button\r\n                    className={clsx(classes.fabSave)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={editCount === 0}\r\n                    onClick={handleSaveClick} >\r\n                    <CheckIcon />\r\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\r\n                        Save\r\n                    </Typography>\r\n                </Button>\r\n                <Button\r\n                    className={clsx(classes.fabDelete)}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={ev => setConfirmResetAppOpen(true)} >\r\n                    <DeleteIcon color=\"secondary\" />\r\n                    <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\r\n                        Reset application\r\n                    </Typography>\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <CodeMirror\r\n                    className={clsx(classes.codemirror)}\r\n                    value={`# App settings\\n\\n${\r\n                        jsYaml.safeDump(pickEditableConfigProps(props.appConfig), {lineWidth: 1000})\r\n                    }`}\r\n                    options={{\r\n                        mode: 'yaml',\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        lineWrapping: true,\r\n                    }}\r\n                    onChange={handleEditorChange}\r\n                />\r\n            </div>\r\n            {confirmResetAppOpen ?\r\n                <ConfirmDialog\r\n                    open={confirmResetAppOpen}\r\n                    title=\"Reset application\"\r\n                    message={'Are you sure want to reset application?\\nAll local data and configurations will be REMOVED!'}\r\n                    colorIsSecondary={true}\r\n                    applyButtonCaption=\"Reset\"\r\n                    confirmingTextLabel={'Type \"Reset application\" to remove all data.'}\r\n                    confirmingTextValue=\"Reset application\"\r\n                    fab={\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"reset application\" color=\"secondary\" style={{margin: 'auto'}}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    }\r\n                    onClose={handleConfirmResetApplication} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React,\r\n       { useEffect,\r\n         useRef }                from 'react';\r\nimport { connect }               from 'react-redux';\r\nimport { Route,\r\n         Switch }                from \"react-router-dom\";\r\nimport CssBaseline               from '@material-ui/core/CssBaseline';\r\nimport { makeStyles }            from '@material-ui/core/styles';\r\nimport { ThemeProvider }         from '@material-ui/styles';\r\nimport clsx                      from 'clsx';\r\nimport { AppEventsState }        from './types';\r\nimport { restartSync }           from './lib/db';\r\nimport { theme }                 from './lib/theme';\r\nimport { getCurrentView }        from './lib/util';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         AppEventsActions }      from './dispatchers/AppEventsDispatcher';\r\nimport { getConstructedAppStore,\r\n         history }               from './store';\r\nimport AppDrawer                 from './components/AppDrawer';\r\nimport KanbanBoardView           from './views/KanbanBoardView';\r\nimport CalendarView              from './views/CalendarView';\r\nimport EditorView                from './views/EditorView';\r\nimport SettingsView              from './views/SettingsView';\r\nimport ConfirmDialog             from './components/ConfirmDialog';\r\n\r\n\r\n\r\ntype AppProps = AppEventsState & AppEventsActions;\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    app: {\r\n        display: 'flex',\r\n    },\r\n}));\r\n\r\n\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nfunction useInterval(callback: () => void, delay: number | null) {\r\n    const savedCallback = useRef() as React.MutableRefObject<any>;\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n\r\n            // Clean up the timer when unmount or before re-calling.\r\n            return () => clearInterval(id);\r\n        }\r\n\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n    }, [delay]);\r\n}\r\n\r\n\r\nconst App: React.FC<AppProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    // Update periodic\r\n    useInterval(\r\n        () => {\r\n            if (props.appConfig) {\r\n                console.log('periodic timer:' + new Date());\r\n                restartSync()\r\n                .then(() => {\r\n                    let goAround = false;\r\n                    let nextActiveBoardId = '';\r\n                    const store = getConstructedAppStore();\r\n                    if(store && props.appConfig.display) {\r\n                        const state = store.getState();\r\n                        if (props.appConfig.display.goAround && state.kanbanBoard.boards.length > 1) {\r\n                            const index = (Math.max(0, state.kanbanBoard.boards\r\n                                .findIndex(x => x._id === state.kanbanBoard.activeBoardId)) + 1) %\r\n                                state.kanbanBoard.boards.length;\r\n                            goAround = true;\r\n                            nextActiveBoardId = state.kanbanBoard.boards[index]._id;\r\n                        }\r\n                    }\r\n                    const viewName = getCurrentView(history);\r\n                    if (viewName !== 'config' && viewName !== 'edit') {\r\n                        if (goAround) {\r\n                            history.push(`/${viewName}/${nextActiveBoardId}`);\r\n                        } else {\r\n                            props.refreshActiveBoard();\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.message);\r\n                });\r\n            }\r\n        },\r\n        props.appConfig && props.appConfig.display &&\r\n            props.appConfig.display.autoUpdate ?\r\n                (props.appConfig.display.autoUpdateInterval || 2419200) * 1000 :\r\n                null\r\n    );\r\n\r\n    // Update only first time (apply synchronized data to renderer)\r\n    // NOTE: The first board displayed is not up-to-date with the remote database\r\n    useEffect(() => {\r\n        // run once\r\n        setTimeout(() => {\r\n            props.refreshActiveBoard();\r\n        }, 3000);\r\n\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n    }, []);\r\n\r\n    return (\r\n        <div className={clsx(classes.app)}>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <AppDrawer />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={KanbanBoardView} />\r\n                    <Route path=\"/kanban/:id?\" component={KanbanBoardView} />\r\n                    <Route path=\"/calendar/:id?\" component={CalendarView} />\r\n                    <Route path=\"/edit/:id?\" component={EditorView} />\r\n                    <Route path=\"/config/\" component={SettingsView} />\r\n                </Switch>\r\n                {props.alertDialog.open ?\r\n                    <ConfirmDialog {...props.alertDialog} /> :\r\n                    <></>\r\n                }\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                    from 'react';\nimport ReactDOM                 from 'react-dom';\nimport { Provider }             from 'react-redux';\nimport { ConnectedRouter }      from 'connected-react-router'\nimport { getLocalDb }           from './lib/db'\nimport                               './index.css';\nimport App                      from './App';\nimport * as serviceWorker       from './serviceWorker';\nimport getAppStore,\n       { history }              from './store';\n\n\n\n(async () => {\n    getLocalDb();\n\n    ReactDOM.render(\n        <Provider store={await getAppStore()}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>,\n        document.getElementById('root'));\n\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}