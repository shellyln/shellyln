{"version":3,"sources":["lib/db.ts","lib/theme.ts","actions/AppEventsActions.ts","actions/KanbanBoardActions.ts","dispatchers/AppEventsDispatcher.ts","dispatchers/KanbanBoardDispatcher.ts","lib/gensym.ts","components/TextInputDialog.tsx","components/AppDrawer.tsx","lib/datetime.ts","components/ConfirmDialog.tsx","lib/csv.ts","components/KanbanDialog.tsx","data/initial-data.ts","states/KanbanBoardState.ts","actions/CalendarActions.ts","states/CalendarState.ts","states/AppEventsState.ts","store.ts","views/KanbanBoardView.tsx","dispatchers/CalendarViewDispatcher.ts","views/CalendarView.tsx","lib/validation.ts","views/EditorView.tsx","views/SettingsView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["dbBaseName","window","location","pathname","replace","PouchDB","plugin","PouchDBFind","remoteDb","rep","localDb","auto_compaction","localConfigDb","startSync","a","allDocs","localDocs","remoteDocs","idSet","Set","rows","doc","add","id","sync","live","retry","doc_ids","Array","from","values","on","change","info","err","restartSync","cancel","e","setRemoteDb","url","user","password","close","match","auth","username","getLocalDb","isDark","matchMedia","matches","theme","createMuiTheme","palette","type","primary","main","blue","secondary","pink","actionCreator","actionCreatorFactory","updateAppConfig","async","resetApplication","appEventsActions","showAlertDialog","closeAlertDialog","startUpdateAppConfig","started","doneUpdateAppConfig","done","failedUpdateAppConfig","failed","startResetApplication","doneResetApplication","failedResetApplication","addBoard","changeActiveBoard","updateBoardName","deleteBoard","addSticky","updateSticky","updateStickyLanes","archiveSticky","deleteSticky","editBoardAndStickys","refreshActiveBoard","kanbanBoardActions","startAddBoard","doneAddBoard","failedAddBoard","startChangeActiveBoard","doneChangeActiveBoard","failedChangeActiveBoard","startUpdateBoardName","doneUpdateBoardName","failedUpdateBoardName","startDeleteBoard","doneDeleteBoard","failedDeleteBoard","startAddSticky","doneAddSticky","failedAddSticky","startUpdateSticky","doneUpdateSticky","failedUpdateSticky","startUpdateStickyLanes","doneUpdateStickyLanes","failedUpdateStickyLanes","startArchiveSticky","doneArchiveSticky","failedArchiveSticky","startDeleteSticky","doneDeleteSticky","failedDeleteSticky","startEditBoardAndStickys","doneEditBoardAndStickys","failedEditBoardAndStickys","startRefreshActiveBoard","doneRefreshActiveBoard","failedRefreshActiveBoard","mapDispatchToProps","dispatch","v","mapStateToProps","appState","Object","assign","appEvents","boardName","boardId","kanbanId","kanbanBoard","gensymSeed","gensym","TextInputDialog","props","useTheme","React","useState","open","setOpen","value","setValue","formDialogTitleId","handleCancelClick","onClose","Dialog","aria-labelledby","DialogTitle","title","DialogContent","message","DialogContentText","TextField","autoFocus","margin","label","fieldLabel","fullWidth","error","validator","onChange","event","target","DialogActions","Button","variant","color","onClick","style","marginLeft","spacing","cancelButtonCaption","colorIsSecondary","disabled","applyButtonCaption","useStyles","makeStyles","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","nested","paddingLeft","withRouter","connect","classes","trim","length","apply","setTextInputOpen","textInputOpen","boardsOpen","setBoardsOpen","matchesPrint","useMediaQuery","handleChangeView","viewName","activeBoardId","history","push","currentView","startsWith","Drawer","className","clsx","paper","anchor","IconButton","Divider","List","component","subheader","ListSubheader","ListItem","button","Collapse","in","timeout","unmountOnExit","disablePadding","boards","map","x","key","_id","selected","fontWeight","ev","view","handleClickChangeActiveBoard","ListItemText","name","ListItemIcon","formatDate","d","String","getFullYear","padStart","getMonth","getDate","parseISODate","s","m","Date","Number","ConfirmDialog","inputValue","setInputValue","fab","textAlign","split","index","arr","confirmingTextValue","confirmingTextLabel","marginRight","marginBottom","singleButton","$s","getStringParsers","rawToToken","rawToken","concatTokens","tokens","reduce","b","seq","cls","notCls","cat","repeat","end","first","combine","erase","trans","ahead","quoted","input","spaceWithinSingleLine","nakid","cell","row","newline","parse","z","parserInput","succeeded","Error","formControl","minWidth","icon","fontSize","fabDelete","position","right","top","KanbanDialog","confirmOpen","setConfirmOpen","record","description","setDescription","barcode","setBarcode","memo","setMemo","tags","includes","join","setTags","flags","setFlags","dueDate","setDueDate","taskStatus","setTaskStatus","teamOrStory","setTeamOrStory","taskStatusesId","teamOrStoryId","onCancel","handleTagsChange","handleFlagsChange","paddingBottom","board","preferArchive","Typography","utils","DateFnsUtils","multiline","rowsMax","helperText","format","KeyboardButtonProps","date","FormControl","marginTop","InputLabel","htmlFor","Select","inputProps","taskStatuses","MenuItem","caption","teamOrStories","displayTags","displayFlags","displayBarcode","displayMemo","tagsTrimmed","tagsParsed","parseCsv","flagsTrimmed","flagsParsed","onApply","filter","isNaN","getTime","Fab","size","aria-label","onArchive","onDelete","initialData","kanbanBoardReducer","getKanbanBoardReducer","db","resp","include_docs","data","bulkDocs","postRespBoards","now","records","rec","sort","toLocaleLowerCase","initialState","activeBoard","activeBoardIndex","reducerWithInitialState","case","state","payload","boardStyle","calendarStyle","post","then","saved","_rev","rev","concat","getConstructedAppStore","params","result","setTimeout","catch","arg","alert","get","find","selector","docs","findIndex","slice","dbBoard","put","remove","taskStatusValue","teamOrStoryValue","recordsNew","recDb","recNew","calendarActions","showToday","showNextMonth","showPreviousMonth","showNextYear","showPreviousYear","calendarReducer","getCalendarReducer","activeMonth","appEventsReducer","getAppEventsReducer","confDb","defaultAppConfig","remote","endpointUrl","display","autoUpdate","autoUpdateInterval","alertDialog","appConfig","newConf","destroy","createHashHistory","hashType","store","getAppStore","createStore","combineReducers","connectRouter","router","calendar","compose","applyMiddleware","routerMiddleware","root","smallIcon","height","mapNeverStateToProps","firefox","navigator","userAgent","toLowerCase","indexOf","Sticky","today","expired","completed","data-record-id","draggable","onDragStart","dataTransfer","setData","matched","q","dangerouslySetInnerHTML","__html","marked","Qr","fill","fillColor","cellSize","unit","toImgTag","Stickys","data-status","data-team-or-story","onDragOver","preventDefault","onDrop","elId","getData","el","document","getElementById","dataset","recordId","currentState","getState","align","cursor","textDecoration","padding","kanbanBoardState","flexGrow","backgroundColor","border","borderCollapse","tableLayout","calendarTitle","calendarTitleToolBar","left","overflow","calendarTopLeftHeader","calendarDaysHeader","calendarSundayHeader","calendarSaturdayHeader","calendarCell","verticalAlign","calendarWeekendCell","chip","borderRadius","textOverflow","paddingRight","chipWrap","CalendarItem","archived","month","firstDateOfMonth","lastDateOfMonth","firstDateOfCal","getDay","lastDateOfCal","nextCalDate","dates","week","wd","stickys","toLocaleDateString","userLanguage","language","browserLanguage","year","toISOString","paddingTop","minHeight","next","pickEditableBoardProps","sticky","validateBoardProps","isArray","forEach","validateStickyProps","header","codemirror","fabSave","confirmDeletingOpen","setConfirmDeletingOpen","editorValue","setEditorValue","editCount","setEditCount","jsYaml","safeLoad","safeDump","lineWidth","options","mode","lineNumbers","lineWrapping","editor","conf","confirmResetAppOpen","setConfirmResetAppOpen","validateConfigProps","app","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","console","log","CssBaseline","ThemeProvider","path","exact","KanbanBoardView","CalendarView","EditorView","SettingsView","isLocalhost","Boolean","hostname","register","config","URL","process","href","origin","addEventListener","swUrl","fetch","response","contentType","headers","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render"],"mappings":"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","file":"static/js/main.fd7386ad.chunk.js","sourcesContent":["// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport PouchDB     from 'pouchdb-browser';\r\nimport PouchDBFind from 'pouchdb-find';\r\n\r\n\r\n\r\nconst dbBaseName = window.location.pathname.replace(/\\//g, '_');\r\n\r\nPouchDB.plugin(PouchDBFind);\r\n\r\nlet remoteDb: PouchDB.Database | null = null;\r\nlet rep: PouchDB.Replication.Sync<{}> | null = null;\r\nconst localDb = new PouchDB(`kanban-board-v1@${dbBaseName}`, { auto_compaction: true });\r\nconst localConfigDb = new PouchDB(`kanban-board-config-v1@${dbBaseName}`, { auto_compaction: true });\r\n\r\n\r\nasync function startSync() {\r\n    if (remoteDb) {\r\n        const localDocs = await localDb.allDocs({});\r\n        const remoteDocs = remoteDb ? await remoteDb.allDocs({}) : null;\r\n        const idSet = new Set<string>();\r\n        for (const doc of localDocs.rows) {\r\n            idSet.add(doc.id);\r\n        }\r\n        if (remoteDocs) {\r\n            for (const doc of remoteDocs.rows) {\r\n                idSet.add(doc.id);\r\n            }\r\n        }\r\n\r\n        rep = localDb.sync(remoteDb, {\r\n            live: true,\r\n            retry: true,\r\n            doc_ids: Array.from(idSet.values()),\r\n        })\r\n        .on('change', change => {\r\n            // something changed!\r\n        })\r\n        .on('paused', info => {\r\n            // replication was paused, usually because of a lost connection\r\n        })\r\n        .on('active' as any, info => {\r\n            // TODO: TypeScript reports the error that parameter 'active' is invalid.\r\n            // replication was resumed\r\n        })\r\n        .on('complete', info => {\r\n            // replication was canceled!\r\n        })\r\n        .on('error', err => {\r\n            // totally unhandled error (shouldn't happen)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport async function restartSync() {\r\n    if (rep) {\r\n        try {\r\n            rep.cancel();\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n        rep = null;\r\n    }\r\n\r\n    await startSync();\r\n}\r\n\r\n\r\nexport async function setRemoteDb(url: string, user: string, password: string) {\r\n    if (rep) {\r\n        try {\r\n            rep.cancel();\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n        rep = null;\r\n    }\r\n    if (remoteDb) {\r\n        try {\r\n            await remoteDb.close();\r\n        } catch (e) {\r\n            // ignore error\r\n        }\r\n        remoteDb = null;\r\n    }\r\n\r\n    if (url && url.match(/^https?:\\/\\//)) {\r\n        remoteDb = new PouchDB(url, {\r\n            auth: {\r\n                username: user,\r\n                password: password,\r\n            },\r\n        });\r\n\r\n        await startSync();\r\n    }\r\n}\r\n\r\n\r\nexport function getLocalDb() {\r\n    return localDb;\r\n}\r\n\r\nexport function getLocalConfigDb() {\r\n    return localConfigDb;\r\n}\r\n\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { blue, pink }     from '@material-ui/core/colors';\r\n\r\n\r\n\r\nexport const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: isDark ? {\r\n        type: 'dark',\r\n        primary: {\r\n            main: blue[500],\r\n        },\r\n        secondary: {\r\n            main: pink[500],\r\n        },\r\n    } : {\r\n        type: 'light',\r\n        primary: {\r\n            main: blue[500],\r\n        },\r\n        secondary: {\r\n            main: pink[500],\r\n        },\r\n    },\r\n});\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport actionCreatorFactory,\r\n       { Action }             from 'typescript-fsa';\r\nimport { AppConfig,\r\n         ConfirmDialogProps,\r\n         AppEventsState }     from '../types';\r\n\r\n\r\n\r\nexport interface AppEventsActions {\r\n    showAlertDialog: (v: ConfirmDialogProps) =>\r\n        Action<ConfirmDialogProps>;\r\n    closeAlertDialog: () =>\r\n        Action<void>;\r\n\r\n    updateAppConfig: (v: AppConfig) =>\r\n        Action<AppConfig>;\r\n    resetApplication: () =>\r\n        Action<void>;\r\n\r\n    // from KanbanBoardActions\r\n    refreshActiveBoard: () =>\r\n        Action<{}>;\r\n}\r\n\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\n\r\nconst updateAppConfig =\r\n    actionCreator.async<AppConfig, AppEventsState, Error>('ACTIONS_UPDATE_APP_CONFIG');\r\nconst resetApplication =\r\n    actionCreator.async<void, AppEventsState, Error>('ACTIONS_RESET_APPLICATION');\r\n\r\n\r\nexport const appEventsActions = {\r\n    showAlertDialog: actionCreator<ConfirmDialogProps>('ACTIONS_SHOW_ALERT_DIALOG'),\r\n    closeAlertDialog: actionCreator<void>('ACTIONS_CLOSE_ALERT_DIALOG'),\r\n\r\n    startUpdateAppConfig: updateAppConfig.started,\r\n    doneUpdateAppConfig: updateAppConfig.done,\r\n    failedUpdateAppConfig: updateAppConfig.failed,\r\n\r\n    startResetApplication: resetApplication.started,\r\n    doneResetApplication: resetApplication.done,\r\n    failedResetApplication: resetApplication.failed,\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport actionCreatorFactory,\r\n       { Action }                  from 'typescript-fsa';\r\nimport { KanbanBoardState,\r\n         KanbanBoardRecord,\r\n         KanbanRecord,\r\n         UpdateStickyLanesPayload,\r\n         ConfirmDialogProps }      from '../types';\r\n\r\n\r\n\r\nexport interface KanbanBoardActions {\r\n    addBoard: (boardName: string) =>\r\n        Action<{boardName: string}>;\r\n    changeActiveBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n        Action<{boardId: string, boardName: string}>;\r\n    deleteBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n\r\n    addSticky: () =>\r\n        Action<{}>;\r\n    updateSticky: (v: KanbanRecord) =>\r\n        Action<KanbanRecord>;\r\n    updateStickyLanes: (v: UpdateStickyLanesPayload) =>\r\n        Action<UpdateStickyLanesPayload>;\r\n    archiveSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n    deleteSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n\r\n    editBoardAndStickys: (v: KanbanBoardRecord) =>\r\n        Action<KanbanBoardRecord>;\r\n\r\n    refreshActiveBoard: () =>\r\n        Action<{}>;\r\n\r\n    // from AppEventsActions\r\n    showAlertDialog: (v: ConfirmDialogProps) =>\r\n        Action<ConfirmDialogProps>;\r\n    closeAlertDialog: () =>\r\n        Action<void>;\r\n}\r\n\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\n\r\nconst addBoard =\r\n    actionCreator.async<{boardName: string}, KanbanBoardState, Error>('ACTIONS_ADD_BOARD');\r\nconst changeActiveBoard =\r\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_CHANGE_ACTIVE_BOARD');\r\nconst updateBoardName =\r\n    actionCreator.async<{boardId: string, boardName: string}, KanbanBoardState, Error>('ACTIONS_UPDATE_BOARD_NAME');\r\nconst deleteBoard =\r\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_BOARD');\r\n\r\nconst addSticky =\r\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_ADD_STICKY');\r\nconst updateSticky =\r\n    actionCreator.async<KanbanRecord, KanbanBoardState, Error>('ACTIONS_UPDATE_STICKY');\r\nconst updateStickyLanes =\r\n    actionCreator.async<UpdateStickyLanesPayload, KanbanBoardState, Error>('ACTIONS_UPDATE_STICKY_LANES');\r\nconst archiveSticky =\r\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_ARCHIVE_STICKY');\r\nconst deleteSticky =\r\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_STICKY');\r\n\r\nconst editBoardAndStickys =\r\n    actionCreator.async<KanbanBoardRecord, KanbanBoardState, Error>('ACTIONS_EDIT_BOARD_AND_STICKYS');\r\n\r\nconst refreshActiveBoard =\r\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_REFRESH_ACTIVE_BOARD');\r\n\r\n\r\nexport const kanbanBoardActions = {\r\n    startAddBoard: addBoard.started,\r\n    doneAddBoard: addBoard.done,\r\n    failedAddBoard: addBoard.failed,\r\n\r\n    startChangeActiveBoard: changeActiveBoard.started,\r\n    doneChangeActiveBoard: changeActiveBoard.done,\r\n    failedChangeActiveBoard: changeActiveBoard.failed,\r\n\r\n    startUpdateBoardName: updateBoardName.started,\r\n    doneUpdateBoardName: updateBoardName.done,\r\n    failedUpdateBoardName: updateBoardName.failed,\r\n\r\n    startDeleteBoard: deleteBoard.started,\r\n    doneDeleteBoard: deleteBoard.done,\r\n    failedDeleteBoard: deleteBoard.failed,\r\n\r\n    startAddSticky: addSticky.started,\r\n    doneAddSticky: addSticky.done,\r\n    failedAddSticky: addSticky.failed,\r\n\r\n    startUpdateSticky: updateSticky.started,\r\n    doneUpdateSticky: updateSticky.done,\r\n    failedUpdateSticky: updateSticky.failed,\r\n\r\n    startUpdateStickyLanes: updateStickyLanes.started,\r\n    doneUpdateStickyLanes: updateStickyLanes.done,\r\n    failedUpdateStickyLanes: updateStickyLanes.failed,\r\n\r\n    startArchiveSticky: archiveSticky.started,\r\n    doneArchiveSticky: archiveSticky.done,\r\n    failedArchiveSticky: archiveSticky.failed,\r\n\r\n    startDeleteSticky: deleteSticky.started,\r\n    doneDeleteSticky: deleteSticky.done,\r\n    failedDeleteSticky: deleteSticky.failed,\r\n\r\n    startEditBoardAndStickys: editBoardAndStickys.started,\r\n    doneEditBoardAndStickys: editBoardAndStickys.done,\r\n    failedEditBoardAndStickys: editBoardAndStickys.failed,\r\n\r\n    startRefreshActiveBoard: refreshActiveBoard.started,\r\n    doneRefreshActiveBoard: refreshActiveBoard.done,\r\n    failedRefreshActiveBoard: refreshActiveBoard.failed,\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { Action }             from 'typescript-fsa';\r\nimport { Dispatch }           from 'redux';\r\nimport { AppConfig,\r\n         ConfirmDialogProps,\r\n         AppState }           from '../types';\r\nimport { AppEventsActions as AppEventsActions_,\r\n         appEventsActions }   from '../actions/AppEventsActions';\r\nimport { KanbanBoardActions as KanbanBoardActions_,\r\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\r\n\r\n\r\n\r\nexport type AppEventsActions = AppEventsActions_;\r\nexport type KanbanBoardActions = KanbanBoardActions_;\r\n\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\r\n    return {\r\n        showAlertDialog: (v: ConfirmDialogProps) =>\r\n            dispatch(appEventsActions.showAlertDialog(v)),\r\n        closeAlertDialog: () =>\r\n            dispatch(appEventsActions.closeAlertDialog()),\r\n\r\n        updateAppConfig: (v: AppConfig) =>\r\n            dispatch(appEventsActions.startUpdateAppConfig(v)),\r\n        resetApplication: () =>\r\n            dispatch(appEventsActions.startResetApplication()),\r\n\r\n        // from KanbanBoardActions\r\n        refreshActiveBoard: () =>\r\n            dispatch(kanbanBoardActions.startRefreshActiveBoard({})),\r\n    }\r\n}\r\n\r\n\r\nexport function mapStateToProps(appState: AppState) {\r\n    return Object.assign({}, appState.appEvents);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { Action }             from 'typescript-fsa';\r\nimport { Dispatch }           from 'redux';\r\nimport { KanbanBoardRecord,\r\n         KanbanRecord,\r\n         UpdateStickyLanesPayload,\r\n         ConfirmDialogProps,\r\n         AppState }           from '../types';\r\nimport { AppEventsActions as AppEventsActions_,\r\n         appEventsActions } from '../actions/AppEventsActions';\r\nimport { KanbanBoardActions as KanbanBoardActions_,\r\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\r\n\r\n\r\n\r\nexport type AppEventsActions = AppEventsActions_;\r\nexport type KanbanBoardActions = KanbanBoardActions_;\r\n\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\r\n    return {\r\n        addBoard: (boardName: string) =>\r\n            dispatch(kanbanBoardActions.startAddBoard({ boardName })),\r\n        changeActiveBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startChangeActiveBoard({ boardId })),\r\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\r\n        deleteBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startDeleteBoard({ boardId })),\r\n\r\n        addSticky: () =>\r\n            dispatch(kanbanBoardActions.startAddSticky({})),\r\n        updateSticky: (v: KanbanRecord) =>\r\n            dispatch(kanbanBoardActions.startUpdateSticky(v)),\r\n        updateStickyLanes: (v: UpdateStickyLanesPayload) =>\r\n            dispatch(kanbanBoardActions.startUpdateStickyLanes(v)),\r\n        archiveSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startArchiveSticky({ kanbanId })),\r\n        deleteSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startDeleteSticky({ kanbanId })),\r\n\r\n        editBoardAndStickys: (v: KanbanBoardRecord) =>\r\n            dispatch(kanbanBoardActions.startEditBoardAndStickys(v)),\r\n\r\n        refreshActiveBoard: () =>\r\n            dispatch(kanbanBoardActions.startRefreshActiveBoard({})),\r\n\r\n        // from AppEventsActions\r\n        showAlertDialog: (v: ConfirmDialogProps) =>\r\n            dispatch(appEventsActions.showAlertDialog(v)),\r\n        closeAlertDialog: () =>\r\n            dispatch(appEventsActions.closeAlertDialog()),\r\n    };\r\n}\r\n\r\n\r\nexport function mapStateToProps(appState: AppState) {\r\n    return Object.assign({}, appState.kanbanBoard);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet gensymSeed = 0;\r\n\r\nexport default function gensym(): string {\r\n    return `$$gensym$$_xjKvAjFXoVtro45V_${gensymSeed++}$$`;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                    from 'react';\r\nimport Button                   from '@material-ui/core/Button';\r\nimport TextField                from '@material-ui/core/TextField';\r\nimport Dialog                   from '@material-ui/core/Dialog';\r\nimport DialogActions            from '@material-ui/core/DialogActions';\r\nimport DialogContent            from '@material-ui/core/DialogContent';\r\nimport DialogContentText        from '@material-ui/core/DialogContentText';\r\nimport DialogTitle              from '@material-ui/core/DialogTitle';\r\nimport CheckIcon                from '@material-ui/icons/Check';\r\nimport CancelIcon               from '@material-ui/icons/Cancel';\r\nimport { useTheme }             from '@material-ui/core/styles';\r\nimport gensym                   from '../lib/gensym';\r\nimport { TextInputDialogProps } from '../types';\r\n\r\n\r\n\r\nconst TextInputDialog: React.FC<TextInputDialogProps> = (props) => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [value, setValue] = React.useState(props.value);\r\n\r\n    const formDialogTitleId = gensym();\r\n\r\n    function handleCancelClick() {\r\n        setOpen(false);\r\n        props.onClose(false);\r\n    }\r\n\r\n    function handleApplyClick() {\r\n        setOpen(false);\r\n        props.onClose(true, value);\r\n    }\r\n\r\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\r\n            <DialogTitle id={formDialogTitleId}>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                {props.message ?\r\n                    <DialogContentText>{props.message}</DialogContentText> :\r\n                    <></>\r\n                }\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={props.fieldLabel}\r\n                    fullWidth\r\n                    value={value}\r\n                    error={props.validator ? props.validator(value) : false}\r\n                    onChange={handleValueChange}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick={handleCancelClick}>\r\n                    <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Cancel'}\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\r\n                    disabled={props.validator ? props.validator(value) : false}\r\n                    onClick={handleApplyClick}>\r\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Apply'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\nexport default TextInputDialog;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                  from 'react';\r\nimport { connect }            from 'react-redux';\r\nimport { withRouter,\r\n         RouteChildrenProps } from 'react-router';\r\nimport Drawer                 from '@material-ui/core/Drawer';\r\nimport Divider                from '@material-ui/core/Divider';\r\nimport IconButton             from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon        from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon       from '@material-ui/icons/ChevronRight';\r\nimport AddBoxIcon             from '@material-ui/icons/AddBox';\r\nimport TableChartIcon         from '@material-ui/icons/TableChart';\r\nimport CalendarTodayIcon      from '@material-ui/icons/CalendarToday';\r\nimport EditIcon               from '@material-ui/icons/Edit';\r\nimport SettingsIcon           from '@material-ui/icons/Settings';\r\nimport HelpIcon               from '@material-ui/icons/Help';\r\nimport ExpandLessIcon         from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon         from '@material-ui/icons/ExpandMore';\r\nimport Collapse               from '@material-ui/core/Collapse';\r\nimport List                   from '@material-ui/core/List';\r\nimport ListSubheader          from '@material-ui/core/ListSubheader';\r\nimport ListItem               from '@material-ui/core/ListItem';\r\nimport ListItemIcon           from '@material-ui/core/ListItemIcon';\r\nimport ListItemText           from '@material-ui/core/ListItemText';\r\nimport { makeStyles }         from '@material-ui/core/styles';\r\nimport useMediaQuery          from '@material-ui/core/useMediaQuery';\r\nimport clsx                   from 'clsx';\r\nimport { KanbanBoardState }   from '../types';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         KanbanBoardActions } from '../dispatchers/KanbanBoardDispatcher';\r\nimport TextInputDialog        from '../components/TextInputDialog';\r\n\r\n\r\n\r\ntype AppDrawerProps = KanbanBoardState & KanbanBoardActions & RouteChildrenProps<{}>;\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(6) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(6) + 1,\r\n        },\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\n\r\nconst AppDrawer: React.FC<AppDrawerProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [textInputOpen, setTextInputOpen] = React.useState({\r\n        open: false,\r\n        title: '',\r\n        message: '',\r\n        fieldLabel: '',\r\n        value: '',\r\n        validator: (value: string) => value.trim().length <= 0,\r\n        onClose: handleCloseDialogAddNewBoard,\r\n    });\r\n    const [boardsOpen, setBoardsOpen] = React.useState(true);\r\n    const matchesPrint = useMediaQuery('print');\r\n\r\n    function handleDrawerToggle() {\r\n        setOpen(!open);\r\n    }\r\n\r\n    function handleClickChangeActiveBoard(id: string) {\r\n        let view = 'kanban';\r\n        if (props.history.location.pathname) {\r\n            if (props.history.location.pathname.startsWith('/calendar/')) {\r\n                view = 'calendar';\r\n            } else if (props.history.location.pathname.startsWith('/edit/')) {\r\n                view = 'edit';\r\n            }\r\n        }\r\n        props.history.push(`/${view}/${id}`);\r\n    }\r\n\r\n    function handleClickAddNewBoard() {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, {\r\n            open: true,\r\n            title: 'New board',\r\n            message: '',\r\n            fieldLabel: 'Board name',\r\n            value: '',\r\n        }));\r\n    }\r\n    \r\n    function handleCloseDialogAddNewBoard(apply: boolean, value?: string) {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\r\n        if (apply && value) {\r\n            props.addBoard(value);\r\n        }\r\n    }\r\n\r\n    function handleChangeView(viewName: string, id: string) {\r\n        if (id === props.activeBoardId) {\r\n            props.history.push(`/${viewName}/${id}`);\r\n        }\r\n    }\r\n\r\n    function handleBoardsOpenClick() {\r\n        setBoardsOpen(!boardsOpen);\r\n    }\r\n\r\n    let currentView = '';\r\n    if (props.history.location.pathname) {\r\n        if (props.history.location.pathname.startsWith('/kanban/')) {\r\n            currentView = 'kanban';\r\n        } else if (props.history.location.pathname.startsWith('/calendar/')) {\r\n            currentView = 'calendar';\r\n        } else if (props.history.location.pathname.startsWith('/edit/')) {\r\n            currentView = 'edit';\r\n        } else if (props.history.location.pathname.startsWith('/config/')) {\r\n            currentView = 'config';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!matchesPrint ?\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    className={clsx(classes.drawer, {\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    })}\r\n                    classes={{\r\n                        paper: clsx({\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open,\r\n                        }),\r\n                    }}\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    >\r\n                    <div className={''}>\r\n                        <IconButton onClick={handleDrawerToggle}>\r\n                            {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    {open ?\r\n                        <>\r\n                            <List\r\n                                component=\"nav\"\r\n                                aria-labelledby=\"nested-list-subheader\"\r\n                                subheader={\r\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                                        Boards\r\n                                    </ListSubheader>\r\n                                }>\r\n                                <ListItem button\r\n                                    onClick={handleBoardsOpenClick}>\r\n                                    {boardsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                                </ListItem>\r\n                                <Collapse in={boardsOpen} timeout=\"auto\" unmountOnExit>\r\n                                    <List component=\"div\" disablePadding>\r\n                                        {props.boards.map(x =>\r\n                                            <ListItem button\r\n                                                    key={x._id}\r\n                                                    selected={x._id === props.activeBoardId}\r\n                                                    className={clsx(classes.nested)}\r\n                                                    style={{fontWeight: x._id === props.activeBoardId ? 'bold' : 'normal'}}\r\n                                                    onClick={ev => handleClickChangeActiveBoard(x._id)} >\r\n                                                <ListItemText\r\n                                                    primary={x.name} />\r\n                                            </ListItem>\r\n                                        )}\r\n                                    </List>\r\n                                </Collapse>\r\n                            </List>\r\n                            <ListItem button\r\n                                onClick={handleClickAddNewBoard}>\r\n                                <ListItemIcon><AddBoxIcon /></ListItemIcon>\r\n                                <ListItemText primary=\"New board...\" />\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                    <List>\r\n                        {/* settings */}\r\n                        <ListItem button\r\n                                selected={currentView === 'kanban' || currentView === ''}\r\n                                onClick={ev => handleChangeView('kanban', props.activeBoardId)}>\r\n                            <ListItemIcon><TableChartIcon /></ListItemIcon>\r\n                            {open ? <ListItemText primary=\"Kanban\" /> : <></>}\r\n                        </ListItem>\r\n                        <ListItem button\r\n                                selected={currentView === 'calendar'}\r\n                                onClick={ev => handleChangeView('calendar', props.activeBoardId)}>\r\n                            <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\r\n                            {open ? <ListItemText primary=\"Calendar\" /> : <></>}\r\n                        </ListItem>\r\n                        <ListItem button\r\n                                selected={currentView === 'edit'}\r\n                                onClick={ev => handleChangeView('edit', props.activeBoardId)}>\r\n                            <ListItemIcon><EditIcon /></ListItemIcon>\r\n                            {open ? <ListItemText primary=\"Editor\" /> : <></>}\r\n                        </ListItem>\r\n                    </List>\r\n                    {open ?\r\n                        <>\r\n                            <Divider />\r\n                            <ListItem button\r\n                                    selected={currentView === 'config'}\r\n                                    onClick={ev => props.history.push(`/config/`)}>\r\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                                {open ? <ListItemText primary=\"Settings\" /> : <></>}\r\n                            </ListItem>\r\n                            <List>\r\n                                <ListItem button\r\n                                        onClick={ev => window.open('https://shellyln.github.io/', '_blank')}>\r\n                                    <ListItemIcon><HelpIcon /></ListItemIcon>\r\n                                    {open ? <ListItemText primary=\"Help\" /> : <></>}\r\n                                </ListItem>\r\n                            </List>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </Drawer> :\r\n                <></>\r\n            }\r\n            {textInputOpen.open ?\r\n                <TextInputDialog\r\n                    open={true}\r\n                    title={textInputOpen.title}\r\n                    message={textInputOpen.message}\r\n                    fieldLabel={textInputOpen.fieldLabel}\r\n                    value={textInputOpen.value}\r\n                    validator={textInputOpen.validator}\r\n                    onClose={textInputOpen.onClose} /> :\r\n                <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default (withRouter(connect(mapStateToProps, mapDispatchToProps)(AppDrawer) as any) as any) as React.FC;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport function formatDate(d: Date) {\r\n    return `${String(d.getFullYear()).padStart(4, '0')}-${\r\n        String(d.getMonth() + 1).padStart(2, '0')}-${\r\n        String(d.getDate()).padStart(2, '0')}`;\r\n}\r\n\r\nexport function parseISODate(s: string) {\r\n    const m = s.match(/^(?:(-?\\d{4,})-(\\d{2})-(\\d{2}))|(?:(-?\\d{4,})(\\d{2})(\\d{2}))$/);\r\n    if (m) {\r\n        return new Date(Number(m[1]), Number(m[2]) - 1, Number(m[3]));\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                  from 'react';\r\nimport Button                 from '@material-ui/core/Button';\r\nimport TextField              from '@material-ui/core/TextField';\r\nimport Dialog                 from '@material-ui/core/Dialog';\r\nimport DialogActions          from '@material-ui/core/DialogActions';\r\nimport DialogContent          from '@material-ui/core/DialogContent';\r\nimport DialogContentText      from '@material-ui/core/DialogContentText';\r\nimport DialogTitle            from '@material-ui/core/DialogTitle';\r\nimport CheckIcon              from '@material-ui/icons/Check';\r\nimport CancelIcon             from '@material-ui/icons/Cancel';\r\nimport { useTheme }           from '@material-ui/core/styles';\r\nimport gensym                 from '../lib/gensym';\r\nimport { ConfirmDialogProps } from '../types';\r\n\r\n\r\n\r\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = (props) => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n\r\n    const formDialogTitleId = gensym();\r\n\r\n    function handleCancelClick() {\r\n        setOpen(false);\r\n        props.onClose(false);\r\n    }\r\n\r\n    function handleApplyClick() {\r\n        if (props.confirmingTextValue && props.confirmingTextValue !== inputValue) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        props.onClose(true);\r\n    }\r\n\r\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\r\n            {props.fab ? props.fab : <></>}\r\n            <DialogTitle id={formDialogTitleId} style={{textAlign: 'center'}}>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText style={{textAlign: 'center'}}>\r\n                    {(props.message || '').split('\\n').map((x, index, arr) =>\r\n                        <span key={'content-' + index}>\r\n                            {x}\r\n                            {index <= (arr.length - 1) ? <br/> : <></>}\r\n                        </span>)\r\n                    }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {props.confirmingTextValue ?\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    label={props.confirmingTextLabel}\r\n                    value={inputValue}\r\n                    onChange={handleValueChange}\r\n                    style={{marginLeft: theme.spacing(1), marginRight: theme.spacing(1), marginBottom: theme.spacing(1)}}\r\n                    /> :\r\n                    <></>\r\n            }\r\n            <DialogActions style={{margin: 'auto'}}>\r\n                {!props.singleButton?\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                        onClick={handleCancelClick} >\r\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Cancel'}\r\n                    </Button> :\r\n                    <></>\r\n                }\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\r\n                    disabled={props.confirmingTextValue ? inputValue !== props.confirmingTextValue : false}\r\n                    onClick={handleApplyClick} >\r\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Apply'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\nexport default ConfirmDialog;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { parserInput }      from 'fruitsconfits/modules/lib/types';\r\nimport { getStringParsers } from 'fruitsconfits/modules/lib/string-parser';\r\n\r\n\r\n\r\ntype Ctx = undefined;\r\ntype Ast = string | string[];\r\n\r\n\r\nconst $s = getStringParsers<Ctx, Ast>({\r\n    rawToToken: rawToken => rawToken,\r\n    concatTokens: tokens => (tokens.length ?\r\n        [tokens.reduce((a, b) => a as string + b as string)] : []),\r\n});\r\n\r\nconst {seq, cls, notCls, classes, cat,\r\n        repeat, end, first, combine, erase, trans, ahead} = $s;\r\n\r\n\r\nconst quoted = trans(input => input.length ? input : [''])(\r\n    erase(repeat(classes.spaceWithinSingleLine), cls('\"')),\r\n    cat(repeat(first(\r\n        trans(input => ['\"'])(seq('\"\"')),\r\n        notCls('\"'),\r\n    ))),\r\n    erase(cls('\"'), repeat(erase(classes.spaceWithinSingleLine))),);\r\n\r\nconst nakid = trans(input => input.length ? input : [''])(\r\n    erase(repeat(classes.spaceWithinSingleLine)),\r\n    cat(repeat(first(\r\n        erase(classes.spaceWithinSingleLine, ahead(cls(',', '\\r\\n', '\\n', '\\r'))),\r\n        notCls(',', '\\r\\n', '\\n', '\\r'),\r\n    ))),);\r\n\r\nconst cell = first(quoted, nakid);\r\n\r\nconst row = trans(input => [input as string[]])(\r\n    cell,\r\n    repeat(combine(erase(seq(',')), cell)),);\r\n\r\nconst rows = combine(\r\n    row,\r\n    repeat(combine(erase(classes.newline), row)),\r\n    end(),);\r\n\r\n\r\nexport function parse(s: string) {\r\n    const z = rows(parserInput(s));\r\n    if (! z.succeeded) {\r\n        throw new Error(z.message);\r\n    }\r\n    return z.tokens as string[][];\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                      from 'react';\r\nimport                                 'date-fns';\r\nimport DateFnsUtils               from '@date-io/date-fns';\r\nimport { MaterialUiPickersDate }  from '@material-ui/pickers/typings/date';\r\nimport { MuiPickersUtilsProvider,\r\n         KeyboardDatePicker }     from '@material-ui/pickers';\r\nimport Button                     from '@material-ui/core/Button';\r\nimport TextField                  from '@material-ui/core/TextField';\r\nimport Select                     from '@material-ui/core/Select';\r\nimport MenuItem                   from '@material-ui/core/MenuItem';\r\nimport InputLabel                 from '@material-ui/core/InputLabel';\r\nimport FormControl                from '@material-ui/core/FormControl';\r\nimport Dialog                     from '@material-ui/core/Dialog';\r\nimport DialogActions              from '@material-ui/core/DialogActions';\r\nimport DialogContent              from '@material-ui/core/DialogContent';\r\nimport DialogTitle                from '@material-ui/core/DialogTitle';\r\nimport Typography                 from '@material-ui/core/Typography';\r\nimport Fab                        from '@material-ui/core/Fab';\r\nimport ArchiveIcon                from '@material-ui/icons/Archive';\r\nimport DeleteIcon                 from '@material-ui/icons/Delete';\r\nimport CheckIcon                  from '@material-ui/icons/Check';\r\nimport CancelIcon                 from '@material-ui/icons/Cancel';\r\nimport { makeStyles,\r\n         useTheme }               from '@material-ui/core/styles';\r\nimport clsx                       from 'clsx';\r\nimport gensym                     from '../lib/gensym';\r\nimport { KanbanDialogProps }      from '../types';\r\nimport { formatDate,\r\n         parseISODate }           from '../lib/datetime';\r\nimport ConfirmDialog              from '../components/ConfirmDialog';\r\nimport { parse as parseCsv }      from '../lib/csv';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        minWidth: 220,\r\n    },\r\n    icon: {\r\n        margin: theme.spacing(1),\r\n        fontSize: 26,\r\n    },\r\n    fabDelete: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nconst KanbanDialog: React.FC<KanbanDialogProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [confirmOpen, setConfirmOpen] = React.useState(false);\r\n    const [description, setDescription] = React.useState(props.record.description);\r\n    const [barcode, setBarcode] = React.useState(props.record.barcode);\r\n    const [memo, setMemo] = React.useState(props.record.memo);\r\n    const [tags, setTags] = React.useState(props.record.tags ?\r\n        props.record.tags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\r\n    const [flags, setFlags] = React.useState(props.record.flags ?\r\n        props.record.flags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\r\n    const [dueDate, setDueDate] = React.useState<MaterialUiPickersDate>(parseISODate(props.record.dueDate));\r\n    const [taskStatus, setTaskStatus] = React.useState(props.record.taskStatus);\r\n    const [teamOrStory, setTeamOrStory] = React.useState(props.record.teamOrStory);\r\n\r\n    const formDialogTitleId = gensym();\r\n    const taskStatusesId = gensym();\r\n    const teamOrStoryId = gensym();\r\n\r\n    function handleCancelClick() {\r\n        setOpen(false);\r\n        props.onCancel();\r\n    }\r\n\r\n    function handleApplyClick() {\r\n        setOpen(false);\r\n\r\n        const tagsTrimmed = tags.trim();\r\n        const tagsParsed = tagsTrimmed ? parseCsv(tagsTrimmed) : [];\r\n\r\n        const flagsTrimmed = flags.trim();\r\n        const flagsParsed = flagsTrimmed ? parseCsv(flagsTrimmed) : [];\r\n\r\n        props.onApply(Object.assign({}, props.record, {\r\n            description,\r\n            barcode,\r\n            memo,\r\n            tags: (tagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\r\n            flags: (flagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\r\n            dueDate: (dueDate && !Number.isNaN(dueDate.getTime())) ? formatDate(dueDate) : '',\r\n            taskStatus,\r\n            teamOrStory,\r\n        }));\r\n    }\r\n\r\n    function handleArchiveOrDeleteClick() {\r\n        setConfirmOpen(true);\r\n    }\r\n\r\n    function handleDescriptionChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    function handleDueDateChange(date: MaterialUiPickersDate) {\r\n        setDueDate(date);\r\n    }\r\n\r\n    function handleTaskStatusChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\r\n        if (! event.target.name) {\r\n            return;\r\n        }\r\n        setTaskStatus(event.target.value as string);\r\n    }\r\n\r\n    function handleTeamOrStoryChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\r\n        if (! event.target.name) {\r\n            return;\r\n        }\r\n        setTeamOrStory(event.target.value as string);\r\n    }\r\n\r\n    function handleTagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setTags(event.target.value);\r\n    }\r\n\r\n    function handleFlagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setFlags(event.target.value);\r\n    }\r\n\r\n    function handleBarcodeChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setBarcode(event.target.value);\r\n    }\r\n\r\n    function handleMemoChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        setMemo(event.target.value);\r\n    }\r\n\r\n    function handleConfirmArchiving(apply: boolean) {\r\n        setConfirmOpen(false);\r\n        if (apply) {\r\n            setOpen(false);\r\n            props.onArchive(props.record._id);\r\n        }\r\n    }\r\n\r\n    function handleConfirmDeleting(apply: boolean) {\r\n        setConfirmOpen(false);\r\n        if (apply) {\r\n            setOpen(false);\r\n            props.onDelete(props.record._id);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\r\n                <DialogTitle id={formDialogTitleId} style={{paddingBottom: '0'}}>\r\n                    Edit Kanban\r\n                    <Button\r\n                        className={clsx(classes.fabDelete)}\r\n                        variant=\"outlined\"\r\n                        color={props.board.preferArchive ? 'default' : 'secondary'}\r\n                        onClick={handleArchiveOrDeleteClick} >\r\n                        {props.board.preferArchive ? <ArchiveIcon /> : <DeleteIcon color=\"secondary\" />}\r\n                        <Typography variant=\"body1\" color={props.board.preferArchive ? 'initial' : 'secondary'}\r\n                            style={{marginLeft: theme.spacing(1)}} >\r\n                            {props.board.preferArchive ? 'Archive' : 'Delete'}\r\n                        </Typography>\r\n                    </Button>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <div>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                label=\"Description\"\r\n                                multiline\r\n                                rows={4}\r\n                                rowsMax={16}\r\n                                fullWidth\r\n                                value={description}\r\n                                onChange={handleDescriptionChange}\r\n                                helperText=\"Markdown syntax is available\"\r\n                                />\r\n                        </div>\r\n                        <div>\r\n                            <KeyboardDatePicker\r\n                                margin=\"dense\"\r\n                                label=\"Due date\"\r\n                                format=\"yyyy-MM-dd\"\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                value={dueDate}\r\n                                onChange={handleDueDateChange}\r\n                                />\r\n                        </div>\r\n                        <div>\r\n                            <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\r\n                                <InputLabel htmlFor={taskStatusesId}>Status</InputLabel>\r\n                                <Select\r\n                                    value={taskStatus}\r\n                                    onChange={handleTaskStatusChange}\r\n                                    inputProps={{\r\n                                        name: 'taskStatus',\r\n                                        id: taskStatusesId,\r\n                                    }}\r\n                                    >\r\n                                    {props.taskStatuses.map(x => (\r\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\r\n                                <InputLabel htmlFor={teamOrStoryId}>Team / Story</InputLabel>\r\n                                <Select\r\n                                    value={teamOrStory}\r\n                                    onChange={handleTeamOrStoryChange}\r\n                                    inputProps={{\r\n                                        name: 'teamOrStory',\r\n                                        id: teamOrStoryId,\r\n                                    }}\r\n                                    >\r\n                                    {props.teamOrStories.map(x => (\r\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        {props.board.displayTags && props.board.displayFlags ?\r\n                            <div>\r\n                                <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\r\n                                    <TextField\r\n                                        margin=\"dense\"\r\n                                        label=\"Tags\"\r\n                                        value={tags}\r\n                                        onChange={handleTagsChange}\r\n                                        helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                        />\r\n                                </FormControl>\r\n                                <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\r\n                                    <TextField\r\n                                        margin=\"dense\"\r\n                                        label=\"Flags\"\r\n                                        value={flags}\r\n                                        onChange={handleFlagsChange}\r\n                                        helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                        />\r\n                                </FormControl>\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayTags && !props.board.displayFlags ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Tags\"\r\n                                    fullWidth\r\n                                    value={tags}\r\n                                    onChange={handleTagsChange}\r\n                                    helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayFlags && !props.board.displayTags ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Flags\"\r\n                                    fullWidth\r\n                                    value={flags}\r\n                                    onChange={handleFlagsChange}\r\n                                    helperText=\"Separate with commas (Excel CSV syntax)\"\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayBarcode ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Barcode\"\r\n                                    multiline\r\n                                    rows={1}\r\n                                    rowsMax={16}\r\n                                    fullWidth\r\n                                    value={barcode}\r\n                                    onChange={handleBarcodeChange}\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                        {props.board.displayMemo ?\r\n                            <div>\r\n                                <TextField\r\n                                    margin=\"dense\"\r\n                                    label=\"Memo\"\r\n                                    multiline\r\n                                    rows={1}\r\n                                    rowsMax={16}\r\n                                    fullWidth\r\n                                    value={memo}\r\n                                    onChange={handleMemoChange}\r\n                                    />\r\n                            </div> :\r\n                            <></>\r\n                        }\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelClick} variant=\"outlined\" color=\"default\">\r\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />Cancel\r\n                    </Button>\r\n                    <Button onClick={handleApplyClick} variant=\"contained\" color=\"primary\">\r\n                        <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {confirmOpen ?\r\n                <ConfirmDialog\r\n                    open={true}\r\n                    title={props.board.preferArchive ? 'Archive kanban' : 'Delete kanban'}\r\n                    message={`Are you sure want to ${props.board.preferArchive ? 'archive' : 'delete'} the kanban?`}\r\n                    colorIsSecondary={props.board.preferArchive ? false : true}\r\n                    applyButtonCaption={props.board.preferArchive ? 'Archive' : 'Delete'}\r\n                    fab={props.board.preferArchive ?\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"archive\" style={{margin: 'auto'}}>\r\n                            <ArchiveIcon />\r\n                        </Fab> :\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    }\r\n                    onClose={props.board.preferArchive ?\r\n                        handleConfirmArchiving:\r\n                        handleConfirmDeleting} /> :\r\n                <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default KanbanDialog;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const boardStyle =\r\n`/* per-board customized styles */\r\n/*\r\n.KanbanBoardView-sticky-note {width: 200px}\r\n.KanbanBoardView-header-cell-task-statuses {min-width: 210px}\r\ntable.KanbanBoardView-board tbody th {\r\n    padding: 10px;\r\n    white-space: nowrap;\r\n}\r\n*/\r\ntable.KanbanBoardView-board thead th.status-backlog {\r\n    background-color: var(--weak-header-bg-color);\r\n}\r\ntable.KanbanBoardView-board td.status-backlog {\r\n    background-color: var(--weak-data-bg-color);\r\n}\r\ntable.KanbanBoardView-board thead th.status-done {\r\n    background-color: var(--weak-header-bg-color);\r\n}\r\ntable.KanbanBoardView-board td.status-done {\r\n    background-color: var(--weak-data-bg-color);\r\n}\r\n.team-or-story-team-b .KanbanBoardView-sticky-note {\r\n    background-color: var(--sticky-blue-color);\r\n}\r\n.status-done .KanbanBoardView-sticky-note {\r\n    background-color: var(--sticky-green-color);\r\n}\r\n.KanbanBoardView-sticky-tags .tag-bug {\r\n    color: white;\r\n    background-color: red;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-ok {\r\n    color: white;\r\n    background-color: green;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-NG {\r\n    color: white;\r\n    background-color: #e91e63;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-PR {\r\n    color: white;\r\n    background-color: purple;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-rejected {\r\n    color: white;\r\n    background-color: #990000;\r\n}\r\n.KanbanBoardView-sticky-tags .tag-star {\r\n    color: inherit;\r\n    background-color: inherit;\r\n}\r\n`;\r\n\r\n\r\nexport const calendarStyle =\r\n`/* per-board customized styles */\r\ndiv.CalendarView-item-chip.status-done {\r\n    background-color: var(--sticky-green-color);\r\n}\r\n`;\r\n\r\n\r\nexport const initialData = {\r\n    \"boards\": [{\r\n        \"type\": \"kanbanBoard\",\r\n        \"name\": \"Welcome Board\",\r\n        \"taskStatuses\": [{\r\n            \"value\": \"Backlog\",\r\n            \"caption\": \"🛌 Backlog\",\r\n            \"className\": \"status-backlog\"\r\n        }, {\r\n            \"value\": \"ToDo\",\r\n            \"caption\": \"📯 ToDo\",\r\n            \"className\": \"status-todo\"\r\n        }, {\r\n            \"value\": \"InProgress\",\r\n            \"caption\": \"⛏ InProgress\",\r\n            \"className\": \"status-inprogress\"\r\n        }, {\r\n            \"value\": \"Staging\",\r\n            \"caption\": \"📦 Staging\",\r\n            \"className\": \"status-staging\"\r\n        }, {\r\n            \"value\": \"Done\",\r\n            \"caption\": \"🎉 Done\",\r\n            \"className\": \"status-done\",\r\n            \"completed\": true\r\n        }],\r\n        \"teamOrStories\": [{\r\n            \"value\": \"Team A\",\r\n            \"caption\": \"🐆 Team A\",\r\n            \"className\": \"team-or-story-team-a\"\r\n        }, {\r\n            \"value\": \"Team B\",\r\n            \"caption\": \"🦃 Team B\",\r\n            \"className\": \"team-or-story-team-b\"\r\n        }, {\r\n            \"value\": \"Team C\",\r\n            \"caption\": \"🐍 Team C\",\r\n            \"className\": \"team-or-story-team-c\"\r\n        }],\r\n        \"tags\": [{\r\n            \"value\": \"bug\",\r\n            \"className\": \"tag-bug\"\r\n        }, {\r\n            \"value\": \"ok\",\r\n            \"className\": \"tag-ok\"\r\n        }, {\r\n            \"value\": \"NG\",\r\n            \"className\": \"tag-NG\"\r\n        }, {\r\n            \"value\": \"PR\",\r\n            \"className\": \"tag-PR\"\r\n        }, {\r\n            \"value\": \"rejected\",\r\n            \"className\": \"tag-rejected\"\r\n        }, {\r\n            \"value\": \"⭐\",\r\n            \"className\": \"tag-star\"\r\n        }, {\r\n            \"value\": \"⭐⭐\",\r\n            \"className\": \"tag-star\"\r\n        }, {\r\n            \"value\": \"⭐⭐⭐\",\r\n            \"className\": \"tag-star\"\r\n        }],\r\n        \"displayBarcode\": true,\r\n        \"displayMemo\": true,\r\n        \"displayFlags\": true,\r\n        \"displayTags\": true,\r\n        \"preferArchive\": false,\r\n        \"boardStyle\": boardStyle,\r\n        \"calendarStyle\": calendarStyle\r\n    }],\r\n    \"records\": [{\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Welcome to the Kanban Board App!\\n\" +\r\n            \"* This is a kanban (or sticky).\\n\" +\r\n            \"* Write one task for one kanban.\\n\" +\r\n            \"* To add a kanban to the board, Tap or click the “+” icon in the upper left corner of the board.\\n\" +\r\n            \"* Tap or click on kanban to edit.\\n\" +\r\n            \"* Drag and drop the kanban to change the status.\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"* Board and Kanban data are stored in the browser's local “indexed DB”.\\n\" +\r\n            \"* You can use a remote [“CouchDB”](https://couchdb.apache.org) server to synchronize multiple device boards.\\n\" +\r\n            \"* You can get a fully managed CouchDB server with [“IBM Cloudant®” from IBM Cloud](https://www.ibm.com/cloud/cloudant).\\n\" +\r\n            \"* Create an [IBM Cloud Lite account](https://www.ibm.com/cloud/free/) and get a free tier without a credit card.\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Go [Settings](#/config/) to setup\\n\\n\" +\r\n            \"----\\n\\n\" +\r\n            \"* `remote.endpointUrl`: Cloudant `External Endpoint` URL w/ DB name\\n\" +\r\n            \"  * e.g. `https://???-bluemix.cloudant.com/mydb`\\n\" +\r\n            \"* `remote.user`: Cloudant `API Key`\\n\" +\r\n            \"* `remote.password`: Cloudant `API Key`'s password\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"* You can customize the appearance and behavior of the board and kanban in the configuration editor view.\\n\\n\\n\" +\r\n            \"----\\n\\n\" +\r\n            \"# Go [Editor](#/edit/) to setup\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"InProgress\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"2030-01-01\",\r\n        \"description\":\r\n            \"### Hello, kanban board !\\n\\n\" +\r\n            \"* ~aaa~\\n\" +\r\n            \"  * **bbb**\\n\" +\r\n            \"* *ccc*\\n\\n\" +\r\n            \"----\\n\\n\" +\r\n            \"https://shellyln.github.io/\\n\\n\" +\r\n            \"![logo](https://shellyln.github.io/assets/image/shellyln.png)\",\r\n        \"barcode\": \"12345\",\r\n        \"memo\": \"memo\",\r\n        \"flags\": [\"Marked\"],\r\n        \"tags\": [\"PR\", \"bug\", \"ok\", \"NG\", \"rejected\", \"⭐⭐⭐\"],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"Staging\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# What is a Kanban Board?\\n\" +\r\n            \"https://www.atlassian.com/agile/kanban/boards\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# What are WIP limits?\\n\" +\r\n            \"https://www.atlassian.com/agile/kanban/wip-limits\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Get Started With Cloudant in IBM Cloud\\n\" +\r\n            \"https://developer.ibm.com/clouddataservices/docs/cloudant/get-started/\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"# Sign up for IBM Cloud\\n\" +\r\n            \"https://cloud.ibm.com/registration\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team C\",\r\n        \"taskStatus\": \"ToDo\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"\",\r\n        \"description\":\r\n            \"Release Kanban board app v0.0.1\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [],\r\n        \"tags\": [\"ok\", \"merged\", \"v0.0.1\", \"feature-something\", \"#1\", \"#2\"],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team A\",\r\n        \"taskStatus\": \"Done\"\r\n    }, {\r\n        \"type\": \"kanban\",\r\n        \"dueDate\": \"2030-01-01\",\r\n        \"description\": \"This record is archived.\",\r\n        \"barcode\": \"\",\r\n        \"memo\": \"\",\r\n        \"flags\": [\"Archived\"],\r\n        \"tags\": [],\r\n        \"boardId\": \"\",\r\n        \"teamOrStory\": \"Team B\",\r\n        \"taskStatus\": \"Backlog\"\r\n    }]\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { reducerWithInitialState,\r\n         ReducerBuilder }         from 'typescript-fsa-reducers';\r\nimport { push }                   from 'connected-react-router';\r\nimport { KanbanBoardState,\r\n         KanbanBoardInitialData,\r\n         DocumentWithContents,\r\n         KanbanBoardDbRecord,\r\n         KanbanBoardDbRecordUserData,\r\n         KanbanBoardRecord,\r\n         KanbanRecord }           from '../types';\r\nimport { appEventsActions }       from '../actions/AppEventsActions';\r\nimport { kanbanBoardActions }     from '../actions/KanbanBoardActions';\r\nimport { restartSync,\r\n         getLocalDb }             from '../lib/db';\r\nimport { formatDate }             from '../lib/datetime';\r\nimport { getConstructedAppStore } from '../store';\r\nimport { initialData }            from '../data/initial-data';\r\n\r\n\r\n\r\nlet kanbanBoardReducer: ReducerBuilder<KanbanBoardState, KanbanBoardState> = null as any;\r\n\r\nexport async function getKanbanBoardReducer() {\r\n    if (!kanbanBoardReducer) {\r\n        const db = getLocalDb();\r\n\r\n        // TODO: try-catch\r\n        let resp: PouchDB.Core.AllDocsResponse<DocumentWithContents> = null as any;\r\n\r\n        resp = await db.allDocs({\r\n            include_docs: true,\r\n        });\r\n\r\n        if (resp.rows.length === 0) {\r\n            const data: KanbanBoardInitialData = initialData as any;\r\n\r\n            const postRespBoards = await db.bulkDocs([\r\n                ...data.boards,\r\n            ], {});\r\n\r\n            const now = new Date();\r\n            for (const rec of data.records) {\r\n                rec.dueDate = formatDate(now);\r\n                rec.boardId = postRespBoards[0].id as string;\r\n            }\r\n            await db.bulkDocs([\r\n                ...data.records,\r\n            ], {});\r\n\r\n            resp = await db.allDocs({\r\n                include_docs: true,\r\n            });\r\n        }\r\n\r\n        const boards: KanbanBoardRecord[] = resp.rows\r\n            .filter(x => x.doc && x.doc.type === 'kanbanBoard')\r\n            .map(x => x.doc)\r\n            .sort((a: any, b: any) =>\r\n                String(a.name).toLocaleLowerCase() >= String(b.name).toLocaleLowerCase() ?\r\n                (String(a.name) === String(b.name) ? 0 : 1) : -1) as any;\r\n        for (const board of boards) {\r\n            const records: KanbanRecord[] = resp.rows\r\n                .filter(x => x.doc && x.doc.type === 'kanban' &&\r\n                    (x.doc as KanbanRecord).boardId === board._id)\r\n                .map(x => x.doc) as any;\r\n            board.records = records;\r\n        }\r\n\r\n        const initialState: KanbanBoardState = {\r\n            activeBoard: boards[0],\r\n            boards: boards,\r\n            activeBoardId: boards[0]._id,\r\n            activeBoardIndex: 0,\r\n        };\r\n\r\n        kanbanBoardReducer = reducerWithInitialState(initialState)\r\n            //// addBoard async actions ////\r\n            .case(kanbanBoardActions.startAddBoard, (state, payload) => {\r\n                const data: KanbanBoardInitialData = initialData as any;\r\n                const board: KanbanBoardDbRecordUserData = {\r\n                    type: 'kanbanBoard',\r\n                    name: payload.boardName,\r\n                    taskStatuses: data.boards[0].taskStatuses,\r\n                    teamOrStories: data.boards[0].teamOrStories,\r\n                    tags: data.boards[0].tags,\r\n                    displayBarcode: data.boards[0].displayBarcode,\r\n                    displayMemo: data.boards[0].displayMemo,\r\n                    displayFlags: data.boards[0].displayFlags,\r\n                    displayTags: data.boards[0].displayTags,\r\n                    preferArchive: data.boards[0].preferArchive,\r\n                    boardStyle: data.boards[0].boardStyle,\r\n                    calendarStyle: data.boards[0].calendarStyle,\r\n                };\r\n                db.post(board, {})\r\n                .then(v => {\r\n                    const saved: KanbanBoardRecord = board as any;\r\n                    saved._id = v.id;\r\n                    saved._rev = v.rev;\r\n                    saved.records = [];\r\n                    state.boards = state.boards.concat([saved]);\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddBoard({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoardId: v.id, activeBoard: saved }),\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(push(`/kanban/${v.id}`));\r\n                    }, 30);\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddBoard({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to add board: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneAddBoard, (state, arg) => {\r\n                setTimeout(() => {\r\n                    restartSync()\r\n                    .then(() => {\r\n                        //\r\n                    }).catch(err => {\r\n                        alert(err.message);\r\n                    })\r\n                }, 1500);\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedAddBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// changeActiveBoard async actions ////\r\n            .case(kanbanBoardActions.startChangeActiveBoard, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const board = await db.get<KanbanBoardRecord>(payload.boardId, {});\r\n                        if (! board) {\r\n                            return state;\r\n                        }\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: board._id,\r\n                        }})).docs as any;\r\n\r\n                        board.records = records;\r\n                        const index = state.boards.findIndex(x => x._id === board._id);\r\n                        const boards = state.boards.slice(0, index).concat(\r\n                            [board],\r\n                            state.boards.slice(index + 1),\r\n                        );\r\n\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneChangeActiveBoard({\r\n                            params: payload,\r\n                            result: Object.assign({}, state, {\r\n                                boards,\r\n                                activeBoardId: board._id,\r\n                                activeBoard: board,\r\n                            }),\r\n                        }));\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedChangeActiveBoard({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to change active board: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => {\r\n                                    getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog());\r\n                                    setTimeout(() => {\r\n                                        getConstructedAppStore().dispatch(push(`/kanban/`));\r\n                                    }, 500);\r\n                                },\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneChangeActiveBoard, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedChangeActiveBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// updateBoardName async actions ////\r\n            .case(kanbanBoardActions.startUpdateBoardName, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const dbBoard = await db.get<KanbanBoardRecord>(payload.boardId);\r\n                        if (! dbBoard) {\r\n                            return state;\r\n                        }\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: dbBoard._id,\r\n                        }})).docs as any;\r\n\r\n                        const change = Object.assign({}, dbBoard, { name: payload.boardName });\r\n                        const saved = await db.put(change, {});\r\n\r\n                        change.records = records;\r\n                        change._id = saved.id;\r\n                        change._rev = saved.rev;\r\n\r\n                        const index = state.boards.findIndex(x => x._id === payload.boardId);\r\n                        const board = Object.assign({}, state.boards[index] || {}, change);\r\n\r\n                        const boards = index >= 0 ?\r\n                            state.boards.slice(0, index).concat(\r\n                                [board],\r\n                                state.boards.slice(index + 1),\r\n                            ) : state.boards;\r\n\r\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateBoardName({\r\n                            params: payload,\r\n                            result: Object.assign({}, state, {\r\n                                boards,\r\n                                activeBoardId: board._id,\r\n                                activeBoard: board,\r\n                            }),\r\n                        }));\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateBoardName({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to change board name: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneUpdateBoardName, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedUpdateBoardName, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// deleteBoard async actions ////\r\n            .case(kanbanBoardActions.startDeleteBoard, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        if (state.boards.length <= 1) {\r\n                            return state;\r\n                        }\r\n                        const dbBoard = await db.get<KanbanBoardDbRecord>(payload.boardId);\r\n                        if (! dbBoard) {\r\n                            return state;\r\n                        }\r\n\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: payload.boardId,\r\n                        }})).docs as any;\r\n\r\n                        for (const record of records) {\r\n                            await db.remove(record, {});\r\n                        }\r\n\r\n                        await db.remove(dbBoard, {});\r\n\r\n                        const index = state.boards.findIndex(x => x._id === payload.boardId);\r\n                        const boards = index >= 0 ?\r\n                            state.boards.slice(0, index).concat(\r\n                                state.boards.slice(index + 1),\r\n                            ) : state.boards;\r\n                        let activeBoard = state.activeBoard;\r\n                        let activeBoardId = state.activeBoardId;\r\n                        if (activeBoardId === payload.boardId) {\r\n                            activeBoard = boards[0];\r\n                            activeBoardId = boards[0]._id;\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteBoard({\r\n                                params: payload,\r\n                                result: Object.assign({}, state, {\r\n                                    boards,\r\n                                    activeBoardId,\r\n                                    activeBoard,\r\n                                }),\r\n                            }));\r\n                            setTimeout(() => {\r\n                                getConstructedAppStore().dispatch(push(`/kanban/${activeBoardId}`));\r\n                                setTimeout(() => {\r\n                                    getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                        open: true,\r\n                                        title: 'Done',\r\n                                        message: 'Board is deleted successfully',\r\n                                        singleButton: true,\r\n                                        onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                                    }));\r\n                                }, 30);\r\n                            }, 30);\r\n                        }, 30);\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteBoard({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to delete board: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneDeleteBoard, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedDeleteBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// addSticky async actions ////\r\n            .case(kanbanBoardActions.startAddSticky, (state, payload) => {\r\n                const now = new Date();\r\n                const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n\r\n                const change: KanbanRecord = {\r\n                    type: 'kanban',\r\n                    dueDate: formatDate(today),\r\n                    description: '# Untitled',\r\n                    barcode: '',\r\n                    memo: '',\r\n                    flags: [],\r\n                    tags: [],\r\n                    boardId: state.activeBoardId,\r\n                    taskStatus: state.activeBoard.taskStatuses[0].value,\r\n                    teamOrStory: state.activeBoard.teamOrStories[0].value,\r\n                } as any;\r\n\r\n                const records = state.activeBoard.records.concat([change]);\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.post(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to add sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneAddSticky, (state, arg) => {\r\n                setTimeout(() => {\r\n                    restartSync()\r\n                    .then(() => {\r\n                        //\r\n                    }).catch(err => {\r\n                        alert(err.message);\r\n                    })\r\n                }, 1500);\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedAddSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// updateSticky async actions ////\r\n            .case(kanbanBoardActions.startUpdateSticky, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload._id);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = Object.assign({}, state.activeBoard.records[index], {\r\n                    dueDate: payload.dueDate,\r\n                    description: payload.description,\r\n                    barcode: payload.barcode,\r\n                    memo: payload.memo,\r\n                    tags: payload.tags,\r\n                    flags: payload.flags,\r\n                    taskStatus: payload.taskStatus,\r\n                    teamOrStory: payload.teamOrStory,\r\n                });\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    [change],\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.put(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to save the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneUpdateSticky, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedUpdateSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// updateStickyLanes async actions ////\r\n            .case(kanbanBoardActions.startUpdateStickyLanes, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = Object.assign({}, state.activeBoard.records[index], {\r\n                    taskStatus: payload.taskStatusValue,\r\n                    teamOrStory: payload.teamOrStoryValue,\r\n                });\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    [change],\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.put(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateStickyLanes({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateStickyLanes({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to save the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneUpdateStickyLanes, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedUpdateStickyLanes, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// archiveSticky async actions ////\r\n            .case(kanbanBoardActions.startArchiveSticky, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = Object.assign({}, state.activeBoard.records[index]);\r\n                change.flags = (change.flags || []).filter(x => x !== 'Archived');\r\n                change.flags.push('Archived');\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    [change],\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.put(change, {})\r\n                .then(v => {\r\n                    change._id = v.id;\r\n                    change._rev = v.rev;\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneArchiveSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedArchiveSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to archive the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneArchiveSticky, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedArchiveSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// deleteSticky async actions ////\r\n            .case(kanbanBoardActions.startDeleteSticky, (state, payload) => {\r\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\r\n                if (index < 0) {\r\n                    return state;\r\n                }\r\n\r\n                const change = state.activeBoard.records[index];\r\n\r\n                const records = state.activeBoard.records.slice(0, index).concat(\r\n                    state.activeBoard.records.slice(index + 1),\r\n                );\r\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\r\n\r\n                db.remove(change, {})\r\n                .then(v => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteSticky({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { activeBoard }),\r\n                    }));\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteSticky({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to delete the sticky: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneDeleteSticky, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedDeleteSticky, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// editBoardAndStickys async actions ////\r\n            .case(kanbanBoardActions.startEditBoardAndStickys, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const index = state.boards.findIndex(x => x._id === payload._id);\r\n                        if (index < 0) {\r\n                            return state;\r\n                        }\r\n\r\n                        const change = Object.assign({}, state.boards[index], {\r\n                            name: payload.name || 'Untitled',\r\n                            taskStatuses: payload.taskStatuses || initialState.activeBoard.taskStatuses,\r\n                            teamOrStories: payload.teamOrStories || initialState.activeBoard.teamOrStories,\r\n                            tags: payload.tags || initialState.activeBoard.tags,\r\n                            displayBarcode: !!payload.displayBarcode,\r\n                            displayMemo: !!payload.displayMemo,\r\n                            displayFlags: !!payload.displayFlags,\r\n                            displayTags: !!payload.displayTags,\r\n                            preferArchive: !!payload.preferArchive,\r\n                            boardStyle: payload.boardStyle || initialState.activeBoard.boardStyle,\r\n                            calendarStyle: payload.calendarStyle || initialState.activeBoard.calendarStyle,\r\n                        });\r\n\r\n                        const v = await db.put(change, {});\r\n                        change._id = v.id;\r\n                        change._rev = v.rev;\r\n\r\n                        const boards = state.boards.slice(0, index).concat(\r\n                            [change],\r\n                            state.boards.slice(index + 1),\r\n                        );\r\n                        let activeBoard = change._id === state.activeBoard._id ? change : state.activeBoard;\r\n\r\n                        // TODO: sticky records\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: change._id,\r\n                        }})).docs as any;\r\n\r\n                        const recordsNew: KanbanRecord[] = [];\r\n                        for (const rec of payload.records || []) {\r\n                            const recDb = records.find(x => x._id === rec._id);\r\n                            let recNew: KanbanRecord = null as any;\r\n                            if (recDb) {\r\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id, _rev: recDb._rev });\r\n                                const resp = await db.put(recNew, {});\r\n                                recNew._id = resp.id;\r\n                                recNew._rev = resp.rev;\r\n                            } else {\r\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id });\r\n                                delete recNew._id;\r\n                                delete recNew._rev;\r\n                                const resp = await db.post(recNew, {});\r\n                                recNew._id = resp.id;\r\n                                recNew._rev = resp.rev;\r\n                            }\r\n                            recordsNew.push(recNew);\r\n                        }\r\n                        for (const recDb of records) {\r\n                            const recNew = recordsNew.find(x => x._id === recDb._id);\r\n                            if (! recNew) {\r\n                                await db.remove(recDb, {});\r\n                            }\r\n                        }\r\n                        change.records = recordsNew;\r\n\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneEditBoardAndStickys({\r\n                            params: payload,\r\n                            result: Object.assign({}, state, {\r\n                                boards,\r\n                                activeBoardId: activeBoard._id,\r\n                                activeBoard: activeBoard,\r\n                            }),\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Done',\r\n                                message: 'Board is saved successfully',\r\n                                singleButton: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedEditBoardAndStickys({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                        setTimeout(() => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to save the board: ' + e.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        }, 30);\r\n                    }\r\n                })();\r\n\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneEditBoardAndStickys, (state, arg) => {\r\n                setTimeout(() => {\r\n                    restartSync()\r\n                    .then(() => {\r\n                        //\r\n                    }).catch(err => {\r\n                        alert(err.message);\r\n                    })\r\n                }, 1500);\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedEditBoardAndStickys, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// refreshActiveBoard async actions ////\r\n            .case(kanbanBoardActions.startRefreshActiveBoard, (state, payload) => {\r\n                (async () => {\r\n                    try {\r\n                        const board = await db.get<KanbanBoardRecord>(state.activeBoard._id, {});\r\n                        if (! board) {\r\n                            return state;\r\n                        }\r\n                        const records: KanbanRecord[] = (await db.find({selector: {\r\n                            type: 'kanban',\r\n                            boardId: board._id,\r\n                        }})).docs as any;\r\n\r\n                        board.records = records;\r\n                        const index = state.boards.findIndex(x => x._id === board._id);\r\n                        const boards = state.boards.slice(0, index).concat(\r\n                            [board],\r\n                            state.boards.slice(index + 1),\r\n                        );\r\n\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneRefreshActiveBoard({\r\n                            params: payload,\r\n                            result: Object.assign({}, state, {\r\n                                boards,\r\n                                activeBoardId: board._id,\r\n                                activeBoard: board,\r\n                            }),\r\n                        }));\r\n                    } catch (e) {\r\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedRefreshActiveBoard({\r\n                            params: payload,\r\n                            error: e,\r\n                        }));\r\n                    }\r\n                })();\r\n                return state;\r\n            })\r\n            .case(kanbanBoardActions.doneRefreshActiveBoard, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(kanbanBoardActions.failedRefreshActiveBoard, (state, arg) => {\r\n                return state;\r\n            })\r\n            ;\r\n    }\r\n    return kanbanBoardReducer;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport actionCreatorFactory,\r\n       { Action }             from 'typescript-fsa';\r\nimport { KanbanRecord,\r\n         ConfirmDialogProps } from '../types';\r\n\r\n\r\n\r\nexport interface CalendarActions {\r\n    showToday: () =>\r\n        Action<void>;\r\n    showNextMonth: () =>\r\n        Action<void>;\r\n    showPreviousMonth: () =>\r\n        Action<void>;\r\n    showNextYear: () =>\r\n        Action<void>;\r\n    showPreviousYear: () =>\r\n        Action<void>;\r\n\r\n    // from KanbanBoardActions\r\n    changeActiveBoard: (id: string) =>\r\n        Action<{boardId: string}>;\r\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n        Action<{boardId: string, boardName: string}>;\r\n    updateSticky: (v: KanbanRecord) =>\r\n        Action<KanbanRecord>;\r\n    archiveSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n    deleteSticky: (kanbanId: string) =>\r\n        Action<{kanbanId: string}>;\r\n\r\n    // from AppEventsActions\r\n    showAlertDialog: (v: ConfirmDialogProps) =>\r\n        Action<ConfirmDialogProps>;\r\n    closeAlertDialog: () =>\r\n        Action<void>;\r\n}\r\n\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\nexport const calendarActions = {\r\n    showToday: actionCreator<void>('ACTIONS_SHOW_TODAY'),\r\n    showNextMonth: actionCreator<void>('ACTIONS_SHOW_NEXT_MONTH'),\r\n    showPreviousMonth: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_MONTH'),\r\n    showNextYear: actionCreator<void>('ACTIONS_SHOW_NEXT_YEAR'),\r\n    showPreviousYear: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_YEAR'),\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { reducerWithInitialState,\r\n         ReducerBuilder }         from 'typescript-fsa-reducers';\r\nimport { CalendarState }          from '../types';\r\nimport { calendarActions }        from '../actions/CalendarActions';\r\n\r\n\r\n\r\nlet calendarReducer: ReducerBuilder<CalendarState, CalendarState> = null as any;\r\n\r\nexport async function getCalendarReducer() {\r\n    if (!calendarReducer) {\r\n        const initialState: CalendarState = {\r\n            activeMonth: new Date(), // TODO: not impl\r\n        };\r\n        calendarReducer = reducerWithInitialState(initialState)\r\n            .case(calendarActions.showToday, (state) => {\r\n                const now = new Date();\r\n                const m = new Date(now.getFullYear(), now.getMonth(), 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showNextMonth, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear(), now.getMonth() + 1, 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showPreviousMonth, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear(), now.getMonth() - 1, 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showNextYear, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear() + 1, now.getMonth(), 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            .case(calendarActions.showPreviousYear, (state) => {\r\n                const now = state.activeMonth;\r\n                const m = new Date(now.getFullYear() - 1, now.getMonth(), 1);\r\n                return Object.assign({}, state, { activeMonth: m });\r\n            })\r\n            ;\r\n    }\r\n    return calendarReducer;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { reducerWithInitialState,\r\n         ReducerBuilder }         from 'typescript-fsa-reducers';\r\nimport { AppEventsState }         from '../types';\r\nimport { appEventsActions }       from '../actions/AppEventsActions';\r\nimport { getLocalConfigDb,\r\n         getLocalDb,\r\n         setRemoteDb }            from '../lib/db';\r\nimport { getConstructedAppStore } from '../store';\r\n\r\n\r\n\r\nlet appEventsReducer: ReducerBuilder<AppEventsState, AppEventsState> = null as any;\r\n\r\nexport async function getAppEventsReducer() {\r\n    if (!appEventsReducer) {\r\n        const confDb = getLocalConfigDb();\r\n        const db = getLocalDb();\r\n\r\n        // TODO: try-catch\r\n        let resp: PouchDB.Core.AllDocsResponse<{}> = null as any;\r\n\r\n        resp = await confDb.allDocs({\r\n            include_docs: true,\r\n        });\r\n\r\n        const defaultAppConfig = {\r\n            remote: {\r\n                endpointUrl: '',\r\n                user: '',\r\n                password: '',\r\n            },\r\n            display: {\r\n                autoUpdate: false,\r\n                autoUpdateInterval: 2419200,\r\n            },\r\n        };\r\n\r\n        if (resp.rows.length === 0) {\r\n            await confDb.post({\r\n                type: 'appConfig',\r\n                ...defaultAppConfig,\r\n            }, {});\r\n\r\n            resp = await confDb.allDocs({\r\n                include_docs: true,\r\n            });\r\n        }\r\n\r\n        const initialState: AppEventsState = {\r\n            alertDialog: {\r\n                open: false,\r\n                title: '',\r\n                message: '',\r\n                onClose: () => void 0,\r\n            },\r\n            appConfig: {\r\n                ...defaultAppConfig,\r\n                ...resp.rows[0].doc,\r\n            } as any,\r\n        };\r\n\r\n        if (initialState.appConfig.remote && initialState.appConfig.remote.endpointUrl) {\r\n            setRemoteDb(\r\n                initialState.appConfig.remote.endpointUrl,\r\n                initialState.appConfig.remote.user || '',\r\n                initialState.appConfig.remote.password || '',\r\n            )\r\n            .then(() => {\r\n                //\r\n            })\r\n            .catch(err => {\r\n                alert('Failed to connect to the remote DB: ' + err.message);\r\n            });\r\n        } else {\r\n            setRemoteDb('', '', '')\r\n            .then(() => {\r\n                //\r\n            })\r\n            .catch(err => {\r\n                alert('Failed to connect to the remote DB: ' + err.message);\r\n            });\r\n        }\r\n\r\n        appEventsReducer = reducerWithInitialState(initialState)\r\n            .case(appEventsActions.showAlertDialog, (state, payload) => {\r\n                return Object.assign({}, state, {\r\n                    alertDialog: payload,\r\n                });\r\n            })\r\n            .case(appEventsActions.closeAlertDialog, (state) => {\r\n                return Object.assign({}, state, {\r\n                    alertDialog: initialState,\r\n                });\r\n            })\r\n\r\n            //// updateAppConfig async actions ////\r\n            .case(appEventsActions.startUpdateAppConfig, (state, payload) => {\r\n                const newConf = Object.assign({}, state.appConfig,\r\n                    payload.remote && payload.remote.endpointUrl ?\r\n                        { remote: payload.remote } :\r\n                        { remote: defaultAppConfig.remote },\r\n                    payload.display ?\r\n                        { display: payload.display } :\r\n                        { display: defaultAppConfig.display }\r\n                );\r\n\r\n                confDb.put(newConf, {})\r\n                .then(v => {\r\n                    newConf._id = v.id;\r\n                    newConf._rev = v.rev;\r\n\r\n                    getConstructedAppStore().dispatch(appEventsActions.doneUpdateAppConfig({\r\n                        params: payload,\r\n                        result: Object.assign({}, state, { appConfig: newConf }),\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Done',\r\n                            message: 'Settings is saved successfully',\r\n                            singleButton: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n\r\n                    if (newConf.remote.endpointUrl) {\r\n                        setRemoteDb(\r\n                            newConf.remote.endpointUrl,\r\n                            newConf.remote.user,\r\n                            newConf.remote.password,\r\n                        )\r\n                        .then(() => {\r\n                            //\r\n                        })\r\n                        .catch(err => {\r\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                                open: true,\r\n                                title: 'Error',\r\n                                message: 'Failed to connect to the remote DB: ' + err.message,\r\n                                singleButton: true,\r\n                                colorIsSecondary: true,\r\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                            }));\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    getConstructedAppStore().dispatch(appEventsActions.failedUpdateAppConfig({\r\n                        params: payload,\r\n                        error: err,\r\n                    }));\r\n                    setTimeout(() => {\r\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\r\n                            open: true,\r\n                            title: 'Error',\r\n                            message: 'Failed to update settings: ' + err.message,\r\n                            singleButton: true,\r\n                            colorIsSecondary: true,\r\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\r\n                        }));\r\n                    }, 30);\r\n                });\r\n\r\n                return state;\r\n            })\r\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\r\n                return state;\r\n            })\r\n\r\n            //// resetApplication async actions ////\r\n            .case(appEventsActions.startResetApplication, (state) => {\r\n                (async () => {\r\n                    try {\r\n                        try {\r\n                            await setRemoteDb('', '', '');\r\n                        } catch (e) {\r\n                            alert(e);\r\n                        }\r\n                        try {\r\n                            await db.destroy({});\r\n                        } catch (e) {\r\n                            alert(e);\r\n                        }\r\n                        try {\r\n                            await confDb.destroy({});\r\n                        } catch (e) {\r\n                            alert(e);\r\n                        }\r\n\r\n                        alert('All app data and configurations are removed. Please reload page.');\r\n\r\n                        getConstructedAppStore().dispatch(appEventsActions.doneResetApplication({\r\n                            result: state,\r\n                        }));\r\n                    } catch (e) {\r\n                        alert(e);\r\n                        getConstructedAppStore().dispatch(appEventsActions.failedResetApplication({\r\n                            error: e,\r\n                        }));\r\n                    }\r\n                })();\r\n\r\n                return state;\r\n            })\r\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\r\n                return arg.result;\r\n            })\r\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\r\n                return state;\r\n            })\r\n            ;\r\n    }\r\n    return appEventsReducer;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { createStore,\r\n         combineReducers, \r\n         applyMiddleware,\r\n         compose,\r\n         Store,\r\n         AnyAction }             from 'redux';\r\nimport { createHashHistory }     from 'history';\r\nimport { connectRouter,\r\n         routerMiddleware }      from 'connected-react-router';\r\nimport { AppState }              from './types';\r\nimport { getKanbanBoardReducer } from './states/KanbanBoardState';\r\nimport { getCalendarReducer }    from './states/CalendarState';\r\nimport { getAppEventsReducer }   from './states/AppEventsState';\r\n\r\n\r\n\r\nexport const history = createHashHistory({\r\n    hashType: 'slash',\r\n});\r\n\r\n\r\nlet store: Store<AppState, AnyAction> = null as any;\r\n\r\n\r\nexport function getConstructedAppStore() {\r\n    return store;\r\n}\r\n\r\n\r\nexport default async function getAppStore() {\r\n    if (!store) {\r\n        store = createStore(\r\n            combineReducers<AppState>({\r\n                router: connectRouter(history),\r\n                appEvents: await getAppEventsReducer(),\r\n                kanbanBoard: await getKanbanBoardReducer(),\r\n                calendar: await getCalendarReducer(),\r\n            }),\r\n            compose(\r\n                applyMiddleware(\r\n                    routerMiddleware(history),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n    return store;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                      from 'react';\r\nimport { connect }                from 'react-redux';\r\nimport { RouteComponentProps }    from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }               from '@material-ui/core/styles';\r\nimport Typography                 from '@material-ui/core/Typography';\r\nimport IconButton                 from '@material-ui/core/IconButton';\r\nimport AddBoxIcon                 from '@material-ui/icons/AddBox';\r\nimport clsx                       from 'clsx';\r\nimport marked                     from 'marked';\r\nimport { Qr }                     from 'red-agate-barcode';\r\nimport { LaneDef,\r\n         StatusLaneDef,\r\n         KanbanRecord,\r\n         KanbanBoardState, \r\n         KanbanBoardRecord }      from '../types';\r\nimport gensym                     from '../lib/gensym';\r\nimport { parseISODate }           from '../lib/datetime';\r\nimport { isDark }                 from '../lib/theme';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         KanbanBoardActions }     from '../dispatchers/KanbanBoardDispatcher';\r\nimport KanbanDialog               from '../components/KanbanDialog';\r\nimport TextInputDialog            from '../components/TextInputDialog';\r\nimport { getConstructedAppStore } from '../store';\r\nimport                                 './KanbanBoardView.css';\r\n\r\n\r\n\r\ntype StickysProps = KanbanBoardActions & {\r\n    records: KanbanRecord[],\r\n    taskStatus: StatusLaneDef,\r\n    teamOrStory: LaneDef,\r\n    taskStatuses: StatusLaneDef[],\r\n    teamOrStories: LaneDef[],\r\n    board: KanbanBoardRecord,\r\n};\r\n\r\ntype StickyProps = KanbanBoardActions & {\r\n    record: KanbanRecord,\r\n    taskStatus: StatusLaneDef,\r\n    teamOrStory: LaneDef,\r\n    taskStatuses: StatusLaneDef[],\r\n    teamOrStories: LaneDef[],\r\n    board: KanbanBoardRecord,\r\n};\r\n\r\ntype KanbanBoardViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    smallIcon: {\r\n        width: '20px',\r\n        height: '20px',\r\n    },\r\n}));\r\n\r\n\r\nconst mapNeverStateToProps = () => ({});\r\n\r\nconst agent = window.navigator.userAgent.toLowerCase();\r\nconst firefox = (agent.indexOf('firefox') !== -1);\r\n\r\n\r\nconst Sticky_: React.FC<StickyProps> = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const now = new Date();\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\r\n    const expired = (! props.taskStatus.completed) &&\r\n        (dueDate ? dueDate < today : false);\r\n\r\n    function handleOnDragStart(ev: React.DragEvent) {\r\n        ev.dataTransfer.setData('elId', (ev.target as any).id);\r\n    }\r\n\r\n    function handleEditApply(rec: KanbanRecord) {\r\n        props.updateSticky(rec);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleArchive(id: string) {\r\n        props.archiveSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleDelete(id: string) {\r\n        props.deleteSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleEditCancel() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a\r\n                id={gensym()}\r\n                data-record-id={props.record._id || ''}\r\n                className=\"KanbanBoardView-sticky-link\"\r\n                draggable\r\n                onClick={ev => setOpen(true)}\r\n                onDragStart={handleOnDragStart}>\r\n                <div\r\n                    className={'KanbanBoardView-sticky-note' + (expired ? ' expired' : '')} >\r\n                    {props.board.displayTags && props.record.tags.length ?\r\n                        <ul className=\"KanbanBoardView-sticky-tags\">{\r\n                            props.record.tags.map((x, index) => {\r\n                                const tags = props.board.tags || [];\r\n                                const matched = tags.find(q => q.value === x);\r\n                                return (\r\n                                    <li key={props.record._id + '-tag-' + index}\r\n                                        className={matched ? matched.className : ''}>{x}</li>\r\n                                );\r\n                            })\r\n                        }</ul> :\r\n                        <></>\r\n                    }\r\n                    <div\r\n                        className=\"KanbanBoardView-sticky-description\"\r\n                        dangerouslySetInnerHTML={{__html: marked(props.record.description)}} />\r\n                    {props.board.displayBarcode && props.record.barcode ?\r\n                        <div className=\"KanbanBoardView-sticky-barcode\"\r\n                            dangerouslySetInnerHTML={{__html: new Qr({\r\n                            fill: true,\r\n                            fillColor: isDark ? '#fff' : '#000',\r\n                            cellSize: 2,\r\n                            unit: 'px',\r\n                            data: props.record.barcode,\r\n                        }).toImgTag()}} />\r\n                        : <></>\r\n                    }\r\n                    {props.record.flags.includes('Marked') ?\r\n                        <div className=\"marked\">{'📍'}</div> :\r\n                        <></>\r\n                    }\r\n                    {props.record.dueDate ?\r\n                        <div className=\"due-date\">{(expired ? '🔥' : '⏳' ) + props.record.dueDate}</div> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            </a>\r\n            {open ?\r\n                <KanbanDialog\r\n                    open={true}\r\n                    record={props.record}\r\n                    teamOrStories={props.teamOrStories}\r\n                    taskStatuses={props.taskStatuses}\r\n                    board={props.board}\r\n                    onApply={handleEditApply}\r\n                    onArchive={handleArchive}\r\n                    onDelete={handleDelete}\r\n                    onCancel={handleEditCancel} /> : <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nconst Sticky = connect(mapNeverStateToProps, mapDispatchToProps)(Sticky_);\r\n\r\n\r\nconst Stickys_: React.FC<StickysProps> = (props) => {\r\n    function handleOnDragOver(ev: React.DragEvent) {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    function handleOnDrop(ev: React.DragEvent) {\r\n        try {\r\n            const elId = ev.dataTransfer.getData('elId');\r\n            const el = document.getElementById(elId);\r\n            props.updateStickyLanes({\r\n                kanbanId: (el as any).dataset.recordId,\r\n                taskStatusValue: props.taskStatus.value,\r\n                teamOrStoryValue: props.teamOrStory.value,\r\n            })\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n        ev.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                'KanbanBoardView-sticky-wrap ' + \r\n                (props.teamOrStory.className || '') + ' ' +\r\n                (props.taskStatus.className || '')}\r\n            data-status={props.taskStatus.value}\r\n            data-team-or-story={props.teamOrStory.value}\r\n            onDragOver={handleOnDragOver}\r\n            onDrop={handleOnDrop}\r\n            >\r\n            {props.records.filter(x => !x.flags || !x.flags.includes('Archived')).map(record => (\r\n                <Sticky\r\n                    key={record._id || gensym()}\r\n                    teamOrStory={props.teamOrStory}\r\n                    taskStatus={props.taskStatus}\r\n                    teamOrStories={props.teamOrStories}\r\n                    taskStatuses={props.taskStatuses}\r\n                    board={props.board}\r\n                    record={record}/>\r\n            ))}{\r\n                // NOTE: hack for the height of div becomes 0 in Firefox\r\n                firefox ? <>&nbsp;</> : <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst Stickys = connect(mapNeverStateToProps, mapDispatchToProps)(Stickys_);\r\n\r\n\r\nconst KanbanBoardView: React.FC<KanbanBoardViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [textInputOpen, setTextInputOpen] = React.useState({\r\n        open: false,\r\n        title: '',\r\n        message: '',\r\n        fieldLabel: '',\r\n        value: '',\r\n        validator: (value: string) => value.trim().length <= 0,\r\n        onClose: handleCloseDialogEditBoardName,\r\n    });\r\n\r\n    function handleClickEditBoardName() {\r\n        const currentState = getConstructedAppStore().getState();\r\n        setTextInputOpen(Object.assign({}, textInputOpen, {\r\n            open: true,\r\n            title: 'Edit board name',\r\n            message: '',\r\n            fieldLabel: 'Board name',\r\n            value: currentState.kanbanBoard.activeBoard.name,\r\n        }));\r\n    }\r\n\r\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\r\n        if (apply && value) {\r\n            const currentState = getConstructedAppStore().getState();\r\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\r\n        }\r\n    }\r\n\r\n    if (props.match.params.id) {\r\n        if (props.activeBoard._id !== props.match.params.id) {\r\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\r\n            props.changeActiveBoard(props.match.params.id);\r\n            return (\r\n                <div className=\"KanbanBoardView-content\">\r\n                    {index < 0 ?\r\n                        <>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(10)}}\r\n                                variant=\"h4\" align=\"center\">\r\n                                No boards found.\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\r\n                                variant=\"body1\" align=\"center\"\r\n                                onClick={ev => {props.history.push('/')}} >\r\n                                Click here to show main board.\r\n                            </Typography>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"KanbanBoardView-content\">\r\n            <style dangerouslySetInnerHTML={{__html: props.activeBoard.boardStyle}}></style>\r\n            <Typography\r\n                variant=\"h6\" align=\"center\" style={{cursor: 'pointer'}}\r\n                onClick={handleClickEditBoardName} >{props.activeBoard.name}</Typography>\r\n            <table className=\"KanbanBoardView-board\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"KanbanBoardView-header-cell-add-sticky\">\r\n                            <IconButton style={{margin: 0, padding: 0}}\r\n                                        onClick={ev => props.addSticky()}>\r\n                                <AddBoxIcon className={clsx(classes.smallIcon)} />\r\n                            </IconButton>\r\n                        </th>\r\n                        {props.activeBoard.taskStatuses.map(taskStatus => (\r\n                            <th key={taskStatus.value}\r\n                                className={\r\n                                    'KanbanBoardView-header-cell-task-statuses ' +\r\n                                    (taskStatus.className || '')}>\r\n                                {taskStatus.caption || taskStatus.value}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.activeBoard.teamOrStories.map(teamOrStory => (\r\n                        <tr key={teamOrStory.value}>\r\n                            <th className={\r\n                                'KanbanBoardView-header-cell-team-or-stories ' +\r\n                                (teamOrStory.className || '')}>\r\n                                {teamOrStory.caption || teamOrStory.value}\r\n                            </th>\r\n                            {props.activeBoard.taskStatuses.map(taskStatus => (\r\n                                <td key={taskStatus.value}\r\n                                    className={\r\n                                        (teamOrStory.className || '') + ' ' +\r\n                                        (taskStatus.className || '')}>\r\n                                    <Stickys\r\n                                        teamOrStory={teamOrStory}\r\n                                        taskStatus={taskStatus}\r\n                                        teamOrStories={props.activeBoard.teamOrStories}\r\n                                        taskStatuses={props.activeBoard.taskStatuses}\r\n                                        board={props.activeBoard}\r\n                                        records={props.activeBoard.records.filter(\r\n                                            x => x.teamOrStory === teamOrStory.value &&\r\n                                                 x.taskStatus  === taskStatus.value)} />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            {textInputOpen.open ?\r\n                <TextInputDialog\r\n                    open={true}\r\n                    title={textInputOpen.title}\r\n                    message={textInputOpen.message}\r\n                    fieldLabel={textInputOpen.fieldLabel}\r\n                    value={textInputOpen.value}\r\n                    validator={textInputOpen.validator}\r\n                    onClose={textInputOpen.onClose} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanBoardView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { Action }             from 'typescript-fsa';\r\nimport { Dispatch }           from 'redux';\r\nimport { KanbanRecord,\r\n         ConfirmDialogProps,\r\n         AppState }           from '../types';\r\nimport { AppEventsActions as AppEventsActions_,\r\n         appEventsActions }   from '../actions/AppEventsActions';\r\nimport { CalendarActions as CalendarActions_,\r\n         calendarActions }    from '../actions/CalendarActions';\r\nimport { KanbanBoardActions as KanbanBoardActions_,\r\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\r\n\r\n\r\n\r\nexport type AppEventsActions = AppEventsActions_;\r\nexport type CalendarActions = CalendarActions_;\r\nexport type KanbanBoardActions = KanbanBoardActions_;\r\n\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\r\n    return {\r\n        showToday: () =>\r\n            dispatch(calendarActions.showToday()),\r\n        showNextMonth: () =>\r\n            dispatch(calendarActions.showNextMonth()),\r\n        showPreviousMonth: () =>\r\n            dispatch(calendarActions.showPreviousMonth()),\r\n        showNextYear: () =>\r\n            dispatch(calendarActions.showNextYear()),\r\n        showPreviousYear: () =>\r\n            dispatch(calendarActions.showPreviousYear()),\r\n\r\n        // from AppEventsActions\r\n        showAlertDialog: (v: ConfirmDialogProps) =>\r\n            dispatch(appEventsActions.showAlertDialog(v)),\r\n        closeAlertDialog: () =>\r\n            dispatch(appEventsActions.closeAlertDialog()),\r\n\r\n        // from KanbanBoardActions\r\n        changeActiveBoard: (boardId: string) =>\r\n            dispatch(kanbanBoardActions.startChangeActiveBoard(Object.assign({}, { boardId }, { dispatch }))),\r\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\r\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\r\n        updateSticky: (v: KanbanRecord) =>\r\n            dispatch(kanbanBoardActions.startUpdateSticky(Object.assign({}, v, { dispatch }))),\r\n        archiveSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startArchiveSticky({ kanbanId })),\r\n        deleteSticky: (kanbanId: string) =>\r\n            dispatch(kanbanBoardActions.startDeleteSticky(Object.assign({}, { kanbanId }, { dispatch }))),\r\n    }\r\n}\r\n\r\n\r\nexport function mapStateToProps(appState: AppState) {\r\n    return Object.assign({}, { kanbanBoardState: appState.kanbanBoard }, appState.calendar);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                      from 'react';\r\nimport { connect }                from 'react-redux';\r\nimport { RouteComponentProps }    from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }               from '@material-ui/core/styles';\r\nimport Typography                 from '@material-ui/core/Typography';\r\nimport IconButton                 from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon            from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon           from '@material-ui/icons/ChevronRight';\r\nimport SkipPreviousIcon           from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon               from '@material-ui/icons/SkipNext';\r\nimport CalendarTodayIcon          from '@material-ui/icons/CalendarToday';\r\nimport clsx                       from 'clsx';\r\nimport { KanbanRecord,\r\n         CalendarState,\r\n         KanbanBoardState, \r\n         KanbanBoardRecord }      from '../types';\r\nimport { parseISODate }           from '../lib/datetime';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         CalendarActions }        from '../dispatchers/CalendarViewDispatcher';\r\nimport KanbanDialog               from '../components/KanbanDialog';\r\nimport TextInputDialog            from '../components/TextInputDialog';\r\nimport { getConstructedAppStore } from '../store';\r\nimport                                 './CalendarView.css';\r\n\r\n\r\n\r\ntype CalendarItemProps = CalendarState & CalendarActions &\r\n        { kanbanBoardState: KanbanBoardState } & {\r\n    board: KanbanBoardRecord,\r\n    record: KanbanRecord,\r\n};\r\n\r\n\r\ntype CalendarViewProps = CalendarState & CalendarActions &\r\n        { kanbanBoardState: KanbanBoardState } & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'var(--main-text-color)',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n    },\r\n    calendar: {\r\n        width: 'calc(100% - 30px)',\r\n        height: '100%',\r\n        margin: '15px',\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        tableLayout: 'fixed',\r\n    },\r\n    calendarTitle: {\r\n        position: 'relative',\r\n        height: '30px',\r\n    },\r\n    calendarTitleToolBar: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        margin: '3px 3px 6px 4px',\r\n        overflow: 'hidden',\r\n        width: 'calc(100% - 30px)',\r\n        height: '39px',\r\n    },\r\n    calendarTopLeftHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n    },\r\n    calendarDaysHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        width: '14%',\r\n    },\r\n    calendarSundayHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        width: '14%',\r\n        backgroundColor: 'var(--weak-header-bg-color)',\r\n        color: 'var(--calendar-sunday-color)',\r\n    },\r\n    calendarSaturdayHeader: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        width: '14%',\r\n        backgroundColor: 'var(--weak-header-bg-color)',\r\n        color: 'var(--calendar-saturday-color)',\r\n    },\r\n    calendarCell: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        verticalAlign: 'top',\r\n    },\r\n    calendarWeekendCell: {\r\n        border: 'solid 1px var(--main-text-color)',\r\n        borderCollapse: 'collapse',\r\n        padding: '5px',\r\n        verticalAlign: 'top',\r\n        backgroundColor: 'var(--weak-data-bg-color)',\r\n    },\r\n    chip: {\r\n        fontSize: 'smaller',\r\n        borderRadius: '5px',\r\n        backgroundColor:'var(--sticky-blue-color)',\r\n        color: 'var(--main-text-color)',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        marginBottom: '2px',\r\n        paddingLeft: '3px',\r\n        paddingRight: '3px',\r\n    },\r\n    chipWrap: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst CalendarItem_: React.FC<CalendarItemProps> = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const teamOrStory = props.board.teamOrStories.find(x => x.value === props.record.teamOrStory);\r\n    const taskStatus = props.board.taskStatuses.find(x => x.value === props.record.taskStatus);\r\n\r\n    const now = new Date();\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\r\n    const expired = (! (taskStatus && taskStatus.completed)) &&\r\n        (dueDate ? dueDate < today : false);\r\n    const archived = props.record.flags && props.record.flags.includes('Archived');\r\n\r\n    function handleEditApply(rec: KanbanRecord) {\r\n        props.updateSticky(rec);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleArchive(id: string) {\r\n        props.archiveSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleDelete(id: string) {\r\n        props.deleteSticky(id);\r\n        setOpen(false);\r\n    }\r\n\r\n    function handleEditCancel() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n            <a\r\n                className={clsx(classes.chipWrap)}\r\n                onClick={ev => setOpen(true)}>\r\n                <div className={clsx(classes.chip) + ' CalendarView-item-chip' +\r\n                    (teamOrStory ? ' ' + teamOrStory.className : '') +\r\n                    (taskStatus ? ' ' + taskStatus.className : '') +\r\n                    (expired ? ' expired' : '') +\r\n                    (archived ? ' archived' : '')}>\r\n                    {props.record.description.trim().replace(/\\n/g, ' ').replace(/#+/g, '').trim()}\r\n                </div>\r\n            </a>\r\n            {open ?\r\n                <KanbanDialog\r\n                    open={true}\r\n                    record={props.record}\r\n                    teamOrStories={props.kanbanBoardState.activeBoard.teamOrStories}\r\n                    taskStatuses={props.kanbanBoardState.activeBoard.taskStatuses}\r\n                    board={props.board}\r\n                    onApply={handleEditApply}\r\n                    onArchive={handleArchive}\r\n                    onDelete={handleDelete}\r\n                    onCancel={handleEditCancel} /> : <></>\r\n            }\r\n        </>\r\n    );\r\n}\r\nconst CalendarItem = connect(mapStateToProps, mapDispatchToProps)(CalendarItem_);\r\n\r\nconst CalendarView: React.FC<CalendarViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [textInputOpen, setTextInputOpen] = React.useState({\r\n        open: false,\r\n        title: '',\r\n        message: '',\r\n        fieldLabel: '',\r\n        value: '',\r\n        validator: (value: string) => value.trim().length <= 0,\r\n        onClose: handleCloseDialogEditBoardName,\r\n    });\r\n\r\n    function handleClickEditBoardName() {\r\n        const currentState = getConstructedAppStore().getState();\r\n        setTextInputOpen(Object.assign({}, textInputOpen, {\r\n            open: true,\r\n            title: 'Edit board name',\r\n            message: '',\r\n            fieldLabel: 'Board name',\r\n            value: currentState.kanbanBoard.activeBoard.name,\r\n        }));\r\n    }\r\n\r\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\r\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\r\n        if (apply && value) {\r\n            const currentState = getConstructedAppStore().getState();\r\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\r\n        }\r\n    }\r\n\r\n    if (props.match.params.id) {\r\n        if (props.kanbanBoardState.activeBoard._id !== props.match.params.id) {\r\n            const index = props.kanbanBoardState.boards.findIndex(x => x._id === props.match.params.id);\r\n            props.changeActiveBoard(props.match.params.id);\r\n            return (\r\n                <div className={classes.root}>\r\n                    {index < 0 ?\r\n                        <>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(10)}}\r\n                                variant=\"h4\" align=\"center\">\r\n                                No boards found.\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\r\n                                variant=\"body1\" align=\"center\"\r\n                                onClick={ev => {props.history.push('/')}} >\r\n                                Click here to show main board.\r\n                            </Typography>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const month = props.activeMonth;\r\n\r\n    const firstDateOfMonth = new Date(month.getFullYear(), month.getMonth(), 1);\r\n    const lastDateOfMonth = new Date(month.getFullYear(), month.getMonth() + 1, 0);\r\n    const firstDateOfCal = new Date(\r\n        firstDateOfMonth.getFullYear(), firstDateOfMonth.getMonth(),\r\n        1 - firstDateOfMonth.getDay());\r\n    const lastDateOfCal = new Date(\r\n        lastDateOfMonth.getFullYear(), lastDateOfMonth.getMonth(),\r\n        lastDateOfMonth.getDate() + (6 - lastDateOfMonth.getDay()));\r\n    const nextCalDate = new Date(\r\n        lastDateOfCal.getFullYear(), lastDateOfCal.getMonth(),\r\n        lastDateOfCal.getDate() + 1);\r\n\r\n    const dates: Array<Date[]> = [];\r\n    let week: Date[] = [];\r\n    dates.push(week);\r\n    for (let wd = firstDateOfCal;\r\n            wd.getTime() <= lastDateOfCal.getTime();\r\n            wd = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1)) {\r\n        if (7 <= week.length) {\r\n            week = [];\r\n            dates.push(week);\r\n        }\r\n        week.push(wd);\r\n    }\r\n\r\n    const stickys = props.kanbanBoardState.activeBoard.records.filter(x => {\r\n        if (!x.dueDate) {\r\n            return false;\r\n        }\r\n        const d = new Date(x.dueDate);\r\n        if (firstDateOfCal <= d && d < nextCalDate) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <style dangerouslySetInnerHTML={{__html: props.kanbanBoardState.activeBoard.calendarStyle}}></style>\r\n            <div className={clsx(classes.calendarTitle)}>\r\n                <div className={clsx(classes.calendarTitleToolBar)}>\r\n                    <IconButton onClick={ev => props.showToday()}>\r\n                        <CalendarTodayIcon /><Typography variant=\"caption\" style={{marginLeft: '1em'}}>Today</Typography>\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showPreviousYear()}>\r\n                        <SkipPreviousIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showPreviousMonth()}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showNextMonth()}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={ev => props.showNextYear()}>\r\n                        <SkipNextIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '2em'}}>{\r\n                        props.activeMonth.toLocaleDateString(\r\n                            (navigator as any).userLanguage || navigator.language || (navigator as any).browserLanguage || 'en',\r\n                            {year: 'numeric', month: 'long'})\r\n                    }</Typography>\r\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '3em', cursor: 'pointer'}}\r\n                        onClick={handleClickEditBoardName} >{\r\n                        props.kanbanBoardState.activeBoard.name}</Typography>\r\n                </div>\r\n            </div>\r\n            <table className={clsx(classes.calendar)}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className={clsx(classes.calendarTopLeftHeader)}></th>\r\n                        <th className={clsx(classes.calendarSundayHeader)}>Sun</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Mon</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Tue</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Wed</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Thu</th>\r\n                        <th className={clsx(classes.calendarDaysHeader)}>Fri</th>\r\n                        <th className={clsx(classes.calendarSaturdayHeader)}>Sat</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dates.map(week =>\r\n                        <tr key={week[0].getTime()}>\r\n                            <td className={clsx(classes.calendarCell)}></td>\r\n                            {week.map((wd: Date, index: number) =>\r\n                                <td key={wd.toISOString()}\r\n                                    className={clsx(index === 0 || index === 6 ? classes.calendarWeekendCell :classes.calendarCell)}>\r\n                                    <div style={{position: 'relative'}}>\r\n                                        <div style={{position: 'absolute', top: '0', right: '0'}}>\r\n                                            {wd.getDate()}\r\n                                        </div>\r\n                                        <div style={{paddingTop: '20px', minHeight: '80px'}}>\r\n                                            {stickys.filter(x => {\r\n                                                const d = new Date(x.dueDate);\r\n                                                const next = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1);\r\n                                                if (wd <= d && d < next) {\r\n                                                    return true;\r\n                                                } else {\r\n                                                    return false;\r\n                                                }\r\n                                            }).map(x =>\r\n                                                <CalendarItem\r\n                                                    board={props.kanbanBoardState.activeBoard}\r\n                                                    key={x._id}\r\n                                                    record={x} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            {textInputOpen.open ?\r\n                <TextInputDialog\r\n                    open={true}\r\n                    title={textInputOpen.title}\r\n                    message={textInputOpen.message}\r\n                    fieldLabel={textInputOpen.fieldLabel}\r\n                    value={textInputOpen.value}\r\n                    validator={textInputOpen.validator}\r\n                    onClose={textInputOpen.onClose} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport { KanbanBoardRecord,\r\n         KanbanRecord,\r\n         AppConfig }       from '../types';\r\n\r\n\r\n\r\nexport function pickEditableStickyProps(sticky: KanbanRecord) {\r\n    return (Object.assign(sticky._id ? { _id: sticky._id } : {}, {\r\n        dueDate: sticky.dueDate || '',\r\n        taskStatus: sticky.taskStatus || '',\r\n        teamOrStory: sticky.teamOrStory || '',\r\n        flags: sticky.flags || [],\r\n        tags: sticky.tags || [],\r\n        description: sticky.description || '',\r\n        barcode: sticky.barcode || '',\r\n        memo: sticky.memo || '',\r\n    }));\r\n}\r\n\r\n\r\nexport function pickEditableBoardProps(board: KanbanBoardRecord) {\r\n    return ({\r\n        name: board.name || '',\r\n        taskStatuses: board.taskStatuses || [],\r\n        teamOrStories: board.teamOrStories || [],\r\n        tags: board.tags || [],\r\n        displayBarcode: !!board.displayBarcode,\r\n        displayMemo: !!board.displayMemo,\r\n        displayFlags: !!board.displayFlags,\r\n        displayTags: !!board.displayTags,\r\n        preferArchive: !!board.preferArchive,\r\n        boardStyle: board.boardStyle || '',\r\n        calendarStyle: board.calendarStyle || '',\r\n        records: (board.records && board.records.map(x => pickEditableStickyProps(x))) || [],\r\n    });\r\n}\r\n\r\n\r\nexport function validateStickyProps(sticky: KanbanRecord) {\r\n    if (typeof sticky.dueDate !== 'string') {\r\n        throw new Error('string property \"dueDate\" is required.');\r\n    }\r\n    if (typeof sticky.taskStatus !== 'string') {\r\n        throw new Error('string property \"taskStatus\" is required.');\r\n    }\r\n    if (typeof sticky.teamOrStory !== 'string') {\r\n        throw new Error('string property \"teamOrStory\" is required.');\r\n    }\r\n    if (sticky.flags && Array.isArray(sticky.flags)) {\r\n        sticky.flags.forEach(x => {\r\n            if (typeof x !== 'string') {\r\n                throw new Error('property \"flags[x]\" should be string.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"flags\" is required.');\r\n    }\r\n    if (sticky.tags && Array.isArray(sticky.tags)) {\r\n        sticky.tags.forEach(x => {\r\n            if (typeof x !== 'string') {\r\n                throw new Error('property \"tags[x]\" should be string.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"tags\" is required.');\r\n    }\r\n    if (typeof sticky.description !== 'string') {\r\n        throw new Error('string property \"description\" is required.');\r\n    }\r\n    if (typeof sticky.barcode !== 'string') {\r\n        throw new Error('string property \"barcode\" is required.');\r\n    }\r\n    if (typeof sticky.memo !== 'string') {\r\n        throw new Error('string property \"memo\" is required.');\r\n    }\r\n    return sticky;\r\n}\r\n\r\n\r\nexport function validateBoardProps(board: KanbanBoardRecord) {\r\n    if (typeof board.name !== 'string') {\r\n        throw new Error('string property \"name\" is required.');\r\n    }\r\n    if (board.taskStatuses && Array.isArray(board.taskStatuses)) {\r\n        board.taskStatuses.forEach(x => {\r\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\r\n                throw new Error('property \"taskStatuses[x].caption\" should be string.');\r\n            }\r\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\r\n                throw new Error('property \"taskStatuses[x].className\" should be string.');\r\n            }\r\n            if (x.completed !== null && x.completed !== void 0 && typeof x.completed !== 'boolean') {\r\n                throw new Error('property \"taskStatuses[x].completed\" should be boolean.');\r\n            }\r\n            if (typeof x.value !== 'string') {\r\n                throw new Error('string property \"taskStatuses[x].value\" is required.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"taskStatuses\" is required.');\r\n    }\r\n    if (board.teamOrStories && Array.isArray(board.teamOrStories)) {\r\n        board.teamOrStories.forEach(x => {\r\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\r\n                throw new Error('property \"teamOrStories[x].caption\" should be string.');\r\n            }\r\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\r\n                throw new Error('property \"teamOrStories[x].className\" should be string.');\r\n            }\r\n            if (typeof x.value !== 'string') {\r\n                throw new Error('string property \"teamOrStories[x].value\" is required.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"teamOrStories\" is required.');\r\n    }\r\n    if (board.tags && Array.isArray(board.tags)) {\r\n        board.tags.forEach(x => {\r\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\r\n                throw new Error('property \"tags[x].className\" should be string.');\r\n            }\r\n            if (typeof x.value !== 'string') {\r\n                throw new Error('string property \"tags[x].value\" is required.');\r\n            }\r\n        });\r\n    } else {\r\n        throw new Error('array property \"tags\" is required.');\r\n    }\r\n    if (typeof board.displayBarcode !== 'boolean') {\r\n        throw new Error('boolean property \"displayBarcode\" is required.');\r\n    }\r\n    if (typeof board.displayMemo !== 'boolean') {\r\n        throw new Error('boolean property \"displayMemo\" is required.');\r\n    }\r\n    if (typeof board.displayFlags !== 'boolean') {\r\n        throw new Error('boolean property \"displayFlags\" is required.');\r\n    }\r\n    if (typeof board.displayTags !== 'boolean') {\r\n        throw new Error('boolean property \"displayTags\" is required.');\r\n    }\r\n    if (typeof board.preferArchive !== 'boolean') {\r\n        throw new Error('boolean property \"preferArchive\" is required.');\r\n    }\r\n    if (typeof board.boardStyle !== 'string') {\r\n        throw new Error('string property \"boardStyle\" is required.');\r\n    }\r\n    if (typeof board.calendarStyle !== 'string') {\r\n        throw new Error('string property \"calendarStyle\" is required.');\r\n    }\r\n\r\n    if (board.records && Array.isArray(board.records)) {\r\n        board.records.forEach(x => validateStickyProps(x));\r\n    } else {\r\n        throw new Error('array property \"records\" is required.');\r\n    }\r\n\r\n    return board;\r\n}\r\n\r\n\r\nexport function pickEditableConfigProps(conf: AppConfig) {\r\n    return ({\r\n        remote: {\r\n            endpointUrl: conf.remote && conf.remote.endpointUrl ?\r\n                conf.remote.endpointUrl : '',\r\n            user: conf.remote && conf.remote.user ?\r\n                conf.remote.user : '',\r\n            password: conf.remote && conf.remote.password ?\r\n                conf.remote.password : '',\r\n        },\r\n        display: {\r\n            autoUpdate: !!(conf.display && conf.display.autoUpdate),\r\n            autoUpdateInterval: conf.display && conf.display.autoUpdateInterval ?\r\n                conf.display.autoUpdateInterval : 2419200,\r\n        },\r\n    });\r\n}\r\n\r\n\r\nexport function validateConfigProps(conf: AppConfig) {\r\n    if (! conf.remote) {\r\n        throw new Error('object property \"remote\" is required.');\r\n    }\r\n    if (typeof conf.remote.endpointUrl !== 'string') {\r\n        throw new Error('string property \"remote.endpointUrl\" is required.');\r\n    }\r\n    if (typeof conf.remote.user !== 'string') {\r\n        throw new Error('string property \"remote.user\" is required.');\r\n    }\r\n    if (typeof conf.remote.password !== 'string') {\r\n        throw new Error('string property \"remote.password\" is required.');\r\n    }\r\n\r\n    if (! conf.display) {\r\n        throw new Error('object property \"display\" is required.');\r\n    }\r\n    if (typeof conf.display.autoUpdate !== 'boolean') {\r\n        throw new Error('boolean property \"display.autoUpdate\" is required.');\r\n    }\r\n    if (typeof conf.display.autoUpdateInterval !== 'number') {\r\n        throw new Error('number property \"display.autoUpdateInterval\" is required.');\r\n    }\r\n    if (conf.display.autoUpdateInterval < 10) {\r\n        throw new Error('number property \"display.autoUpdateInterval\" should 10 <= autoUpdateInterval (unit: sec).');\r\n    }\r\n    return conf;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                          from 'react';\r\nimport { connect }                    from 'react-redux';\r\nimport { RouteComponentProps }        from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }                   from '@material-ui/core/styles';\r\nimport Button                         from '@material-ui/core/Button';\r\nimport CheckIcon                      from '@material-ui/icons/Check';\r\nimport DeleteIcon                     from '@material-ui/icons/Delete';\r\nimport Typography                     from '@material-ui/core/Typography';\r\nimport Fab                            from '@material-ui/core/Fab';\r\nimport clsx                           from 'clsx';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport                                     'codemirror/lib/codemirror.css';\r\nimport                                     'codemirror/theme/material.css';\r\nimport                                     'codemirror/mode/yaml/yaml';\r\nimport jsYaml                         from 'js-yaml';\r\nimport { KanbanBoardState }           from '../types';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         KanbanBoardActions }         from '../dispatchers/KanbanBoardDispatcher';\r\nimport ConfirmDialog                  from '../components/ConfirmDialog';\r\nimport { pickEditableBoardProps,\r\n         validateBoardProps }         from '../lib/validation';\r\nimport                                     './EditorView.css';\r\n\r\n\r\n\r\ntype EditorViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'var(--main-text-color)',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    header: {\r\n        height: '45px',\r\n        position: 'relative',\r\n    },\r\n    codemirror: {\r\n        display: 'grid',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100vh - 65px)',\r\n    },\r\n    fabSave: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        left: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n    fabDelete: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n}));\r\n\r\n\r\nconst EditorView: React.FC<EditorViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [confirmDeletingOpen, setConfirmDeletingOpen] = React.useState(false);\r\n    const [editorValue, setEditorValue] = React.useState('');\r\n    const [editCount, setEditCount] = React.useState(0);\r\n    // NOTE: codeMirror.current.props.value is NOT updated after onChange event.\r\n    // const codeMirror = useRef((null as any) as CodeMirror);\r\n\r\n    function handleSaveClick() {\r\n        try {\r\n            const data = jsYaml.safeLoad(editorValue);\r\n            if (data) {\r\n                validateBoardProps(data);\r\n                props.editBoardAndStickys(Object.assign({}, data, { _id: props.activeBoard._id }));\r\n            } else {\r\n                //\r\n            }\r\n        } catch (e) {\r\n            props.showAlertDialog({\r\n                open: true,\r\n                title: 'Error',\r\n                message: e.message || String(e),\r\n                singleButton: true,\r\n                colorIsSecondary: true,\r\n                onClose: () => props.closeAlertDialog(),\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleConfirmDeleting(apply: boolean) {\r\n        setConfirmDeletingOpen(false);\r\n        if (apply) {\r\n            props.deleteBoard(props.activeBoard._id);\r\n        }\r\n    }\r\n\r\n    function handleEditorChange(editor: any, data: any, value: string) {\r\n        setEditorValue(value);\r\n        setEditCount(editCount + 1);\r\n    }\r\n\r\n    if (props.match.params.id) {\r\n        if (props.activeBoard._id !== props.match.params.id) {\r\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\r\n            props.changeActiveBoard(props.match.params.id);\r\n            return (\r\n                <div className={classes.root}>\r\n                    {index < 0 ?\r\n                        <>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(10)}}\r\n                                variant=\"h4\" align=\"center\">\r\n                                No boards found.\r\n                            </Typography>\r\n                            <Typography\r\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\r\n                                variant=\"body1\" align=\"center\"\r\n                                onClick={ev => {props.history.push('/')}} >\r\n                                Click here to show main board.\r\n                            </Typography>\r\n                        </> :\r\n                        <></>\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <div className={clsx(classes.header)}>\r\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{props.activeBoard.name}</Typography>\r\n                <Button\r\n                    className={clsx(classes.fabSave)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={editCount === 0}\r\n                    onClick={handleSaveClick} >\r\n                    <CheckIcon />\r\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\r\n                        Save\r\n                    </Typography>\r\n                </Button>\r\n                {props.boards.length > 1 ?\r\n                    <Button\r\n                        className={clsx(classes.fabDelete)}\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onClick={ev => setConfirmDeletingOpen(true)} >\r\n                        <DeleteIcon color=\"secondary\" />\r\n                        <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\r\n                            Delete\r\n                        </Typography>\r\n                    </Button> :\r\n                    <></>\r\n                }\r\n            </div>\r\n            <div>\r\n                <CodeMirror\r\n                    className={clsx(classes.codemirror)}\r\n                    value={`# Board settings\\n\\n${\r\n                        jsYaml.safeDump(pickEditableBoardProps(props.activeBoard), {lineWidth: 1000})\r\n                    }`}\r\n                    options={{\r\n                        mode: 'yaml',\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        lineWrapping: true,\r\n                    }}\r\n                    onChange={handleEditorChange}\r\n                />\r\n            </div>\r\n            {confirmDeletingOpen ?\r\n                <ConfirmDialog\r\n                    open={confirmDeletingOpen}\r\n                    title=\"Delete board\"\r\n                    message=\"Are you sure want to delete the board?\"\r\n                    colorIsSecondary={true}\r\n                    applyButtonCaption=\"Delete\"\r\n                    confirmingTextLabel={'Type \"Delete board\" to delete this board.'}\r\n                    confirmingTextValue=\"Delete board\"\r\n                    fab={\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    }\r\n                    onClose={handleConfirmDeleting} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React                          from 'react';\r\nimport { connect }                    from 'react-redux';\r\nimport { RouteComponentProps }        from 'react-router-dom';\r\nimport { makeStyles,\r\n         useTheme }                   from '@material-ui/core/styles';\r\nimport Button                         from '@material-ui/core/Button';\r\nimport CheckIcon                      from '@material-ui/icons/Check';\r\nimport DeleteIcon                     from '@material-ui/icons/Delete';\r\nimport Typography                     from '@material-ui/core/Typography';\r\nimport Fab                            from '@material-ui/core/Fab';\r\nimport clsx                           from 'clsx';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport                                     'codemirror/lib/codemirror.css';\r\nimport                                     'codemirror/theme/material.css';\r\nimport                                     'codemirror/mode/yaml/yaml';\r\nimport jsYaml                         from 'js-yaml';\r\nimport { AppEventsState }             from '../types';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         AppEventsActions }           from '../dispatchers/AppEventsDispatcher';\r\nimport ConfirmDialog                  from '../components/ConfirmDialog';\r\nimport { pickEditableConfigProps,\r\n         validateConfigProps }        from '../lib/validation';\r\nimport                                     './SettingsView.css';\r\n\r\n\r\n\r\ntype SettingsViewProps = AppEventsState & AppEventsActions & RouteComponentProps<{id: string}> & {\r\n};\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        color: 'var(--main-text-color)',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    header: {\r\n        height: '45px',\r\n        position: 'relative',\r\n    },\r\n    codemirror: {\r\n        display: 'grid',\r\n        width: 'calc(100% - 20px)',\r\n        height: 'calc(100vh - 65px)',\r\n    },\r\n    fabSave: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        left: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n    fabDelete: {\r\n        position: 'absolute',\r\n        margin: theme.spacing(1),\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1) / 10,\r\n    },\r\n}));\r\n\r\n\r\nconst SettingsView: React.FC<SettingsViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [confirmResetAppOpen, setConfirmResetAppOpen] = React.useState(false);\r\n    const [editorValue, setEditorValue] = React.useState('');\r\n    const [editCount, setEditCount] = React.useState(0);\r\n\r\n    function handleSaveClick() {\r\n        try {\r\n            const data = jsYaml.safeLoad(editorValue);\r\n            if (data) {\r\n                validateConfigProps(data);\r\n                props.updateAppConfig(Object.assign({}, data));\r\n            } else {\r\n                throw new Error('object property \"remote\" is required.');\r\n            }\r\n        } catch (e) {\r\n            props.showAlertDialog({\r\n                open: true,\r\n                title: 'Error',\r\n                message: e.message || String(e),\r\n                singleButton: true,\r\n                colorIsSecondary: true,\r\n                onClose: () => props.closeAlertDialog(),\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleConfirmResetApplication(apply: boolean) {\r\n        setConfirmResetAppOpen(false);\r\n        if (apply) {\r\n            props.resetApplication();\r\n        }\r\n    }\r\n\r\n    function handleEditorChange(editor: any, data: any, value: string) {\r\n        setEditorValue(value);\r\n        setEditCount(editCount + 1);\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root)}>\r\n            <div className={clsx(classes.header)}>\r\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{'Application Settings'}</Typography>\r\n                <Button\r\n                    className={clsx(classes.fabSave)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={editCount === 0}\r\n                    onClick={handleSaveClick} >\r\n                    <CheckIcon />\r\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\r\n                        Save\r\n                    </Typography>\r\n                </Button>\r\n                <Button\r\n                    className={clsx(classes.fabDelete)}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={ev => setConfirmResetAppOpen(true)} >\r\n                    <DeleteIcon color=\"secondary\" />\r\n                    <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\r\n                        Reset application\r\n                    </Typography>\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                <CodeMirror\r\n                    className={clsx(classes.codemirror)}\r\n                    value={`# App settings\\n\\n${\r\n                        jsYaml.safeDump(pickEditableConfigProps(props.appConfig), {lineWidth: 1000})\r\n                    }`}\r\n                    options={{\r\n                        mode: 'yaml',\r\n                        theme: 'material',\r\n                        lineNumbers: true,\r\n                        lineWrapping: true,\r\n                    }}\r\n                    onChange={handleEditorChange}\r\n                />\r\n            </div>\r\n            {confirmResetAppOpen ?\r\n                <ConfirmDialog\r\n                    open={confirmResetAppOpen}\r\n                    title=\"Reset application\"\r\n                    message={'Are you sure want to reset application?\\nAll local data and configurations will be REMOVED!'}\r\n                    colorIsSecondary={true}\r\n                    applyButtonCaption=\"Reset\"\r\n                    confirmingTextLabel={'Type \"Reset application\" to remove all data.'}\r\n                    confirmingTextValue=\"Reset application\"\r\n                    fab={\r\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"reset application\" color=\"secondary\" style={{margin: 'auto'}}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    }\r\n                    onClose={handleConfirmResetApplication} /> :\r\n                <></>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsView);\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\nimport React,\r\n       { useEffect,\r\n         useRef }           from 'react';\r\nimport { connect }          from 'react-redux';\r\nimport { Route,\r\n         Switch }           from \"react-router-dom\";\r\nimport CssBaseline          from '@material-ui/core/CssBaseline';\r\nimport { makeStyles }       from '@material-ui/core/styles';\r\nimport { ThemeProvider }    from '@material-ui/styles';\r\nimport clsx                 from 'clsx';\r\nimport { AppEventsState }   from './types';\r\nimport { restartSync }      from './lib/db';\r\nimport { theme }            from './lib/theme';\r\nimport { mapDispatchToProps,\r\n         mapStateToProps,\r\n         AppEventsActions } from './dispatchers/AppEventsDispatcher';\r\nimport AppDrawer            from './components/AppDrawer';\r\nimport KanbanBoardView      from './views/KanbanBoardView';\r\nimport CalendarView         from './views/CalendarView';\r\nimport EditorView           from './views/EditorView';\r\nimport SettingsView         from './views/SettingsView';\r\nimport ConfirmDialog        from './components/ConfirmDialog';\r\n\r\n\r\n\r\ntype AppProps = AppEventsState & AppEventsActions;\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    app: {\r\n        display: 'flex',\r\n    },\r\n}));\r\n\r\n\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nfunction useInterval(callback: () => void, delay: number | null) {\r\n    const savedCallback = useRef() as React.MutableRefObject<any>;\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n\r\n            // Clean up the timer when unmount or before re-calling.\r\n            return () => clearInterval(id);\r\n        }\r\n\r\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n    }, [delay]);\r\n}\r\n\r\n\r\nconst App: React.FC<AppProps> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    useInterval(\r\n        () => {\r\n            if (props.appConfig) {\r\n                console.log('periodic timer:' + new Date());\r\n                restartSync()\r\n                .then(() => {\r\n                    props.refreshActiveBoard();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.message);\r\n                });\r\n            }\r\n        },\r\n        props.appConfig && props.appConfig.display &&\r\n            props.appConfig.display.autoUpdate ?\r\n                (props.appConfig.display.autoUpdateInterval || 2419200) * 1000 :\r\n                null\r\n    );\r\n\r\n    return (\r\n        <div className={clsx(classes.app)}>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <AppDrawer />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={KanbanBoardView} />\r\n                    <Route path=\"/kanban/:id?\" component={KanbanBoardView} />\r\n                    <Route path=\"/calendar/:id?\" component={CalendarView} />\r\n                    <Route path=\"/edit/:id?\" component={EditorView} />\r\n                    <Route path=\"/config/\" component={SettingsView} />\r\n                </Switch>\r\n                {props.alertDialog.open ?\r\n                    <ConfirmDialog {...props.alertDialog} /> :\r\n                    <></>\r\n                }\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                    from 'react';\nimport ReactDOM                 from 'react-dom';\nimport { Provider }             from 'react-redux';\nimport { ConnectedRouter }      from 'connected-react-router'\nimport { getLocalDb }           from './lib/db'\nimport                               './index.css';\nimport App                      from './App';\nimport * as serviceWorker       from './serviceWorker';\nimport getAppStore,\n       { history }              from './store';\n\n\n\n(async () => {\n    getLocalDb();\n\n    ReactDOM.render(\n        <Provider store={await getAppStore()}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>,\n        document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n\n    // serviceWorker.unregister();\n    serviceWorker.register();\n})();\n"],"sourceRoot":""}