{"version":3,"sources":["webpack://mdneUI/./src.renderer/assets/script/libs/filefilters.js","webpack://mdneUI/webpack/bootstrap","webpack://mdneUI/webpack/runtime/define property getters","webpack://mdneUI/webpack/runtime/hasOwnProperty shorthand","webpack://mdneUI/webpack/runtime/make namespace object","webpack://mdneUI/./src.renderer/assets/script/libs/backends/carlo.js","webpack://mdneUI/./src.renderer/assets/script/libs/backends/electron.js","webpack://mdneUI/./src.renderer/assets/script/libs/backends/browser.js","webpack://mdneUI/./src.renderer/assets/script/libs/backend-api.js","webpack://mdneUI/./src.renderer/assets/script/libs/cmdrunner.js","webpack://mdneUI/./src.renderer/assets/script/libs/remote.js","webpack://mdneUI/./src.renderer/assets/script/libs/appstate.js","webpack://mdneUI/./src.renderer/assets/script/libs/backend-wrap.js","webpack://mdneUI/./src.renderer/assets/script/libs/modes.js","webpack://mdneUI/./src.renderer/assets/script/components/aceeditor.js","webpack://mdneUI/./src.renderer/assets/script/components/filedropdialog.js","webpack://mdneUI/./src.renderer/assets/script/components/fileopendialog.js","webpack://mdneUI/./src.renderer/assets/script/components/filesavedialog.js","webpack://mdneUI/./src.renderer/assets/script/components/settingsdialog.js","webpack://mdneUI/./src.renderer/assets/script/components/ui.js","webpack://mdneUI/./src.renderer/assets/script/libs/start.js","webpack://mdneUI/./src.renderer/assets/script/libs/escape.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/app.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/mode.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/md.js","webpack://mdneUI/./src.renderer/assets/script/components/app.js","webpack://mdneUI/./src.renderer/assets/script/libs/lsx.js","webpack://mdneUI/./src.renderer/assets/script/index.js"],"names":["openFilter","value","text","exts","mime","saveAsFilter","exportFilter","concat","window","_MDNE_BACKEND_CAPS_NO_PDF_RENDERER","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","renderByMenneu_","loadFile_","saveFile_","listDirectory_","listDesktopDirectory_","listHomeDirectory_","fileExists_","pathJoin_","getDirName_","getBaseName_","getStartupFile_","openURL_","openNewWindow_","rpc_","carlo_","_MDNE_BACKEND_TYPE","_MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN","renderByMenneu","loadFile","saveFile","listDirectory","listDesktopDirectory","listHomeDirectory","fileExists","pathJoin","getDirName","getBaseName","getStartupFile","openURL","openNewWindow","rpc","carlo","nativeNotifyEditorDirty","nativeNotifyEditorDirty_","nativeAlert","nativeAlert_","nativeAlertSync","nativeAlertSync_","nativeConfirm","nativeConfirm_","nativeConfirmSync","nativeConfirmSync_","nativeFileOpenDialog","nativeFileOpenDialog_","nativeFileSaveDialog","nativeFileSaveDialog_","apiKey","mdneApi","getKey","dirty","send","async","message","type","ipc","ipcSync","title","defaultPath","filters","intent","source","data","options","srcPath","exportPath","filePath","dirPath","url","Backend","frontend","this","frontend_","command","ast","backend_","handle","x","loadParams","fileInfo","path","file","fileBodyText","on","event","arg","ret","runCommand","Promise","sender","succeeded","payload","e","error","document","addEventListener","ev","keyCode","preventDefault","convertFileFilters","filter","extensions","length","map","description","name","accept","ext","welcomeFile","nativeSaveFileHandle","nativeExportFileHandle","internalSaveFileEx","forExport","p","b","util","menneu","getAppEnv","RedAgateUtil","modFilters","saved","showSaveFilePicker","fileName","t","slice","writable","createWritable","write","close","FileSaver","saveTextAs","location","hash","encodeURIComponent","Base64","encode","pako","deflate","TextEncoding","encodeToUtf8","replace","showOpenFilePicker","fileHandle","types","getFile","opts","assign","replacementMacros","re","fn","Vx02PGUB3NFWwhsd__replacementMacros","Array","isArray","outputFormat","toLowerCase","errText","Error","bufStr","render","toString","resultUrl","URL","createObjectURL","Blob","setTimeout","revokeObjectURL","response","fetch","directory","files","isDirectory","join","a","split","stack","pop","match","push","startsWith","dir","lastIndexOf","substring","targetPath","targetUrl","result","forEach","part","item","decodeURIComponent","indexOf","inflate","decode","ok","open","pathname","LM_async_","config","liyad","defaultConfig","reservedNames","Template","installCore","installArithmetic","installSequence","installConcurrent","stripComments","returnMultipleRoot","SExpressionAsync","setGlobals","install","operators","state","resolve","reject","funcs","evaluateAST","reader","FileReader","onload","onerror","readAsText","backend","carloBackend","electronBackend","browserBackend","commandRunner","AppState","AppName","AceEditor","inputFormat","fileChanged","invalidate","updateAppIndicatorBar","getElementById","innerText","notifyEditorDirty","alertWrap","String","alert","confirmWrap","confirm","getInputFormat","endsWith","isPreviewable","getAceEditorMode","React","Component","constructor","props","super","editor","outerWrapRef","createRef","componentDidMount","ace","edit","id","setFontSize","fontSize","setTheme","session","setMode","commands","addCommand","bindKey","win","mac","exec","getValue","getUndoManager","markClean","onSaveAs","onChange","y","onChangeScrollTop","getScreenLength","renderer","lineHeight","onChangeScrollLeft","lsx","stretched","collapsed","FileDropDialog","dialogRef","showModal","handler","current","activeElement","blur","openFile","aceId","clearSelection","setValue","moveCursorTo","openFileAndClose","handleOnDragOver","stopPropagation","i","dataTransfer","paths","all","texts","handleCancelClick","fileOpenDialog","currentAceId","currentFilePath","fileTypes","currentDir","handleOnDrop","handleOnOpenDialogClick","FileOpenDialog","selectedFileType","currentDirFiles","inputFileName","fileNameInputRef","fileTypeSelectorRef","setState","selectedType","filePaths","then","info","catch","e2","e3","handleFileListItemClick","isDir","focus","trim","getFilteredCurrentDirFiles","z","handleOkClick","FileSaveDialog","allFilesType","SettingsDialog","showFields","fontFamily","useSoftTabs","tabSize","wrap","showInvisibles","darkThemePreview","theme","componentDidUpdate","M","updateTextFields","elems","querySelectorAll","FormSelect","init","handleFontFamilyChange","target","handleFontSizeChange","handleTabSizeChange","Math","floor","Number","handleSoftTabsChange","checked","handleWrapChange","handleShowInvisiblesChange","handleDarkThemePreviewChange","handleThemeChange","cf","dataFormat","escapeHtml","s","getOperators","app","args","dirName","fullPath","fileDropDialogRef","afterFileOpen","handleFileOpenClick","handleSaveClick","fileSaveAs","handleSaveAsClick","fileExport","handleExportClick","handleShowClick","onoff","syncPreview","format","isPdf","useScripting","getEntireText","getSelectedText","insertText","runCommandAST","topic","getCurrentAceId","modeName","aceMode","rows","max","cols","fill","_","insert","getCursorPosition","LOCAL_STORAGE_KEY","LOCAL_STORAGE_INITIAL","App","splitterMoving","counter","aceFontSize","scheduleRerenderPreview","savedEditorStyleWidth","savedPreviewScrollY","commandBoxRef","editorRef","editorPlaceholderRef","splitterRef","rootRef","fileOpenDialogRef","fileSaveDialogRef","settingsDialogRef","onbeforeunload","isClean","getAppOperators","getModeOperators","getMdOperators","Dropdown","constrainWidth","Tooltip","Autocomplete","dialogPolyfill","dialogs","dialog","registerDialog","appSettingsStr","localStorage","getItem","appSettings","JSON","parse","setOptions","onkeyup","ctrlKey","shiftKey","setEditorNewFile","openFileOpenDialog","contentWindow","style","width","resize","handleStretchedClick","scrollTo","scrollX","scrollY","handleSyncPreviewClick","handleIsPdfClick","handleUseScriptingClick","start","rawInput","outputUrl","console","darkTheme","min","documentElement","scrollHeight","execCommand","handleSettingsClick","getOptions","settings","version","setItem","stringify","handleAceEditorOnChange","curOp","reload","handleAceEditorOnChangeScrollTop","totalHeight","w","handleAceEditorOnChangeScrollLeft","handleCommandBoxOnKeyDown","clearBox","getInstance","toast","html","classes","handleCommandBoxOnBlur","Toast","dismissAll","handleSplitterOnPointerDown","onpointermove","ev2","maxWidth","clientX","innerWidth","round","onpointerup","releasePointerCapture","pointerId","setPointerCapture","isEmulation","ua","navigator","userAgent","isChrome","LSX","jsx","createElement","jsxFlagment","Fragment","components","MenuItem","icon","caption","onClick","MenuDivider","Switch","offText","onText","elClass","lsx_","setFrontend","initBackend","ReactDOM"],"mappings":"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","file":"index.js","sourcesContent":["// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const openFilter = [{\r\n    value: 'md',\r\n    text: 'Markdown (*.md, *.markdown)',\r\n    exts: ['.md', '.markdown'],\r\n    mime: 'text/markdown',\r\n}, {\r\n    value: 'html',\r\n    text: 'HTML (*.html, *.htm)',\r\n    exts: ['.html', '.htm'],\r\n    mime: 'text/html',\r\n}, {\r\n    value: '*',\r\n    text: 'All Files (*.*)',\r\n    exts: [],\r\n    mime: '*/*',\r\n}];\r\n\r\n\r\nexport const saveAsFilter = [{\r\n    value: 'md',\r\n    text: 'Markdown (*.md, *.markdown)',\r\n    exts: ['.md', '.markdown'],\r\n    mime: 'text/markdown',\r\n}, {\r\n    value: '*',\r\n    text: 'All Files (*.*)',\r\n    exts: [],\r\n    mime: '*/*',\r\n}];\r\n\r\n\r\nexport const exportFilter = [].concat(\r\n    (window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER ? [] : [{\r\n        value: 'pdf',\r\n        text: 'PDF (*.pdf)',\r\n        exts: ['.pdf'],\r\n        mime: 'application/pdf',\r\n    }]),\r\n    [{\r\n        value: 'html',\r\n        text: 'HTML (*.html, *.htm)',\r\n        exts: ['.html', '.htm'],\r\n        mime: 'text/html',\r\n    }, {\r\n        value: '*',\r\n        text: 'All Files (*.*)',\r\n        exts: [],\r\n        mime: '*/*',\r\n    }]\r\n);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'CARLO_RPC') {\r\n    // Carlo backend\r\n\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = false;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = false;\r\n\r\n    renderByMenneu_ = window.renderByMenneu;\r\n    loadFile_ = window.loadFile;\r\n    saveFile_ = window.saveFile;\r\n    listDirectory_ = window.listDirectory;\r\n    listDesktopDirectory_ = window.listDesktopDirectory;\r\n    listHomeDirectory_ = window.listHomeDirectory;\r\n    fileExists_ = window.fileExists;\r\n    pathJoin_ = window.pathJoin;\r\n    getDirName_ = window.getDirName;\r\n    getBaseName_ = window.getBaseName;\r\n    getStartupFile_ = window.getStartupFile;\r\n    openURL_ = window.openURL;\r\n    openNewWindow_ = window.openNewWindow;\r\n    rpc_ = window.rpc;\r\n    carlo_ = window.carlo;\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'ELECTRON_IPC') {\r\n    // Electron backend\r\n\r\n    const apiKey = mdneApi.getKey();\r\n\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = false;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = false;\r\n\r\n    nativeNotifyEditorDirty_ = (dirty) => {\r\n        mdneApi.send(apiKey, 'app:editor:notifyEditorDirty', {\r\n            dirty,\r\n        });\r\n    };\r\n\r\n    nativeAlert_ = (async (message, type) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeAlert', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeAlertSync_ = ((message, type) => {\r\n        return mdneApi.ipcSync(apiKey, 'app:editor:nativeAlertSync', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeConfirm_ = (async (message, type) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeConfirm', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeConfirmSync_ = ((message, type) => {\r\n        return mdneApi.ipcSync(apiKey, 'app:editor:nativeConfirmSync', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeFileOpenDialog_ = (async (title, defaultPath, filters) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeFileOpenDialog', {\r\n            title,\r\n            defaultPath,\r\n            filters,\r\n        });\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    nativeFileSaveDialog_ = (async (title, defaultPath, filters, intent) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeFileSaveDialog', {\r\n            title,\r\n            defaultPath,\r\n            filters,\r\n        });\r\n    });\r\n\r\n    renderByMenneu_ = (async (source, data, options, srcPath, ...exportPath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:renderByMenneu', {\r\n            source,\r\n            data,\r\n            options,\r\n            srcPath,\r\n            exportPath,\r\n        });\r\n    });\r\n\r\n    loadFile_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:loadFile', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    saveFile_ = (async (text, ...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:saveFile', {\r\n            text,\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    listDirectory_ = (async (...dirPath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listDirectory', {\r\n            dirPath,\r\n        });\r\n    });\r\n\r\n    listDesktopDirectory_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listDesktopDirectory', {});\r\n    });\r\n\r\n    listHomeDirectory_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listHomeDirectory', {});\r\n    });\r\n\r\n    fileExists_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:fileExists', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    pathJoin_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:pathJoin', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getDirName_ = (async (filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getDirName', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getBaseName_ = (async (filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getBaseName', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getStartupFile_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getStartupFile', {});\r\n    });\r\n\r\n    openURL_ = (async (url) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:openURL', {\r\n            url,\r\n        });\r\n    });\r\n\r\n    openNewWindow_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:openNewWindow', {});\r\n    });\r\n\r\n    class Backend {\r\n        async setFrontend(frontend) {\r\n            this.frontend_ = frontend;\r\n            (async () => {\r\n                //\r\n            })();\r\n        }\r\n\r\n        async runCommand(command) {\r\n            return await mdneApi.ipc(apiKey, 'app:editor:Backend:runCommand', {\r\n                command,\r\n            });\r\n        }\r\n\r\n        async runCommandAST(ast) {\r\n            return await mdneApi.ipc(apiKey, 'app:editor:Backend:runCommandAST', {\r\n                ast,\r\n            });\r\n        }\r\n    }\r\n\r\n    const backend_ = new Backend;\r\n\r\n    rpc_ = {\r\n        handle: x => x,\r\n    };\r\n\r\n    carlo_ = {\r\n        loadParams: (async () => {\r\n            return [backend_];\r\n        }),\r\n        fileInfo: (async (file) => {\r\n            return ({\r\n                path: file.path,\r\n                fileBodyText: await loadFile(file.path),\r\n            });\r\n        }),\r\n    };\r\n\r\n    mdneApi.on(apiKey, 'app:editor:Frontend:runCommand', async (event, arg) => {\r\n        try {\r\n            let ret = backend_.frontend_.runCommand(arg.command);\r\n            if (ret instanceof Promise) {\r\n                ret = await ret;\r\n            }\r\n            event.sender.send('app:editor:Frontend:runCommand', {succeeded: true, payload: ret});\r\n        } catch (e) {\r\n            event.sender.send('app:editor:Frontend:runCommand', {succeeded: false, error: e.message});\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keyup', (ev) => {\r\n        if (ev.keyCode === 122) {\r\n            // F11\r\n            mdneApi.ipc(apiKey, 'app:editor:toggleFullScreen', {});\r\n            ev.preventDefault();\r\n        }\r\n    }, false);\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nconst additionalContentStyles = `\r\n<style>\r\n::-webkit-scrollbar {\r\n    width: 13px;\r\n    height: 13px;\r\n}\r\n::-webkit-scrollbar-track {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgb(88, 88, 88);\r\n    background-color: rgb(56, 56, 56);\r\n}\r\n::-webkit-scrollbar-thumb {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgb(88, 88, 88);\r\n    background-color: rgb(102, 102, 102);\r\n}\r\n</style>\r\n`;\r\n\r\n\r\nfunction convertFileFilters(filters) {\r\n    return (filters\r\n            .filter(x => x.extensions.length && x.extensions[0] !== '*')\r\n            .map(x => ({\r\n        description: x.name,\r\n        accept: {\r\n            [x.mime]: x.extensions.map(ext => `.${ext}`),\r\n        },\r\n    })));\r\n}\r\n\r\n\r\nif (!window._MDNE_BACKEND_TYPE || window._MDNE_BACKEND_TYPE === 'BROWSER_EMULATION') {\r\n    // Fallback (for Browser)\r\n\r\n    window._MDNE_BACKEND_TYPE = 'BROWSER_EMULATION';\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = true;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = true;\r\n\r\n    const welcomeFile = 'assets/data/welcome.md';\r\n\r\n    /** @type {FileSystemFileHandle | null} */\r\n    let nativeSaveFileHandle = null;\r\n    /** @type {FileSystemFileHandle | null} */\r\n    let nativeExportFileHandle = null;\r\n\r\n    if (window.showOpenFilePicker) {\r\n        nativeFileOpenDialog_ = (async (title, defaultPath, filters) => {\r\n            try {\r\n                const [fileHandle] = await window.showOpenFilePicker({\r\n                    types: convertFileFilters(filters),\r\n                });\r\n                nativeSaveFileHandle = fileHandle;\r\n                const file = await nativeSaveFileHandle.getFile();\r\n                return [file.name];\r\n            } catch (e) {\r\n                // Cancelled or failed\r\n                return void 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (window.showSaveFilePicker) {\r\n        /** @type {(title: string, defaultPath: string, filters: any, intent: 'saveas' | 'export') => string | undefined} */\r\n        nativeFileSaveDialog_ = (async (title, defaultPath, filters, intent) => {\r\n            try {\r\n                // NOTE: The existing file is cleared before this method returned if method is succeeded.\r\n                const handle = await window.showSaveFilePicker({\r\n                    types: convertFileFilters(filters),\r\n                });\r\n                const file = await handle.getFile();\r\n                switch (intent) {\r\n                case 'saveas':\r\n                    nativeSaveFileHandle = handle;\r\n                    break;\r\n                case 'export':\r\n                    nativeExportFileHandle = handle;\r\n                    break;\r\n                }\r\n                return file.name;\r\n            } catch (e) {\r\n                // Cancelled or failed\r\n                return void 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    renderByMenneu_ = (async (source, data, options, srcPath, ...exportPath) => {\r\n        const opts = Object.assign({}, options, {\r\n            // NOTE: to enhance macros, define Vx02PGUB3NFWwhsd__replacementMacros.\r\n            replacementMacros: [{\r\n                re: /!!!lsx\\s([\\s\\S]+?)!!!/g,\r\n                fn: 'lsx', // evaluate input as LSX script\r\n            }].concat(\r\n                window.Vx02PGUB3NFWwhsd__replacementMacros &&\r\n                Array.isArray(window.Vx02PGUB3NFWwhsd__replacementMacros) ?\r\n                    window.Vx02PGUB3NFWwhsd__replacementMacros:\r\n                    []),\r\n        });\r\n        if (!opts.outputFormat || opts.outputFormat.toLowerCase() !== 'html') {\r\n            const errText = `output format ${opts.outputFormat} is not available.`;\r\n            throw new Error(errText);\r\n        }\r\n\r\n        const buf = await menneu.render(source, {}, opts);\r\n        let bufStr = buf.toString();\r\n        if (exportPath.length === 0) {\r\n            bufStr += additionalContentStyles;\r\n        }\r\n\r\n        // NOTE: Browsers treat Data URLs as cross-origin.\r\n        //       To avoid cross-origin, use Blob URLs instead.\r\n        // const resultUrl = 'data:text/html;base64,' + menneu.getAppEnv().RedAgateUtil.Base64.encode(buf);\r\n\r\n        const resultUrl = URL.createObjectURL(new Blob([bufStr], { type: 'text/html' }));\r\n\r\n        if (exportPath.length > 0) {\r\n            internalSaveFileEx(true, bufStr, ...exportPath);\r\n        }\r\n\r\n        // schedule revoking the Blob URL.\r\n        setTimeout(() => URL.revokeObjectURL(resultUrl), 5000);\r\n        return resultUrl;\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    loadFile_ = (async (...filePath) => {\r\n        if (nativeSaveFileHandle) {\r\n            const file = await nativeSaveFileHandle.getFile();\r\n            return await file.text();\r\n        } else {\r\n            const response = await fetch(welcomeFile);\r\n            return await response.text();\r\n        }\r\n    });\r\n\r\n    // eslint-disable-next-line no-inner-declarations\r\n    async function internalSaveFileEx(forExport, text, ...filePath) {\r\n        let p = await pathJoin(...filePath);\r\n        let b = await getBaseName(p);\r\n\r\n        const util = menneu.getAppEnv().RedAgateUtil;\r\n\r\n        const modFilters = await import('../filefilters');\r\n\r\n        let handle = forExport ? nativeExportFileHandle : nativeSaveFileHandle;\r\n        let saved = false;\r\n\r\n        if (window.showSaveFilePicker) {\r\n            if (! handle) {\r\n                const fileName = await nativeFileSaveDialog('', '', modFilters.saveAsFilter.map(x => ({\r\n                    name: x.text,\r\n                    extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                    mime: x.mime,\r\n                })), forExport ? 'export' : 'saveas');\r\n\r\n                handle = forExport ? nativeExportFileHandle : nativeSaveFileHandle;\r\n\r\n                if (handle && fileName) {\r\n                    p = b = fileName;\r\n                }\r\n            }\r\n            if (handle) {\r\n                const writable = await handle.createWritable();\r\n                await writable.write(text);\r\n                await writable.close();\r\n                saved = true;\r\n            }\r\n            if (forExport) {\r\n                nativeExportFileHandle = null;\r\n            }\r\n        }\r\n\r\n        if (! saved) {\r\n            // Fallback\r\n            await util.FileSaver.saveTextAs(b, text);\r\n        }\r\n\r\n        if (! forExport) {\r\n            try {\r\n                window.location.hash = `filename=${encodeURIComponent(b)}&open.d=${util.Base64.encode(pako.deflate(\r\n                    util.TextEncoding.encodeToUtf8(text)))\r\n                    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')}`;\r\n            // eslint-disable-next-line no-empty\r\n            } catch (e) {}\r\n        }\r\n\r\n        return {\r\n            path: p,\r\n            name: b,\r\n        };\r\n    }\r\n\r\n    saveFile_ = (async (text, ...filePath) => {\r\n        return await internalSaveFileEx(false, text, ...filePath);\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    listDirectory_ = (async (...dirPath) => {\r\n        return {\r\n            directory: '',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    listDesktopDirectory_ = (async () => {\r\n        return {\r\n            directory: '/',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    listHomeDirectory_ = (async () => {\r\n        return {\r\n            directory: '/',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    fileExists_ = (async (...filePath) => {\r\n        return false;\r\n    });\r\n\r\n    pathJoin_ = (async (...filePath) => {\r\n        const p = filePath.filter(x => x.length > 0).join('/').replace(/\\/+/g, '/');\r\n        const a = p.split('/');\r\n        const stack = [];\r\n        for (const x of a) {\r\n            switch (x) {\r\n            case '.': case '':\r\n                break;\r\n            case '..':\r\n                stack.pop();\r\n                break;\r\n            default:\r\n                if (x.match(/^[.]+$/)) {\r\n                    stack.pop();\r\n                } else {\r\n                    stack.push(x);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return (p.startsWith('/') ? '/' : '') + stack.join('/');\r\n    });\r\n\r\n    getDirName_ = (async (filePath) => {\r\n        let dir = filePath;\r\n        if (dir.lastIndexOf('/') !== -1) {\r\n            dir = dir.substring(0, dir.lastIndexOf('/'));\r\n        } else {\r\n            dir = '';\r\n        }\r\n        return dir;\r\n    });\r\n\r\n    getBaseName_ = (async (filePath) => {\r\n        let base = filePath.substring(filePath.lastIndexOf('/') + 1);\r\n        return base;\r\n    });\r\n\r\n    getStartupFile_ = (async () => {\r\n        let targetPath = 'Welcome.md';\r\n        let targetUrl = welcomeFile;\r\n        const util = menneu.getAppEnv().RedAgateUtil;\r\n\r\n        if (window.location.hash) {\r\n            const result = {};\r\n            window.location.hash.substring(1).split('&').forEach((part) => {\r\n                const item = part.split('=');\r\n                result[item[0]] = decodeURIComponent(item[1]);\r\n            });\r\n            if (window.location.hash.indexOf('open.d=') >= 0) {\r\n                if (result['open.d']) {\r\n                    targetPath = result['filename'] || 'Untitled.md';\r\n                    try {\r\n                        targetUrl = `data:text/plain;base64,${util.Base64.encode(pako.inflate(\r\n                            util.Base64.decode(\r\n                                result['open.d'].replace(/-/g, '+').replace(/_/g, '/'))))}`;\r\n                    // eslint-disable-next-line no-empty\r\n                    } catch (e) {}\r\n                }\r\n            } else if (window.location.hash.indexOf('open.url=') >= 0) {\r\n                if (result['open.url']) {\r\n                    targetPath = result['open.url']\r\n                        .substring(result['open.url'].lastIndexOf('/') + 1) ||\r\n                        'index';\r\n                    targetUrl = result['open.url'];\r\n                }\r\n            } else if (result['filename']) {\r\n                targetPath = result['filename'];\r\n                targetUrl = `data:text/plain,`;\r\n            }\r\n        }\r\n        const response = await fetch(targetUrl, {});\r\n        if (response.ok) {\r\n            return {\r\n                path: targetPath,\r\n                text: await response.text(),\r\n            };\r\n        }\r\n        throw new Error('Fetching url failed. Network response was not ok, or CORB error.');\r\n    });\r\n\r\n    openURL_ = (async (url) => {\r\n        window.open(url, '_blank', 'noopener');\r\n        return true;\r\n    });\r\n\r\n    openNewWindow_ = (async () => {\r\n        window.open(window.location.pathname + '#filename=Untitled.md', '_blank', 'noopener');\r\n        return true;\r\n    });\r\n\r\n    const LM_async_ = (() => {\r\n        let config = Object.assign({}, liyad.defaultConfig);\r\n        config.reservedNames = Object.assign({}, config.reservedNames, {\r\n            Template: '$concat',\r\n        });\r\n    \r\n        config = liyad.installCore(config);\r\n        config = liyad.installArithmetic(config);\r\n        config = liyad.installSequence(config);\r\n        config = liyad.installConcurrent(config);\r\n    \r\n        config.stripComments = true;\r\n        config.returnMultipleRoot = true;\r\n    \r\n        return liyad.SExpressionAsync(config);\r\n    })();\r\n\r\n    LM_async_\r\n    .setGlobals({})\r\n    .install(config => {\r\n        const operators = [{\r\n            name: '$>',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...command) => {\r\n                return new Promise((resolve, reject) => {\r\n                    reject(new Error('cannot execute shell'));\r\n                });\r\n            },\r\n        }];\r\n        config.funcs = (config.funcs || []).concat(operators);\r\n        // config.macros = (config.macros || []).concat(macros);\r\n        // config.symbols = (config.symbols || []).concat(symbols);\r\n        return config;\r\n    });\r\n\r\n    class Backend {\r\n        async setFrontend(frontend) {\r\n            // Node world can now use frontend RPC handle.\r\n            this.frontend_ = frontend;\r\n            (async () => {\r\n                //\r\n            })();\r\n        }\r\n\r\n        async runCommand(command) {\r\n            return LM_async_(command);\r\n        }\r\n\r\n        async runCommandAST(ast) {\r\n            return LM_async_.evaluateAST(ast);\r\n        }\r\n    }\r\n\r\n    const backend_ = new Backend;\r\n\r\n    rpc_ = {\r\n        handle: x => x,\r\n    };\r\n\r\n    carlo_ = {\r\n        /** @type {() => Promise<Backend[]>} */\r\n        loadParams: (async () => {\r\n            return [backend_];\r\n        }),\r\n        /**\r\n         * @type {(file: File) => Promise<{path: string, fileBodyText: string}>}\r\n         * File is dropped.\r\n         * Get the file info and content.\r\n         */\r\n        fileInfo: (async (file) => {\r\n            const promise = new Promise((resolve, reject) => {\r\n                // Reset the opened file's handler\r\n                nativeSaveFileHandle = null;\r\n\r\n                const reader = new FileReader();\r\n                // eslint-disable-next-line no-unused-vars\r\n                reader.onload = ev => {\r\n                    resolve({\r\n                        path: file.name,\r\n                        fileBodyText: reader.result,\r\n                    });\r\n                };\r\n                // eslint-disable-next-line no-unused-vars\r\n                reader.onerror = ev => {\r\n                    reject(reader.error);\r\n                };\r\n                reader.readAsText(file, 'UTF-8');\r\n            });\r\n            return promise;\r\n        }),\r\n    };\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport * as carloBackend    from './backends/carlo.js';\r\nimport * as electronBackend from './backends/electron.js';\r\nimport * as browserBackend  from './backends/browser.js';\r\n\r\n\r\nlet backend = null;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'CARLO_RPC') {\r\n    // Carlo backend\r\n    backend = carloBackend;\r\n} else if (window._MDNE_BACKEND_TYPE === 'ELECTRON_IPC') {\r\n    // Electron backend\r\n    backend = electronBackend;\r\n} else {\r\n    // Fallback (for Browser)\r\n    backend = browserBackend;\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = backend.nativeNotifyEditorDirty;\r\nexport const nativeAlert = backend.nativeAlert;\r\nexport const nativeAlertSync = backend.nativeAlertSync;\r\nexport const nativeConfirm = backend.nativeConfirm;\r\nexport const nativeConfirmSync = backend.nativeConfirmSync;\r\nexport const nativeFileOpenDialog = backend.nativeFileOpenDialog;\r\nexport const nativeFileSaveDialog = backend.nativeFileSaveDialog;\r\nexport const renderByMenneu = backend.renderByMenneu;\r\nexport const loadFile = backend.loadFile;\r\nexport const saveFile = backend.saveFile;\r\nexport const listDirectory = backend.listDirectory;\r\nexport const listDesktopDirectory = backend.listDesktopDirectory;\r\nexport const listHomeDirectory = backend.listHomeDirectory;\r\nexport const fileExists = backend.fileExists;\r\nexport const pathJoin = backend.pathJoin;\r\nexport const getDirName = backend.getDirName;\r\nexport const getBaseName = backend.getBaseName;\r\nexport const getStartupFile = backend.getStartupFile;\r\nexport const openURL = backend.openURL;\r\nexport const openNewWindow = backend.openNewWindow;\r\nexport const rpc = backend.rpc;\r\nexport const carlo = backend.carlo;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nconst LM_async_ = (() => {\r\n    let config = Object.assign({}, liyad.defaultConfig);\r\n    config.reservedNames = Object.assign({}, config.reservedNames, {\r\n        Template: '$concat',\r\n    });\r\n\r\n    config = liyad.installCore(config);\r\n    config = liyad.installArithmetic(config);\r\n    config = liyad.installSequence(config);\r\n    config = liyad.installConcurrent(config);\r\n\r\n    config.stripComments = true;\r\n    config.returnMultipleRoot = true;\r\n\r\n    return liyad.SExpressionAsync(config);\r\n})();\r\n\r\n\r\nLM_async_.setGlobals({});\r\n\r\nexport default LM_async_;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { rpc,\r\n         carlo }     from './backend-api.js';\r\nimport commandRunner from './cmdrunner.js';\r\n\r\n\r\n\r\nclass Frontend {\r\n    runCommand(command) {\r\n        return commandRunner(command);\r\n    }\r\n}\r\n\r\n\r\nexport const frontend_ = new Frontend;\r\nlet backend_ = null;\r\n\r\n\r\nexport async function initBackend() {\r\n    if (backend_) {\r\n        return backend_;\r\n    }\r\n    backend_ = (await carlo.loadParams())[0];\r\n    await backend_.setFrontend(rpc.handle(frontend_));\r\n}\r\n\r\n\r\nexport function frontend() {\r\n    return frontend_;\r\n}\r\n\r\n\r\nexport function backend() {\r\n    return backend_;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nconst AppState = {\r\n    AppName: 'Markdown Editor',\r\n    AceEditor: null,\r\n    filePath: null,\r\n    inputFormat: 'md',\r\n    fileChanged: false,\r\n    invalidate: () => void 0,\r\n};\r\n\r\n\r\nexport function updateAppIndicatorBar() {\r\n    document.title = `${AppState.AppName} - ${\r\n        AppState.fileChanged ? '● ' : ''}${\r\n        AppState.filePath || '(New file)'}`;\r\n    document.getElementById('appIndicatorBar').innerText = `${\r\n        AppState.fileChanged ? '● ' : ''}${\r\n        AppState.filePath || '(New file)'} | mode: ${\r\n        AppState.inputFormat}`;\r\n}\r\n\r\nexport default AppState;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeNotifyEditorDirty,\r\n         nativeAlert,\r\n         nativeConfirm } from './backend-api.js';\r\nimport AppState          from './appstate.js';\r\n\r\n\r\n\r\nexport const notifyEditorDirty = (dirty) => {\r\n    AppState.fileChanged = dirty;\r\n    if (nativeNotifyEditorDirty) {\r\n        nativeNotifyEditorDirty(dirty);\r\n    }\r\n}\r\n\r\n\r\nexport const alertWrap = async (message) => {\r\n    if (nativeAlert) {\r\n        await nativeAlert(String(message));\r\n    } else {\r\n        alert(message);\r\n    }\r\n}\r\n\r\n\r\nexport const confirmWrap = async (message) => {\r\n    if (nativeConfirm) {\r\n        return await nativeConfirm(String(message));\r\n    } else {\r\n        return confirm(message);\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\n/**\r\n * @param {string} path\r\n * @return {string}\r\n */\r\nexport function getInputFormat(path) {\r\n    switch (path.lastIndexOf('.') >= 0 ?\r\n        path.toLowerCase().slice(path.lastIndexOf('.')) : '') {\r\n    case '.md': case '.markdown':\r\n        return 'md';\r\n    case '.html': case '.htm':\r\n        return 'html';\r\n    case '.lisp': case '.lsx':\r\n        return 'lisp';\r\n    case '.tex':\r\n        return 'tex';\r\n    case '.latex':\r\n        return 'latex';\r\n    case '.css':\r\n        return 'css';\r\n    case '.less':\r\n        return 'less';\r\n    case '.sass':\r\n        return 'sass';\r\n    case '.scss':\r\n        return 'scss';\r\n    case '.json':\r\n        return 'json';\r\n    case '.json5':\r\n        return 'json5';\r\n    case '.js': case '.mjs': case '.cjs':\r\n        return 'js';\r\n    case '.jsx':\r\n        return 'jsx';\r\n    case '.ts':\r\n        return 'ts';\r\n    case '.tsx':\r\n        return 'tsx';\r\n    case '.svg':\r\n        return 'svg';\r\n    case '.xml':\r\n        return 'xml';\r\n    case '.yaml': case '.yml':\r\n        return 'yaml';\r\n    case '.toml':\r\n        return 'toml';\r\n    case '.ini':\r\n        return 'ini';\r\n    case '.graphql': case '.gql':\r\n        return 'graphql';\r\n    case '.proto': case '.proto2': case '.proto3':\r\n        return 'protobuf';\r\n    case '.sql':\r\n        return 'sql';\r\n    case '.cs':\r\n        return 'csharp';\r\n    case '.go':\r\n        return 'golang';\r\n    case '.rb':\r\n        return 'ruby';\r\n    case '.rs':\r\n        return 'rust';\r\n    case '.py':\r\n        return 'python';\r\n    case '.java':\r\n        return 'java';\r\n    case '.kt':\r\n        return 'kotlin';\r\n    case '.r':\r\n        return 'r';\r\n    case '.sh':\r\n        return 'sh';\r\n    case '.dockerfile':\r\n        return 'dockerfile';\r\n    case '.makefile':\r\n        return 'makefile';\r\n    default:\r\n        if (path.toLowerCase().endsWith('dockerfile')) {\r\n            return 'dockerfile';\r\n        }\r\n        if (path.toLowerCase().endsWith('makefile')) {\r\n            return 'makefile';\r\n        }\r\n        return 'text';\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} inputFormat\r\n * @return {boolean}\r\n */\r\nexport function isPreviewable(inputFormat) {\r\n    switch (inputFormat) {\r\n    case 'md':\r\n        return true;\r\n    case 'html':\r\n        return true;\r\n    case 'lisp':\r\n        return true;\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} inputFormat\r\n * @return {string | undefined}\r\n */\r\nexport function getAceEditorMode(inputFormat) {\r\n    switch (inputFormat) {\r\n    case 'md':\r\n        return 'ace/mode/markdown';\r\n    case 'html':\r\n        return 'ace/mode/html';\r\n    case 'lisp':\r\n        return 'ace/mode/lisp';\r\n    case 'tex':\r\n        return 'ace/mode/tex';\r\n    case 'latex':\r\n        return 'ace/mode/latex';\r\n    case 'css':\r\n        return 'ace/mode/css';\r\n    case 'less':\r\n        return 'ace/mode/less';\r\n    case 'sass':\r\n        return 'ace/mode/sass';\r\n    case 'scss':\r\n        return 'ace/mode/scss';\r\n    case 'json':\r\n        return 'ace/mode/json';\r\n    case 'json5':\r\n        return 'ace/mode/json5';\r\n    case 'js':\r\n        return 'ace/mode/javascript';\r\n    case 'jsx':\r\n        return 'ace/mode/jsx';\r\n    case 'ts':\r\n        return 'ace/mode/typescript';\r\n    case 'tsx':\r\n        return 'ace/mode/tsx';\r\n    case 'svg':\r\n        return 'ace/mode/svg';\r\n    case 'xml':\r\n        return 'ace/mode/xml';\r\n    case 'yaml':\r\n        return 'ace/mode/yaml';\r\n    case 'toml':\r\n        return 'ace/mode/toml';\r\n    case 'ini':\r\n        return 'ace/mode/ini';\r\n    case 'graphql':\r\n        return 'ace/mode/graphqlshema';\r\n    case 'protobuf':\r\n        return 'ace/mode/protobuf';\r\n    case 'sql':\r\n        return 'ace/mode/sql';\r\n    case 'csharp':\r\n        return 'ace/mode/csharp';\r\n    case 'golang':\r\n        return 'ace/mode/golang';\r\n    case 'ruby':\r\n        return 'ace/mode/ruby';\r\n    case 'rust':\r\n        return 'ace/mode/rust';\r\n    case 'python':\r\n        return 'ace/mode/python';\r\n    case 'java':\r\n        return 'ace/mode/java';\r\n    case 'kotlin':\r\n        return 'ace/mode/kotlin';\r\n    case 'r':\r\n        return 'ace/mode/r';\r\n    case 'sh':\r\n        return 'ace/mode/sh';\r\n    case 'dockerfile':\r\n        return 'ace/mode/dockerfile';\r\n    case 'makefile':\r\n        return 'ace/mode/makefile';\r\n    case 'text':\r\n        return 'ace/mode/text';\r\n    default:\r\n        return void 0;\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { saveFile }              from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap }             from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport { getInputFormat,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\n\r\n\r\n\r\nexport default class AceEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.editor = null;\r\n\r\n        this.outerWrapRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = ace.edit(this.props.id);\r\n        this.editor.setFontSize(this.props.fontSize);\r\n        this.editor.setTheme('ace/theme/monokai');\r\n        this.editor.session.setMode('ace/mode/markdown');\r\n        this.editor.commands.addCommand({\r\n            name: 'save',\r\n            bindKey: { win: 'Ctrl-S', mac: 'Cmd-S' },\r\n            exec: async (editor) => {\r\n                if (AppState.filePath) {\r\n                    try {\r\n                        // NOTE: In the browser backend, the filepath and filename may change on the first save.\r\n\r\n                        const fileInfo = await saveFile(editor.getValue(), AppState.filePath);\r\n                        AppState.filePath = fileInfo.path;\r\n                        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n\r\n                        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n                        editor.session.getUndoManager().markClean();\r\n                        notifyEditorDirty(false);\r\n                        updateAppIndicatorBar();\r\n                    } catch (e) {\r\n                        await alertWrap(e);\r\n                    }\r\n                } else {\r\n                    this.props.onSaveAs({});\r\n                }\r\n            }\r\n        })\r\n\r\n        this.editor.on('change', (o) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(o);\r\n            }\r\n        });\r\n        this.editor.session.on('changeScrollTop', (y) => {\r\n            if (this.props.onChangeScrollTop) {\r\n                this.props.onChangeScrollTop(y, this.editor.session.getScreenLength() * this.editor.renderer.lineHeight);\r\n            }\r\n        });\r\n        this.editor.session.on('changeScrollLeft', (x) => {\r\n            if (this.props.onChangeScrollLeft) {\r\n                this.props.onChangeScrollLeft(x);\r\n            }\r\n        });\r\n\r\n        AppState.AceEditor = AppState.AceEditor || {};\r\n        AppState.AceEditor[this.props.id] = this.editor;\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (div (@ (ref ${this.outerWrapRef})\r\n                (className\r\n                    ($concat \"AceEditorOuterWrap\"\r\n                             ${this.props.stretched ? \" stretched\" : \"\"}\r\n                             ${this.props.collapsed ? \" collapsed\" : \"\"} )))\r\n            (div (@ (id ${this.props.id})\r\n                    (className \"AceEditorDiv\") )))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { loadFile,\r\n         pathJoin,\r\n         carlo }                 from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap }             from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport { getInputFormat,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\nimport { openFilter }            from '../libs/filefilters';\r\n\r\n\r\n\r\nexport default class FileDropDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.dialogRef.current.showModal();\r\n        document.activeElement.blur();\r\n        this.options = options;\r\n        this.handler = handler;\r\n    }\r\n\r\n    openFile(path, text) {\r\n        AppState.filePath = path;\r\n        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n        notifyEditorDirty(false);\r\n        updateAppIndicatorBar();\r\n\r\n        const editor = AppState.AceEditor[this.options.aceId];\r\n\r\n        editor.clearSelection();\r\n        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n        editor.setValue(text);\r\n        editor.clearSelection();\r\n        editor.session.getUndoManager().markClean();\r\n        editor.moveCursorTo(0, 0);\r\n    }\r\n\r\n    openFileAndClose(path, text) {\r\n        this.openFile(path, text);\r\n\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n        this.handler();\r\n    }\r\n\r\n    handleOnDragOver(ev) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @param {DragEvent} ev \r\n     */\r\n    async handleOnDrop(ev) {\r\n        try {\r\n            ev.preventDefault();\r\n            const files = [];\r\n            for (let i = 0; i < ev.dataTransfer.files.length; i++) {\r\n                files.push(carlo.fileInfo(ev.dataTransfer.files[i]));\r\n                break; // Only use first item\r\n            }\r\n            const paths = await Promise.all(files);\r\n            const texts = await Promise.all(\r\n                paths.map(x => x.fileBodyText ?\r\n                    Promise.resolve(x.fileBodyText) : // emulation\r\n                    loadFile(x.path)                  // carlo\r\n                ));\r\n\r\n            this.openFileAndClose(paths[0].path, texts[0]);\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n            AppState.filePath = null;\r\n            notifyEditorDirty(false);\r\n            updateAppIndicatorBar();\r\n        }\r\n    }\r\n\r\n    async handleOnOpenDialogClick(ev) {\r\n        this.handleCancelClick(ev);\r\n        try {\r\n            this.options.fileOpenDialog.showModal({\r\n                title: 'Open',\r\n                currentAceId: this.options.aceId,\r\n                currentFilePath: AppState.filePath,\r\n                fileTypes: openFilter,\r\n            }, async (currentDir, fileName) => {\r\n                const path = await pathJoin(currentDir, fileName);\r\n                const text = await loadFile(path);\r\n\r\n                this.openFileAndClose(path, text);\r\n            });\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n            AppState.filePath = null;\r\n            notifyEditorDirty(false);\r\n            updateAppIndicatorBar();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 \"Open file\")\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\")\r\n                           (verticalAlign \"middle\") )\r\n                    (onDragOver ${(ev) => {this.handleOnDragOver(ev)}})\r\n                    (onDragLeave ${() => {  }})\r\n                    (onDrop ${async (ev) => {await this.handleOnDrop(ev)}}) )\r\n                (i (@ (className \"material-icons large\")) \"insert_drive_file\")(br)\r\n                \"Drop file here.\" (br)(br)(br)\r\n                (a (@ (style (cursor \"pointer\")\r\n                             (color \"white\")\r\n                             (border-bottom \"1px solid white\") )\r\n                      (onClick ${(ev) => {this.handleOnOpenDialogClick(ev)}}) )\r\n                      \"Or click here to open the file dialog.\" ))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeFileOpenDialog,\r\n         listDirectory,\r\n         listDesktopDirectory,\r\n         listHomeDirectory,\r\n         fileExists,\r\n         getDirName,\r\n         getBaseName } from '../libs/backend-api.js';\r\nimport { alertWrap }   from '../libs/backend-wrap.js';\r\n\r\n\r\n\r\nexport default class FileOpenDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.title = '';\r\n        this.state.currentFilePath = '';\r\n        this.state.fileTypes = [];\r\n        this.state.selectedFileType = '*';\r\n\r\n        this.state.currentDir = '';\r\n        this.state.currentDirFiles = [];\r\n        this.state.inputFileName = '';\r\n\r\n        this.dialogRef = React.createRef();\r\n        this.fileNameInputRef = React.createRef();\r\n        this.fileTypeSelectorRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.setState({title: options.title});\r\n        this.setState({currentFilePath: options.currentFilePath});\r\n        this.setState({fileTypes: options.fileTypes});\r\n\r\n        let selectedType = options.fileTypes[0];\r\n        this.setState({selectedFileType: selectedType.value});\r\n\r\n        this.setState({currentDir: ''});\r\n        this.setState({currentDirFiles: []});\r\n        this.setState({inputFileName: ''});\r\n        this.options = options;\r\n        this.handler = handler;\r\n\r\n        if (nativeFileOpenDialog) {\r\n            (async () => {\r\n                const filePaths = await nativeFileOpenDialog(\r\n                    options.title,\r\n                    options.currentFilePath,\r\n                    options.fileTypes.map(x => ({\r\n                        name: x.text,\r\n                        extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                        mime: x.mime,\r\n                    })));\r\n                if (filePaths) {\r\n                    this.handler(await getDirName(filePaths[0]), await getBaseName(filePaths[0]));\r\n                }\r\n            })();\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n\r\n            listDirectory(options.currentFilePath)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                listDesktopDirectory()\r\n                .then(info => {\r\n                    this.setState({currentDir: info.directory});\r\n                    this.setState({currentDirFiles: info.files});\r\n                })\r\n                // eslint-disable-next-line no-unused-vars\r\n                .catch(e2 => {\r\n                    listHomeDirectory()\r\n                    .then(info => {\r\n                        this.setState({currentDir: info.directory});\r\n                        this.setState({currentDirFiles: info.files});\r\n                    })\r\n                    .catch(e3 => {\r\n                        // TODO: await it.\r\n                        alertWrap(e3);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFileListItemClick(ev, name, isDir) {\r\n        if (isDir) {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: ''});\r\n\r\n            listDirectory(this.state.currentDir, name)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            .catch(e => {\r\n                // TODO: await it.\r\n                alertWrap(e);\r\n            });\r\n        } else {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: name});\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleOkClick(ev) {\r\n        try {\r\n            if (this.state.inputFileName.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            let fileName = this.state.inputFileName;\r\n\r\n            if (! (await fileExists(this.state.currentDir, fileName))) {\r\n                await alertWrap('File does not exist.');\r\n                return;\r\n            }\r\n\r\n            this.handler(this.state.currentDir, fileName);\r\n\r\n            document.activeElement.blur();\r\n            this.dialogRef.current.close();\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n        }\r\n    }\r\n\r\n    getFilteredCurrentDirFiles() {\r\n        return this.state.currentDirFiles.filter(x => {\r\n            if (x.isDirectory) {\r\n                return true;\r\n            }\r\n            let fileName = x.name;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (!selectedType || !selectedType.exts || selectedType.exts.length === 0) {\r\n                return true;\r\n            }\r\n            return (selectedType.exts.filter(z => z === ext)[0]);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 ${this.state.title})\r\n            (div ${this.state.currentDir})\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\") ))\r\n                (div (@ (style (color \"black\")\r\n                               (text-align \"left\")\r\n                               (height \"calc(100% - 100px)\")\r\n                               (overflow-x \"auto\")\r\n                               (overflow-y \"scroll\") ))\r\n                    (ul (@ (className \"collection\")\r\n                           (style (margin \"0\")) )\r\n                        ($=for ${this.getFilteredCurrentDirFiles()}\r\n                            (li (@ (key $index)\r\n                                   (className \"collection-item\"))\r\n                                (a (@ (onClick (|-> (ev) use ($data)\r\n                                          (${(ev, name, isDir) => this.handleFileListItemClick(ev, name, isDir)}\r\n                                              ev ::$data:name ::$data:isDirectory )))\r\n                                      (style (cursor \"pointer\")\r\n                                             (color \"inherit\")\r\n                                             (text-decoration \"none\") ))\r\n                                    (i (@ (className \"material-icons tiny\")\r\n                                          (style (margin \"0 10px 10px 10px\")) )\r\n                                        ($if ::$data:isDirectory \"folder\" \"insert_drive_file\") )\r\n                                    ::$data:name )) )))\r\n                (div (@ (className \"row\"))\r\n                    (div (@ (className \"input-field col s10\"))\r\n                        (label \"File name\")\r\n                        (input (@ (ref ${this.fileNameInputRef})\r\n                                  (style (color \"white\"))\r\n                                  (type \"text\")\r\n                                  (spellcheck \"false\")\r\n                                  (readonly \"readonly\")\r\n                                  (onChange ${() => this.setState({inputFileName: this.fileNameInputRef.current.value})})\r\n                                  (value ${this.state.inputFileName}) )))\r\n                    (div (@ (className \"input-field col s2\"))\r\n                        (select (@ (ref ${this.fileTypeSelectorRef})\r\n                                   (className \"browser-default\")\r\n                                   (onChange ${() => this.setState({selectedFileType: this.fileTypeSelectorRef.current.value})}) )\r\n                            ($=for ${this.state.fileTypes}\r\n                                (option (@ (key   ::$data:value)\r\n                                           (value ::$data:value)\r\n                                           (($if (== ${this.state.selectedFileType} ::$data:value)\r\n                                               \"selected\" \"data-x-no-selected\" )))\r\n                                    ::$data:text ))))))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeFileSaveDialog,\r\n         listDirectory,\r\n         listDesktopDirectory,\r\n         listHomeDirectory,\r\n         fileExists,\r\n         getDirName,\r\n         getBaseName } from '../libs/backend-api.js';\r\nimport { alertWrap,\r\n         confirmWrap } from '../libs/backend-wrap.js';\r\n\r\n\r\n\r\nexport default class FileSaveDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.title = '';\r\n        this.state.currentFilePath = '';\r\n        this.state.fileTypes = [];\r\n        this.state.selectedFileType = '*';\r\n\r\n        this.state.currentDir = '';\r\n        this.state.currentDirFiles = [];\r\n        this.state.inputFileName = '';\r\n\r\n        this.dialogRef = React.createRef();\r\n        this.fileNameInputRef = React.createRef();\r\n        this.fileTypeSelectorRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.setState({title: options.title});\r\n        this.setState({currentFilePath: options.currentFilePath});\r\n        this.setState({fileTypes: options.fileTypes});\r\n\r\n        const ext = options.currentFilePath ?\r\n            (options.currentFilePath.lastIndexOf('.') >= 0 ?\r\n                options.currentFilePath.toLowerCase()\r\n                .slice(options.currentFilePath.lastIndexOf('.')) : '') : '';\r\n        let selectedType = options.fileTypes.filter(x => x.exts.filter(z => z === ext)[0])[0];\r\n        let allFilesType = options.fileTypes.filter(x => x.value === '*')[0];\r\n        this.setState({selectedFileType:\r\n            options.forExport ? options.fileTypes[0].value :\r\n                (selectedType ? selectedType.value :\r\n                    (ext !== '' ? allFilesType.value : options.fileTypes[0].value))});\r\n\r\n        this.setState({currentDir: ''});\r\n        this.setState({currentDirFiles: []});\r\n        this.setState({inputFileName: ''});\r\n        this.options = options;\r\n        this.handler = handler;\r\n\r\n        if (nativeFileSaveDialog) {\r\n            (async () => {\r\n                const fileName = await nativeFileSaveDialog(\r\n                    options.title,\r\n                    options.currentFilePath,\r\n                    options.fileTypes.map(x => ({\r\n                        name: x.text,\r\n                        extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                        mime: x.mime,\r\n                    })), options.intent);\r\n                if (fileName) {\r\n                    this.handler(await getDirName(fileName), await getBaseName(fileName));\r\n                }\r\n            })();\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n\r\n            listDirectory(options.currentFilePath)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                listDesktopDirectory()\r\n                .then(info => {\r\n                    this.setState({currentDir: info.directory});\r\n                    this.setState({currentDirFiles: info.files});\r\n                })\r\n                // eslint-disable-next-line no-unused-vars\r\n                .catch(e2 => {\r\n                    listHomeDirectory()\r\n                    .then(info => {\r\n                        this.setState({currentDir: info.directory});\r\n                        this.setState({currentDirFiles: info.files});\r\n                    })\r\n                    .catch(e3 => {\r\n                        // TODO: await it.\r\n                        alertWrap(e3);\r\n                    });\r\n                });\r\n            });\r\n\r\n            getBaseName(options.currentFilePath)\r\n            .then(name => {\r\n                this.fileNameInputRef.current.focus();\r\n                this.setState({inputFileName: name});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                // NOTE: ignore error\r\n                // alertWrap(e); // TODO: await it.\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFileListItemClick(ev, name, isDir) {\r\n        if (isDir) {\r\n            this.fileNameInputRef.current.focus();\r\n\r\n            listDirectory(this.state.currentDir, name)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            .catch(e => {\r\n                // TODO: await it.\r\n                alertWrap(e);\r\n            });\r\n        } else {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: name});\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleOkClick(ev) {\r\n        try {\r\n            if (this.state.inputFileName.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            let fileName = this.state.inputFileName;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (ext === '' && selectedType) {\r\n                fileName += selectedType.exts[0] || '';\r\n            } else if (! selectedType.exts.filter(x => x === ext)[0]) {\r\n                fileName += selectedType.exts[0] || '';\r\n            }\r\n\r\n            if (await fileExists(this.state.currentDir, fileName)) {\r\n                if (! await confirmWrap('Are you sure want to overwrite the existing file?')) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.handler(this.state.currentDir, fileName);\r\n\r\n            document.activeElement.blur();\r\n            this.dialogRef.current.close();\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n        }\r\n    }\r\n\r\n    getFilteredCurrentDirFiles() {\r\n        return this.state.currentDirFiles.filter(x => {\r\n            if (x.isDirectory) {\r\n                return true;\r\n            }\r\n            let fileName = x.name;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (!selectedType || !selectedType.exts || selectedType.exts.length === 0) {\r\n                return true;\r\n            }\r\n            return (selectedType.exts.filter(z => z === ext)[0]);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 ${this.state.title})\r\n            (div ${this.state.currentDir})\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\") ))\r\n                (div (@ (style (color \"black\")\r\n                               (text-align \"left\")\r\n                               (height \"calc(100% - 100px)\")\r\n                               (overflow-x \"auto\")\r\n                               (overflow-y \"scroll\") ))\r\n                    (ul (@ (className \"collection\")\r\n                           (style (margin \"0\")) )\r\n                        ($=for ${this.getFilteredCurrentDirFiles()}\r\n                            (li (@ (key $index)\r\n                                   (className \"collection-item\"))\r\n                                (a (@ (onClick (|-> (ev) use ($data)\r\n                                          (${(ev, name, isDir) => this.handleFileListItemClick(ev, name, isDir)}\r\n                                              ev ::$data:name ::$data:isDirectory )))\r\n                                      (style (cursor \"pointer\")\r\n                                             (color \"inherit\")\r\n                                             (text-decoration \"none\") ))\r\n                                    (i (@ (className \"material-icons tiny\")\r\n                                          (style (margin \"0 10px 10px 10px\")) )\r\n                                        ($if ::$data:isDirectory \"folder\" \"insert_drive_file\") )\r\n                                    ::$data:name )) )))\r\n                (div (@ (className \"row\"))\r\n                    (div (@ (className \"input-field col s10\"))\r\n                        (label \"File name\")\r\n                        (input (@ (ref ${this.fileNameInputRef})\r\n                                  (style (color \"white\"))\r\n                                  (type \"text\")\r\n                                  (spellcheck \"false\")\r\n                                  (onChange ${() => this.setState({inputFileName: this.fileNameInputRef.current.value})})\r\n                                  (value ${this.state.inputFileName}) )))\r\n                    (div (@ (className \"input-field col s2\"))\r\n                        (select (@ (ref ${this.fileTypeSelectorRef})\r\n                                   (className \"browser-default\")\r\n                                   (onChange ${() => this.setState({selectedFileType: this.fileTypeSelectorRef.current.value})}) )\r\n                            ($=for ${this.state.fileTypes}\r\n                                (option (@ (key   ::$data:value)\r\n                                           (value ::$data:value)\r\n                                           (($if (== ${this.state.selectedFileType} ::$data:value)\r\n                                               \"selected\" \"data-x-no-selected\" )))\r\n                                    ::$data:text ))))))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport default class SettingsDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.showFields = false;\r\n        this.state.fontFamily = void 0;\r\n        this.state.fontSize = 14;\r\n        this.state.useSoftTabs = true,\r\n        this.state.tabSize = 4;\r\n        this.state.wrap = false;\r\n        this.state.showInvisibles = false;\r\n        this.state.darkThemePreview = false;\r\n        this.state.theme = 'monokai';\r\n\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.dialogRef.current.showModal();\r\n        document.activeElement.blur();\r\n        this.options = options;\r\n        this.handler = handler;\r\n        this.setState({\r\n            showFields: false,\r\n            fontFamily: options.editor.fontFamily,\r\n            fontSize: options.editor.fontSize > 0 ? options.editor.fontSize : 14,\r\n            useSoftTabs: !!options.editor.useSoftTabs,\r\n            tabSize: options.editor.tabSize,\r\n            wrap: options.editor.wrap === 'off' ? false : (options.editor.wrap === 'free'),\r\n            showInvisibles: !!options.editor.showInvisibles,\r\n            theme: (options.editor.theme || '').replace('ace/theme/', ''),\r\n            darkThemePreview: !!options.renderer.darkThemePreview,\r\n        });\r\n        setTimeout(() => this.setState({showFields: true}), 30);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        M.updateTextFields();\r\n        const elems = document.querySelectorAll('select');\r\n        /* const instances = */ M.FormSelect.init(elems, {});\r\n    }\r\n\r\n    handleFontFamilyChange(ev) {\r\n        this.setState({\r\n            fontFamily: (ev.target.value || '').trim() === '' ? null : ev.target.value,\r\n        });\r\n    }\r\n\r\n    handleFontSizeChange(ev) {\r\n        this.setState({\r\n            fontSize: ev.target.value,\r\n        });\r\n    }\r\n\r\n    handleTabSizeChange(ev) {\r\n        this.setState({\r\n            tabSize: Math.floor(Number(ev.target.value)),\r\n        });\r\n    }\r\n\r\n    handleSoftTabsChange(ev) {\r\n        this.setState({\r\n            useSoftTabs: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleWrapChange(ev) {\r\n        this.setState({\r\n            wrap: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleShowInvisiblesChange(ev) {\r\n        this.setState({\r\n            showInvisibles: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleDarkThemePreviewChange(ev) {\r\n        this.setState({\r\n            darkThemePreview: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    handleThemeChange(ev) {\r\n        this.setState({\r\n            theme: ev.target.value,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleOkClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n\r\n        const fontSize = Number(this.state.fontSize);\r\n        this.handler({\r\n            editor: {\r\n                fontFamily: this.state.fontFamily,\r\n                fontSize: fontSize > 0 ? fontSize : 14,\r\n                useSoftTabs: this.state.useSoftTabs,\r\n                tabSize: this.state.tabSize > 0 ? this.state.tabSize : 4,\r\n                wrap: this.state.wrap,\r\n                showInvisibles: this.state.showInvisibles,\r\n                theme: `ace/theme/${this.state.theme}`,\r\n            },\r\n            renderer: {\r\n                darkThemePreview: this.state.darkThemePreview,\r\n            },\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (className \"appSettingsDialog-root\")\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (style (@ (dangerouslySetInnerHTML \"\"\"$concat\r\n                .appSettingsDialog-root .select-wrapper input {\r\n                    color: white;\r\n                }\r\n                .appSettingsDialog-root .select-wrapper svg.caret {\r\n                    fill: white;\r\n                }\r\n                \"\"\") ))\r\n            (h5 \"Settings\")\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\")\r\n                           (paddingTop \"20px\") ))\r\n                ($if ${this.state.showFields} (form\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s12\"))\r\n                            (input (@ (id \"appSettingsDialog-fontFamily\")\r\n                                      (type \"text\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.fontFamily})\r\n                                      (onChange ${(ev) => this.handleFontFamilyChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-fontFamily\"))\r\n                                \"Font family (e.g. Consolas, 'Migu 1M', monospace)\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (input (@ (id \"appSettingsDialog-fontSize\")\r\n                                      (type \"number\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.fontSize})\r\n                                      (onChange ${(ev) => this.handleFontSizeChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-fontSize\"))\r\n                                \"Font size (in points)\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (input (@ (id \"appSettingsDialog-tabSize\")\r\n                                      (type \"number\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.tabSize})\r\n                                      (onChange ${(ev) => this.handleTabSizeChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-tabSize\"))\r\n                                \"Tab size\") )\r\n                        (div (@ (className \"input-field col s4\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.useSoftTabs ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleSoftTabsChange(ev)}) ))\r\n                                (span \"Soft tabs\") )))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s4\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.wrap ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleWrapChange(ev)}) ))\r\n                                (span \"Wrap\") ))\r\n                        (div (@ (className \"input-field col s4\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.showInvisibles ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleShowInvisiblesChange(ev)}) ))\r\n                                (span \"Show Invisibles\") ))\r\n                        (div (@ (className \"input-field col s4\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.darkThemePreview ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleDarkThemePreviewChange(ev)}) ))\r\n                                (span \"Preview in dark theme\") )))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"40px 0 0 0\")\r\n                                   (color \"white\") ))\r\n                        (div (@ (className \"input-field col s12\"))\r\n                            (select (@ (id \"appSettingsDialog-theme\")\r\n                                       (onChange ${(ev) => this.handleThemeChange(ev)}) )\r\n                                (option (@ (value \"monokai\")\r\n                                           (selected ${this.state.theme === 'monokai' ? 'selected' : ''})) \"Monokai\")\r\n                                (option (@ (value \"cobalt\")\r\n                                           (selected ${this.state.theme === 'cobalt' ? 'selected' : ''})) \"Cobalt\")\r\n                                (option (@ (value \"terminal\")\r\n                                           (selected ${this.state.theme === 'terminal' ? 'selected' : ''})) \"Terminal\")\r\n                                (option (@ (value \"tomorrow_night_bright\")\r\n                                           (selected ${this.state.theme === 'tomorrow_night_bright' ? 'selected' : ''})) \"Tomorrow Night Bright\")\r\n                                (option (@ (value \"chrome\")\r\n                                           (selected ${this.state.theme === 'chrome' ? 'selected' : ''})) \"Chrome\")\r\n                                (option (@ (value \"kuroir\")\r\n                                           (selected ${this.state.theme === 'kuroir' ? 'selected' : ''})) \"Kuroir\")\r\n                                (option (@ (value \"textmate\")\r\n                                           (selected ${this.state.theme === 'textmate' ? 'selected' : ''})) \"Textmate\") )\r\n                            (label (@ (for \"appSettingsDialog-theme\"))\r\n                                \"Theme\") )) )))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const MenuItem = ({icon, caption, onClick}) => {\r\n    return (lsx`\r\n        (li (a (@ (onClick ${onClick}))\r\n            (i (@ (className \"material-icons\")) ${icon})\r\n            ${caption} ))`\r\n    );\r\n};\r\n\r\n\r\nexport const MenuDivider = () => {\r\n    return (lsx`(li (@ (className \"divider\") (tabIndex -1)))`);\r\n};\r\n\r\n\r\nexport const Switch = ({caption, offText, onText, elClass, checked, onClick}) => {\r\n    return (lsx`\r\n        (div (@ (className (\"switch\" ${elClass ? elClass : ''})))\r\n            (label ${caption})(br)\r\n            (label\r\n                ${offText}\r\n                (input (@ (type \"checkbox\")\r\n                          (checked ${checked})\r\n                          (onClick ${onClick}) ))\r\n                (span  (@ (className \"lever\")))\r\n                ${onText} ))`\r\n    );\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { renderByMenneu } from './backend-api.js';\r\n\r\n\r\n\r\nconst start = (async (text, cf, data, srcPath, ...exportPath) => {\r\n    return await renderByMenneu(text, data, Object.assign({\r\n        inputFormat: 'md',\r\n        dataFormat: 'object',\r\n    }, cf || {}), srcPath, ...exportPath);\r\n});\r\n\r\nexport default start;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const escapeHtml = (s) => s\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\")\r\n    .replace(/'/g, \"&#39;\");\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { loadFile,\r\n         pathJoin,\r\n         getDirName,\r\n         openURL,\r\n         openNewWindow } from '../backend-api.js';\r\nimport AppState          from '../appstate.js';\r\nimport { isPreviewable } from '../modes.js';\r\nimport { backend }       from '../remote.js';\r\n\r\n\r\n\r\nexport function getSuggests() {\r\n    return {\r\n        'new-window': null,\r\n        'open': null,\r\n        'open \"path/to/file/opening\"': null,\r\n        'save': null,\r\n        'saveas': null,\r\n        'saveas \"path/to/file/to/save/as\"': null,\r\n        'export': null,\r\n        'export \"path/to/file/to/export\"': null,\r\n        'preview': null,\r\n        'sync on': null,\r\n        'sync off': null,\r\n        'preview-format pdf': null,\r\n        'preview-format html': null,\r\n        'scripting on': null,\r\n        'scripting off': null,\r\n        'entire-text': null,\r\n        'selected-text': null,\r\n        'insert \"text\"': null,\r\n        '$resolve-pipe ($> ls -al) (<- insert) (-> () nil)': null,\r\n        '$> some-shell-cmd cmd-options': null,\r\n        'help': null,\r\n        'help topic-name': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({app}) {\r\n    return ([\r\n        {\r\n            name: 'new-window',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                openNewWindow();\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'open',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    const fullPath = await pathJoin(dirName, filePath);\r\n                    const text = await loadFile(fullPath);\r\n                    app.fileDropDialogRef.current.openFile(fullPath, text);\r\n\r\n                    app.afterFileOpen();\r\n                    return '';\r\n                } else {\r\n                    app.handleFileOpenClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'save',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                app.handleSaveClick({});\r\n                return 'Saving...';\r\n            },\r\n        }, {\r\n            name: 'saveas',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    await app.fileSaveAs(dirName, filePath);\r\n                    return 'Saved.';\r\n                } else {\r\n                    app.handleSaveAsClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'export',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (! isPreviewable(AppState.inputFormat)) {\r\n                    throw new Error(`Exporting of ${AppState.inputFormat} format is not supported.`);\r\n                }\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    await app.fileExport(dirName, filePath);\r\n                    return 'Exported.';\r\n                } else {\r\n                    app.handleExportClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'preview',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                app.handleShowClick({});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'sync',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (onoff) => {\r\n                app.setState({syncPreview: onoff === 'on' || onoff === true});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'preview-format',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (format) => {\r\n                app.setState({isPdf: format === 'pdf'});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'scripting',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (onoff) => {\r\n                app.setState({useScripting: onoff === 'on' || onoff === true});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'entire-text',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.getEntireText(text);\r\n            },\r\n        }, {\r\n            name: 'selected-text',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.getSelectedText(text);\r\n            },\r\n        }, {\r\n            name: 'insert',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.insertText(text);\r\n            },\r\n        }, {\r\n            name: '$>',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...commands) => {\r\n                return backend().runCommandAST([[{'symbol': '$>'}, commands.join(' ')]]);\r\n            },\r\n        }, {\r\n            name: 'help',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (topic) => {\r\n                openURL('https://github.com/shellyln/mdne');\r\n                return '';\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../appstate.js';\r\nimport { getAceEditorMode }      from '../modes.js';\r\n\r\n\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport function getSuggests() {\r\n    return {\r\n        'mode md': null,\r\n        'mode html': null,\r\n        'mode lisp': null,\r\n        'mode tex': null,\r\n        'mode latex': null,\r\n        'mode css': null,\r\n        'mode less': null,\r\n        'mode sass': null,\r\n        'mode scss': null,\r\n        'mode json': null,\r\n        'mode json5': null,\r\n        'mode js': null,\r\n        'mode jsx': null,\r\n        'mode ts': null,\r\n        'mode tsx': null,\r\n        'mode svg': null,\r\n        'mode xml': null,\r\n        'mode yaml': null,\r\n        'mode toml': null,\r\n        'mode ini': null,\r\n        'mode graphql': null,\r\n        'mode protobuf': null,\r\n        'mode sql': null,\r\n        'mode csharp': null,\r\n        'mode golang': null,\r\n        'mode ruby': null,\r\n        'mode rust': null,\r\n        'mode python': null,\r\n        'mode java': null,\r\n        'mode kotlin': null,\r\n        'mode r': null,\r\n        'mode sh': null,\r\n        'mode dockerfile': null,\r\n        'mode makefile': null,\r\n        'mode text': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({getCurrentAceId}) {\r\n    return ([\r\n        {\r\n            name: 'mode',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (modeName) => {\r\n                if (!modeName) {\r\n                    throw new Error('Editor mode name is not specified.');\r\n                }\r\n                AppState.inputFormat = modeName;\r\n                const aceMode = getAceEditorMode(modeName);\r\n                if (aceMode) {\r\n                    const editor = AppState.AceEditor[getCurrentAceId()];\r\n                    editor.session.setMode(aceMode);\r\n\r\n                    updateAppIndicatorBar();\r\n                    AppState.invalidate();\r\n\r\n                    return '';\r\n                } else {\r\n                    throw new Error('Invalid editor mode name: ' + modeName);\r\n                }\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AppState from '../appstate.js';\r\n\r\n\r\n\r\nexport function getSuggests() {\r\n    return {\r\n        'md table rows cols': null,\r\n        'md list rows': null,\r\n        'md o-list rows': null,\r\n        'md checkbox rows': null,\r\n        'md blockquote': null,\r\n        'md link': null,\r\n        'md image': null,\r\n        'md toc': null,\r\n        'md hr': null,\r\n        'md math': null,\r\n        'md inline-math': null,\r\n        'md mathjax': null,\r\n        'md code': null,\r\n        'md inline-code': null,\r\n        'md uml': null,\r\n        'md emoji': null,\r\n        'md italic': null,\r\n        'md italic-alt': null,\r\n        'md bold': null,\r\n        'md bold-alt': null,\r\n        'md strikethru': null,\r\n        'md mark': null,\r\n        'md ins': null,\r\n        'md footnote': null,\r\n        'md inline-footnote': null,\r\n        'md deflist': null,\r\n        'md lazy-deflist': null,\r\n        'md abbr': null,\r\n        'md pagebreak': null,\r\n        'md h1': null,\r\n        'md h1-no-toc': null,\r\n        'md h2': null,\r\n        'md h2-no-toc': null,\r\n        'md h3': null,\r\n        'md h4': null,\r\n        'md h5': null,\r\n        'md h6': null,\r\n        'md style': null,\r\n        'md comment': null,\r\n        'md char-entity-ref': null,\r\n        'md escape': null,\r\n        'md embedded-image': null,\r\n        'md embedded-uml': null,\r\n        'md embedded-style': null,\r\n        'md svg': null,\r\n        'md canvas': null,\r\n        'md line': null,\r\n        'md rect': null,\r\n        'md roundrect': null,\r\n        'md qr': null,\r\n        'md code128': null,\r\n        'md code39': null,\r\n        'md gtin13': null,\r\n        'md gtin8': null,\r\n        'md print-preview': null,\r\n        'md html5': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({getCurrentAceId}) {\r\n    return ([\r\n        {\r\n            name: 'md',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                switch (args[0]) {\r\n                case 'table':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        const cols = Math.max(1, Number(args[2] || 3));\r\n                        let s = `\\n|${Array(cols).fill('').map((_, i) => `R_C${i}`).join('|')}|\\n|${\r\n                                    // eslint-disable-next-line no-unused-vars\r\n                                    Array(cols).fill('').map((_, i) => '----').join('|')}|\\n`;\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `|${Array(cols).fill('').map((_, i) => `R${r}C${i}`).join('|')}|\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'list':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `* item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'o-list':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `1. item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'checkbox':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `* [${r % 2 === 0 ? 'X' : ' '}] item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'blockquote': case 'quote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n> This is blockquote.\\n>> This is blockquote.\\n');\r\n                    }\r\n                    return '';\r\n                case 'link':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n[This is inline-style link with title](https://github.com/shellyln/mdne \"mdne\")\\n');\r\n                    }\r\n                    return '';\r\n                case 'image':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n![alt text](https://shellyln.github.io/assets/image/mdne-logo.svg \"Logo\" =300x100)\\n');\r\n                    }\r\n                    return '';\r\n                case 'toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n[[TOC]]\\n');\r\n                    }\r\n                    return '';\r\n                case 'hr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n----\\n');\r\n                    }\r\n                    return '';\r\n                case 'math':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n$$$\\nsum_(i=1)^n i^3=((n(n+1))/2)^2\\n$$$\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-math':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' $$sum_(i=1)^n i^3=((n(n+1))/2)^2$$ ');\r\n                    }\r\n                    return '';\r\n                case 'mathjax':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"' +\r\n                            ' crossorigin=\"anonymous\"></script>\\n');\r\n                    }\r\n                    return '';\r\n                case 'code':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n```javascript\\n\\nconst x = 0;\\n\\n```\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-code':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' `const x = 0` ');\r\n                    }\r\n                    return '';\r\n                case 'uml':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n@startuml\\n' +\r\n                            'Alice -> Bob: Authentication Request\\n' +\r\n                            'Bob --> Alice: Authentication Response\\n\\n' +\r\n                            'Alice -> Bob: Another authentication Request\\n' +\r\n                            'Alice <-- Bob: Another authentication Response\\n' +\r\n                            '@enduml\\n');\r\n                    }\r\n                    return '';\r\n                case 'emoji':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            ' :wink: :crush: :cry: :tear: :laughing: :yum: ');\r\n                    }\r\n                    return '';\r\n                case 'italic':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' *This is italic* ');\r\n                    }\r\n                    return '';\r\n                case 'italic-alt':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' _This is italic_ ');\r\n                    }\r\n                    return '';\r\n                case 'bold':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' **This is bold** ');\r\n                    }\r\n                    return '';\r\n                case 'bold-alt':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' __This is bold__ ');\r\n                    }\r\n                    return '';\r\n                case 'strikethrough': case 'strikethru':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ~~This is strikethrough~~ ');\r\n                    }\r\n                    return '';\r\n                case 'mark':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ==This is mark== ');\r\n                    }\r\n                    return '';\r\n                case 'ins':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ++This is ins++ ');\r\n                    }\r\n                    return '';\r\n                case 'footnote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is footnote 1 link[^first].\\n[^first]: Footnote text.\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-footnote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is inline footnote^[Text of inline footnote.].\\n');\r\n                    }\r\n                    return '';\r\n                case 'deflist':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nTerm 1\\n    ~ Definition 1a\\n    ~ Definition 1b\\n');\r\n                    }\r\n                    return '';\r\n                case 'lazy-deflist':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nTerm 1\\n:   Definition 1a\\nwith lazy continuation.\\n\\n' +\r\n                            '    paragraph 1\\n\\n        { code block }\\n    paragraph 3\\n' +\r\n                            ':   Definition 1b\\n\\n');\r\n                    }\r\n                    return '';\r\n                case 'abbr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is HTML abbreviation example.\\n*[HTML]: Hyper Text Markup Language\\n');\r\n                    }\r\n                    return '';\r\n                case 'pagebreak':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<div style=\"page-break-before:always\"></div>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h1':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n# This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h1-no-toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<p style=\"font-size: 2em; font-weight: bold; ' +\r\n                            'border-bottom: 1px solid #eaecef; padding-bottom: .3em;\">' +\r\n                            'This is a header.</p>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h2':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n## This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h2-no-toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<p style=\"font-size: 1.5em; font-weight: bold; ' +\r\n                            'border-bottom: 1px solid #eaecef; padding-bottom: .3em;\">' +\r\n                            'This is a header.</p>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h3':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h4':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n#### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h5':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n##### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h6':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n###### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'style':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<style>h4 { background-color: cyan; }</style>\\n');\r\n                    }\r\n                    return '';\r\n                case 'comment':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n<!-- This is a comment. -->\\n');\r\n                    }\r\n                    return '';\r\n                case 'char-entity-ref':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n&amp;&lt;&gt;&quot;&apos;&nbsp;\\n' +\r\n                            '&sup3;&frac34;&plusmn;&times;&divide;&para;&sect;&middot;&laquo;&raquo;\\n' +\r\n                            '&copy;&reg;&trade;&yen;&euro;$&curren;&pound;&cent;\\n');\r\n                    }\r\n                    return '';\r\n                case 'escape':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n\\\\<style>h5 { background-color: cyan; }\\\\</style>\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-image':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Image(@(src\"https://shellyln.github.io/assets/image/mdne-logo.svg\")(width 300)(height 100)(unit \"px\")(alt \"Logo\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-uml':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(PlantUml \"\"\"\\n' +\r\n                            'Alice -> Bob: Authentication Request\\n' +\r\n                            'Bob --> Alice: Authentication Response\\n\\n' +\r\n                            'Alice -> Bob: Another authentication Request\\n' +\r\n                            'Alice <-- Bob: Another authentication Response\\n' +\r\n                            '\"\"\")\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-style':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Style(@(src\"https://shellyln.github.io/menneu/assets/style/playground.css\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'svg':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Svg (@ (width 100)(height 100)(unit \"mm\"))\\n\\n)\\n');\r\n                    }\r\n                    return '';\r\n                case 'canvas':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Canvas (-> (ctx) (::ctx@moveTo  10  10)\\n' +\r\n                            '                  (::ctx@lineTo 190 190)\\n' +\r\n                            '                  (::ctx:strokeStyle=\"rgba(255,128,0,0.2)\")\\n' +\r\n                            '                  (::ctx@stroke)\\n' +\r\n                            '                  (::ctx@beginPath) ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'line':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Line (@(x 0)(y 0)(lineWidth 1)(stroke)(strokeColor \"blue\")' +\r\n                            '(points ($list 10 10 20 40 30 90 ))))\\n');\r\n                    }\r\n                    return '';\r\n                case 'rect':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Rect(@(x 5)(y 5)(width 70)(height 20)(lineWidth 3)' +\r\n                            '(stroke)(strokeColor \"blue\")(fill)(fillColor \"darkblue\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'roundrect':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(RoundRect(@(x 5)(y 5)(width 70)(height 20)(lineWidth 3)(r 3)' +\r\n                            '(stroke)(strokeColor \"blue\")(fill)(fillColor \"darkblue\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'qr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Qr (@ (x 5)(y 7)(cellSize 0.8)(fill)(fillColor \"darkblue\")(data \"Hello\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'code128':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Code128 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '            (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"Hello\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'code39':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Code39 (@ (x 5)(y 7)(narrowWidth 0.66)(wideWidth 1.32)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '           (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"HELLO\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'gtin13':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Gtin13 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '           (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"123456789012\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'gtin8':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Gtin8 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '          (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"1234567\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'print-preview':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '<script>window.print()</script>');\r\n                    }\r\n                    return '';\r\n                case 'html5':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '(Html5\\n' +\r\n                            '(head (title \"Untitled\")\\n' +\r\n                            '      (meta (@ (charset \"UTF-8\")))\\n' +\r\n                            '      (NormalizeCss)\\n' +\r\n                            '      (PaperCss)\\n' +\r\n                            '\\n' +\r\n                            '    (style (@ (dangerouslySetInnerHTML \"\"\"$concat\\n' +\r\n                            '        /* You can write additional styles here. */\\n' +\r\n                            '        /*\\n' +\r\n                            '        body {\\n' +\r\n                            '            background-color: blue;\\n' +\r\n                            '        }\\n' +\r\n                            '        */\\n' +\r\n                            '    \"\"\") )))\\n' +\r\n                            '\\n' +\r\n                            '(body (@ (class \"A4\"))\\n' +\r\n                            '    (section (@ (class \"sheet padding-10mm\"))\\n' +\r\n                            '        Hello!\\n' +\r\n                            '        )))\\n');\r\n                    }\r\n                    return '';\r\n                default:\r\n                    return '';\r\n                }\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeConfirmSync,\r\n         saveFile,\r\n         getStartupFile,\r\n         openURL,\r\n         openNewWindow }         from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap,\r\n         confirmWrap }           from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport start                     from '../libs/start.js';\r\nimport { getInputFormat,\r\n         isPreviewable,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\nimport { escapeHtml }            from '../libs/escape.js';\r\nimport commandRunner             from '../libs/cmdrunner.js';\r\nimport { saveAsFilter,\r\n         exportFilter }          from '../libs/filefilters';\r\n\r\nimport { getSuggests as getAppSuggests,\r\n         getOperators as getAppOperators }  from '../libs/commands/app.js';\r\nimport { getSuggests as getModeSuggests,\r\n         getOperators as getModeOperators } from '../libs/commands/mode.js';\r\nimport { getSuggests as getMdSuggests,\r\n         getOperators as getMdOperators }   from '../libs/commands/md.js';\r\n\r\n\r\n\r\nconst LOCAL_STORAGE_KEY = '_mdne_app_settings__Xlnuf3Ao';\r\nconst LOCAL_STORAGE_VERSION = 2;\r\nconst LOCAL_STORAGE_INITIAL = `{\"version\":${LOCAL_STORAGE_VERSION},\"editor\":{},\"renderer\":{}}`;\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.stretched = true;\r\n        this.state.syncPreview = false;\r\n        this.state.isPdf = false;\r\n        this.state.useScripting = false;\r\n        this.state.currentAceId = 'editor';\r\n        this.state.splitterMoving = false;\r\n        this.state.darkThemePreview = false;\r\n        this.state.counter = 0;\r\n\r\n        this.aceFontSize = 14;\r\n        this.scheduleRerenderPreview = false;\r\n        this.savedEditorStyleWidth = null;\r\n        this.savedPreviewScrollY = 0;\r\n\r\n        this.commandBoxRef = React.createRef();\r\n        this.editorRef = React.createRef();\r\n        this.editorPlaceholderRef = React.createRef();\r\n        this.splitterRef = React.createRef();\r\n        this.rootRef = React.createRef();\r\n        this.fileDropDialogRef = React.createRef();\r\n        this.fileOpenDialogRef = React.createRef();\r\n        this.fileSaveDialogRef = React.createRef();\r\n        this.settingsDialogRef = React.createRef();\r\n\r\n        AppState.invalidate = () => this.setState({counter: this.state.counter + 1});\r\n\r\n        window.onbeforeunload = (ev) => {\r\n            // TODO: check all Ace editors\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            const isClean = editor.session.getUndoManager().isClean();\r\n            if (! isClean) {\r\n                if (nativeConfirmSync) {\r\n                    // NOTE: do not show prompt here on electron environment.\r\n                } else {\r\n                    ev.preventDefault(); \r\n                    return '';\r\n                }\r\n            }\r\n            return void 0;\r\n        }\r\n\r\n        commandRunner.install(config => {\r\n            const getCurrentAceId = () => this.state.currentAceId;\r\n            const operators = [\r\n                ...getAppOperators({app: this}),\r\n                ...getModeOperators({getCurrentAceId}),\r\n                ...getMdOperators({getCurrentAceId}),\r\n            ];\r\n            config.funcs = (config.funcs || []).concat(operators);\r\n            // config.macros = (config.macros || []).concat(macros);\r\n            // config.symbols = (config.symbols || []).concat(symbols);\r\n            return config;\r\n        });\r\n        // commandRunner.setGlobals({});\r\n    }\r\n\r\n    componentDidMount() {\r\n        {\r\n            const elems = document.querySelectorAll('.dropdown-trigger');\r\n            /* const instances = */ M.Dropdown.init(elems, {\r\n                constrainWidth: false,\r\n            });\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('.tooltipped');\r\n            /* const instances = */ M.Tooltip.init(elems, {});\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('select');\r\n            /* const instances = */ M.FormSelect.init(elems, {});\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('.command-box-input.autocomplete');\r\n            /* const instances = */ M.Autocomplete.init(elems, {\r\n                data: Object.assign(\r\n                    getAppSuggests(),\r\n                    getModeSuggests(),\r\n                    getMdSuggests(),\r\n                ),\r\n            });\r\n        }\r\n        if (window.dialogPolyfill) {\r\n            // initialize polyfill emulated elements\r\n            const dialogs = document.querySelectorAll('dialog');\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                const dialog = dialogs[i];\r\n                dialogPolyfill.registerDialog(dialog);\r\n            }\r\n        }\r\n\r\n        {\r\n            const appSettingsStr = window.localStorage.getItem(LOCAL_STORAGE_KEY) || LOCAL_STORAGE_INITIAL;\r\n            const appSettings = JSON.parse(appSettingsStr);\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.setOptions(appSettings.editor ?? {});\r\n            this.setState({\r\n                darkThemePreview: appSettings?.renderer?.darkThemePreview ?? false,\r\n            });\r\n        }\r\n\r\n        document.onkeyup = (ev) => {\r\n            if (ev.ctrlKey && ev.shiftKey && ev.keyCode === 79) {\r\n                // Ctrl+Shift+O\r\n                this.commandBoxRef.current.focus();\r\n            }\r\n        };\r\n\r\n        const setEditorNewFile = () => {\r\n            AppState.inputFormat = 'md';\r\n            notifyEditorDirty(false);\r\n\r\n            updateAppIndicatorBar();\r\n\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.clearSelection();\r\n            editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n            editor.setValue('');\r\n            editor.clearSelection();\r\n            editor.session.getUndoManager().markClean();\r\n\r\n            this.setState({counter: this.state.counter + 1});\r\n        };\r\n\r\n        getStartupFile()\r\n        .then(file => {\r\n            if (file) {\r\n                AppState.filePath = file.path;\r\n                AppState.inputFormat = getInputFormat(AppState.filePath);\r\n                notifyEditorDirty(false);\r\n    \r\n                updateAppIndicatorBar();\r\n    \r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.clearSelection();\r\n                editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n                editor.setValue(file.text);\r\n                editor.clearSelection();\r\n                editor.session.getUndoManager().markClean();\r\n                editor.moveCursorTo(0, 0);\r\n\r\n                this.setState({counter: this.state.counter + 1});\r\n            } else {\r\n                setEditorNewFile();\r\n                this.openFileOpenDialog();\r\n            }\r\n        })\r\n        // eslint-disable-next-line no-unused-vars\r\n        .catch(e => {\r\n            setEditorNewFile();\r\n            this.openFileOpenDialog();\r\n        });\r\n    }\r\n\r\n    afterFileOpen() {\r\n        this.rootRef.current.contentWindow.location.replace('empty.html');\r\n\r\n        this.setState({stretched: true});\r\n        this.savedEditorStyleWidth = null;\r\n        this.savedPreviewScrollY = 0;\r\n        this.editorRef.current.outerWrapRef.current.style.width = null;\r\n        this.editorPlaceholderRef.current.style.width = null;\r\n\r\n        document.activeElement.blur();\r\n\r\n        setTimeout(() => {\r\n            // adjust wrapping and horizontal scroll bar\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.resize(true);\r\n        }, 30);\r\n    }\r\n\r\n    openFileOpenDialog() {\r\n        this.fileDropDialogRef.current.showModal({\r\n            aceId: this.state.currentAceId,\r\n            fileOpenDialog: this.fileOpenDialogRef.current,\r\n        }, () => this.afterFileOpen());\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleFileOpenClick(ev) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        const isClean = editor.session.getUndoManager().isClean();\r\n        if (! isClean) {\r\n            if (! await confirmWrap('Changes you made may not be saved.\\nAre you sure want to discard changes?')) {\r\n                return;\r\n            }\r\n        }\r\n        this.openFileOpenDialog();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleStretchedClick(ev) {\r\n        this.setState({stretched: !this.state.stretched});\r\n        if (this.state.stretched) {\r\n            // collapsed\r\n            this.editorRef.current.outerWrapRef.current.style.width = this.savedEditorStyleWidth;\r\n            this.editorPlaceholderRef.current.style.width = this.savedEditorStyleWidth;\r\n            setTimeout(() => this.rootRef.current.contentWindow.scrollTo(\r\n                this.rootRef.current.contentWindow.scrollX,\r\n                this.savedPreviewScrollY,\r\n            ), 30);\r\n        } else {\r\n            // stretched\r\n            try {\r\n                this.savedEditorStyleWidth = this.editorRef.current.outerWrapRef.current.style.width;\r\n                this.savedPreviewScrollY = this.rootRef.current.contentWindow.scrollY;\r\n            } catch (e) {\r\n                // NOTE: ignore errors\r\n            }\r\n            this.editorRef.current.outerWrapRef.current.style.width = null;\r\n            this.editorPlaceholderRef.current.style.width = null;\r\n        }\r\n        document.activeElement.blur();\r\n\r\n        setTimeout(() => {\r\n            // adjust wrapping and horizontal scroll bar\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.resize(true);\r\n        }, 30);\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSyncPreviewClick(ev) {\r\n        this.setState({syncPreview: !this.state.syncPreview});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleIsPdfClick(ev) {\r\n        this.setState({isPdf: !this.state.isPdf});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleUseScriptingClick(ev) {\r\n        this.setState({useScripting: !this.state.useScripting});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleShowClick(ev) {\r\n        if (this.state.stretched) {\r\n            this.editorRef.current.outerWrapRef.current.style.width = this.savedEditorStyleWidth;\r\n            this.editorPlaceholderRef.current.style.width = this.savedEditorStyleWidth;\r\n        }\r\n\r\n        if (this.state.isPdf &&\r\n            (window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER ||\r\n             window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN)) {\r\n            // do nothing\r\n        } else {\r\n            this.setState({stretched: false});\r\n        }\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        if (! isPreviewable(AppState.inputFormat)) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`Preview of ${AppState.inputFormat} format is not supported.`);\r\n            this.rootRef.current.contentWindow.location.replace('error.html');\r\n        } else {\r\n            if (this.state.isPdf) {\r\n                start(editor.getValue(), {\r\n                    inputFormat: AppState.inputFormat,\r\n                    outputFormat: 'pdf',\r\n                    rawInput:\r\n                        (AppState.inputFormat !== 'md' &&\r\n                        AppState.inputFormat !== 'html') ||\r\n                            this.state.useScripting ? false : true,\r\n                }, null, AppState.filePath)\r\n                .then(outputUrl => {\r\n                    this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                })\r\n                .catch(async (e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(e);\r\n                    this.rootRef.current.contentWindow.location.replace('error.html');\r\n                });\r\n            } else {\r\n                start(editor.getValue(), {\r\n                    inputFormat: AppState.inputFormat,\r\n                    outputFormat: 'html',\r\n                    rawInput:\r\n                        (AppState.inputFormat !== 'md' &&\r\n                        AppState.inputFormat !== 'html') ||\r\n                            this.state.useScripting ? false : true,\r\n                    darkTheme: this.state.darkThemePreview ? true : false,\r\n                }, null, AppState.filePath)\r\n                .then(outputUrl => {\r\n                    this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                    setTimeout(() => this.rootRef.current.contentWindow.scrollTo(\r\n                        this.rootRef.current.contentWindow.scrollX,\r\n                        Math.min(\r\n                            this.savedPreviewScrollY,\r\n                            this.rootRef.current.contentWindow.document.documentElement?.scrollHeight\r\n                                ?? this.savedPreviewScrollY,\r\n                        ),\r\n                    ), 30);\r\n                })\r\n                .catch(async (e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(e);\r\n                    this.rootRef.current.contentWindow.location.replace('error.html');\r\n                });\r\n            }\r\n\r\n            setTimeout(() => {\r\n                // adjust wrapping and horizontal scroll bar\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.resize(true);\r\n            }, 30);\r\n        }\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    handleSaveClick(ev) {\r\n        if (AppState.filePath) {\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.execCommand('save');\r\n        } else {\r\n            this.handleSaveAsClick(ev);\r\n        }\r\n    }\r\n\r\n    async fileSaveAs(currentDir, fileName) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        const fileInfo = await saveFile(editor.getValue(), currentDir, fileName);\r\n        // eslint-disable-next-line require-atomic-updates\r\n        AppState.filePath = fileInfo.path;\r\n        // eslint-disable-next-line require-atomic-updates\r\n        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n\r\n        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n        editor.session.getUndoManager().markClean();\r\n        notifyEditorDirty(false);\r\n        updateAppIndicatorBar();\r\n\r\n        this.setState({counter: this.state.counter + 1});\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSaveAsClick(ev) {\r\n        this.fileSaveDialogRef.current.showModal({\r\n            title: 'Save as',\r\n            currentAceId: this.state.currentAceId,\r\n            currentFilePath: AppState.filePath,\r\n            forExport: false,\r\n            fileTypes: saveAsFilter,\r\n            intent: 'saveas',\r\n        }, async (currentDir, fileName) => {\r\n            try {\r\n                await this.fileSaveAs(currentDir, fileName);\r\n            } catch (e) {\r\n                await alertWrap(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async fileExport(currentDir, fileName) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        const ext = fileName.lastIndexOf('.') >= 0 ?\r\n            fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n        await start(editor.getValue(), {\r\n            inputFormat: AppState.inputFormat,\r\n            outputFormat: ext === '.pdf' ? 'pdf' : 'html',\r\n            rawInput:\r\n                (AppState.inputFormat !== 'md' &&\r\n                 AppState.inputFormat !== 'html') ||\r\n                    this.state.useScripting ? false : true,\r\n        }, null, AppState.filePath, currentDir, fileName);\r\n    }\r\n\r\n    getEntireText() {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        return editor.getValue();\r\n    }\r\n\r\n    getSelectedText() {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        return editor.getSelectedText();\r\n    }\r\n\r\n    insertText(text) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        editor.session.insert(editor.getCursorPosition(), text);\r\n        return text;\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleExportClick(ev) {\r\n        if (! isPreviewable(AppState.inputFormat)) {\r\n            await alertWrap(`Preview of ${AppState.inputFormat} format is not supported.`);\r\n        } else {\r\n            this.fileSaveDialogRef.current.showModal({\r\n                title: 'Export',\r\n                currentAceId: this.state.currentAceId,\r\n                currentFilePath: AppState.filePath,\r\n                forExport: true,\r\n                fileTypes: exportFilter,\r\n                intent: 'export',\r\n            }, async (currentDir, fileName) => {\r\n                try {\r\n                    await this.fileExport(currentDir, fileName);\r\n                } catch (e) {\r\n                    await alertWrap(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSettingsClick(ev) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        const appSettingsStr = window.localStorage.getItem(LOCAL_STORAGE_KEY) || LOCAL_STORAGE_INITIAL;\r\n\r\n        this.settingsDialogRef.current.showModal(\r\n            {\r\n                editor: editor.getOptions(),\r\n                renderer: JSON.parse(appSettingsStr).renderer ?? {},\r\n            },\r\n            (settings) => {\r\n                settings.version = LOCAL_STORAGE_VERSION;\r\n                editor.setOptions(settings.editor);\r\n                window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(settings));\r\n                this.setState({\r\n                    darkThemePreview: settings?.renderer?.darkThemePreview ?? false,\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleAceEditorOnChange(o) {\r\n        if (! AppState.fileChanged) {\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            if (!(editor.curOp && editor.curOp.command.name)) {\r\n                return;\r\n            }\r\n            notifyEditorDirty(true);\r\n            updateAppIndicatorBar();\r\n            // NOTE: Don't update state!\r\n        }\r\n\r\n        if (!this.state.stretched && this.state.syncPreview && !this.state.isPdf) {\r\n            if (! isPreviewable(AppState.inputFormat)) {\r\n                return;\r\n            }\r\n            if (!this.scheduleRerenderPreview) {\r\n                this.scheduleRerenderPreview = true;\r\n                setTimeout(() => {\r\n                    const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n                    start(editor.getValue(), {\r\n                        inputFormat: AppState.inputFormat,\r\n                        outputFormat: 'html',\r\n                        rawInput:\r\n                            (AppState.inputFormat !== 'md' &&\r\n                             AppState.inputFormat !== 'html') ||\r\n                                this.state.useScripting ? false : true,\r\n                        darkTheme: this.state.darkThemePreview ? true : false,\r\n                    }, null, AppState.filePath)\r\n                    .then(outputUrl => {\r\n                        if (outputUrl.startsWith('data:') || outputUrl.startsWith('blob:')) {\r\n                            // emulation\r\n                            this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                        } else {\r\n                            // carlo\r\n                            this.rootRef.current.contentWindow.location.reload(true);\r\n                        }\r\n                        this.scheduleRerenderPreview = false;\r\n                    })\r\n                    .catch(e => {\r\n                        this.scheduleRerenderPreview = false;\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(e);\r\n                    });\r\n                }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAceEditorOnChangeScrollTop(y, totalHeight) {\r\n        if (!this.state.stretched && !this.state.isPdf) {\r\n            try {\r\n                const w = y / totalHeight;\r\n                const scrollY = this.rootRef.current.contentWindow.document.documentElement.scrollHeight * w;\r\n                this.rootRef.current.contentWindow.scrollTo(\r\n                    this.rootRef.current.contentWindow.scrollX,\r\n                    scrollY,\r\n                );\r\n                this.savedPreviewScrollY = scrollY;\r\n            } catch (e) {\r\n                // emulation\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleAceEditorOnChangeScrollLeft(x) {\r\n        // if (!this.state.stretched && !this.state.isPdf) {\r\n        //     this.rootRef.current.contentWindow.scrollTo(x, this.rootRef.current.contentWindow.scrollTop);\r\n        // }\r\n    }\r\n\r\n    handleCommandBoxOnKeyDown(ev) {\r\n        const clearBox = () => {\r\n            this.commandBoxRef.current.value = '';\r\n            const instance = M.Autocomplete.getInstance(\r\n                document.querySelectorAll('.command-box-input.autocomplete')[0]);\r\n            instance.close();\r\n        };\r\n\r\n        if (ev.keyCode === 13) {\r\n            if (this.commandBoxRef.current.value.trim() === '') {\r\n                clearBox();\r\n            } else {\r\n                const command = `(${this.commandBoxRef.current.value})`;\r\n                commandRunner(command)\r\n                .then(r => {\r\n                    clearBox();\r\n                    if (typeof r === 'string' && r.trim() === '') {\r\n                        return;\r\n                    }\r\n                    if (r === null || r === void 0) {\r\n                        return;\r\n                    }\r\n                    if (Array.isArray(r) && r.length === 0) {\r\n                        return;\r\n                    }\r\n                    M.toast({\r\n                        html: escapeHtml(String(r)).replace(/\\r?\\n/g, '<br>'),\r\n                        classes: 'teal darken-4',\r\n                    });\r\n                })\r\n                .catch(e => {\r\n                    clearBox();\r\n                    M.toast({\r\n                        html: escapeHtml(String(e)),\r\n                        classes: 'red darken-4',\r\n                    });\r\n                });\r\n            }\r\n        } else if (ev.keyCode === 27) {\r\n            clearBox();\r\n            document.activeElement.blur();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCommandBoxOnBlur(ev) {\r\n        M.Toast.dismissAll();\r\n    }\r\n\r\n    handleSplitterOnPointerDown(ev) {\r\n        this.setState({splitterMoving: true});\r\n        const moveHandler = (ev2) => {\r\n            const maxWidth = Math.max(Math.min(ev2.clientX - 5, window.innerWidth - 440), 400);\r\n            const width = `${Math.round(maxWidth / window.innerWidth * 100)}%`;\r\n            this.editorRef.current.outerWrapRef.current.style.width = width;\r\n            this.editorPlaceholderRef.current.style.width = width;\r\n        };\r\n        const upHandler = (ev2) => {\r\n            window.onpointermove = null;\r\n            window.onpointerup = null;\r\n            this.splitterRef.current.releasePointerCapture(ev2.pointerId);\r\n            this.setState({splitterMoving: false});\r\n            setTimeout(() => {\r\n                this.rootRef.current.contentWindow.scrollTo(\r\n                    this.rootRef.current.contentWindow.scrollX,\r\n                    this.savedPreviewScrollY,\r\n                );\r\n\r\n                // adjust wrapping and horizontal scroll bar\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.resize(true);\r\n            }, 30);\r\n        };\r\n        window.onpointermove = moveHandler;\r\n        window.onpointerup = upHandler;\r\n        this.splitterRef.current.setPointerCapture(ev.pointerId);\r\n    }\r\n\r\n    render() {\r\n        const isEmulation = window._MDNE_BACKEND_TYPE === 'BROWSER_EMULATION';\r\n        const ua = window.navigator.userAgent;\r\n        // NOTE: Chromium Edge treats as Chrome.\r\n        const isChrome =\r\n            ua.match(' Chrome/') &&\r\n            !ua.match(' CriOS/') &&\r\n            !ua.match(' OPR/') &&\r\n            !ua.match(' Presto/') &&\r\n            !ua.match(' Vivaldi/') &&\r\n            !ua.match(' Iron Safari/') &&\r\n            !ua.match(' Sleipnir/') &&\r\n            !ua.match(' Mobile Safari/');\r\n\r\n        return (lsx`\r\n        (Template\r\n            (div (@ (className \"AppMainMenuWrap\"))\r\n                (a (@ (className \"AppMainMenu dropdown-trigger btn-floating\")\r\n                      (data-target \"dropdown1\") )\r\n                    (i (@ (className \"AppMainMenuIcon material-icons large\")) \"dehaze\") )\r\n                (ul (@ (id \"dropdown1\")\r\n                       (className \"dropdown-content\") )\r\n                    (MenuItem (@ (icon \"add_box\")\r\n                                 (caption \"New window\")\r\n                                 (onClick ${() => { openNewWindow() }}) ))\r\n                    (MenuItem (@ (icon \"folder_open\")\r\n                                 (caption \"Open...\")\r\n                                 (onClick ${(ev) => this.handleFileOpenClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"save\")\r\n                                 (caption \"Save (Ctrl+S)\")\r\n                                 (onClick ${(ev) => this.handleSaveClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"save\")\r\n                                 (caption \"Save as...\")\r\n                                 (onClick ${(ev) => this.handleSaveAsClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"publish\")\r\n                                 (caption \"Export...\")\r\n                                 (onClick ${(ev) => this.handleExportClick(ev)}) ))\r\n                    (MenuDivider)\r\n                    (MenuItem (@ (icon \"find_in_page\")\r\n                                 (caption \"Find... (Ctrl+F)\")\r\n                                 (onClick ${() => {\r\n                                     const editor = AppState.AceEditor['editor'];\r\n                                     editor.execCommand('find');\r\n                                 }}) ))\r\n                    (MenuDivider)\r\n                    (MenuItem (@ (icon \"settings\")\r\n                                 (caption \"Settings...\")\r\n                                 (onClick ${(ev) => this.handleSettingsClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"help_outline\")\r\n                                 (caption \"Help\")\r\n                                 (onClick ${() => openURL('https://github.com/shellyln/mdne')}) )) )\r\n                (Switch (@ (caption \"Sync preview\")\r\n                           (offText \"OFF\")\r\n                           (onText  \"ON\")\r\n                           (elClass \"hide-on-smallest\")\r\n                           (checked ${this.state.syncPreview})\r\n                           (onClick ${(ev) => this.handleSyncPreviewClick(ev)}) ))\r\n                ($if ${!window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER}\r\n                    (Switch (@ (caption \"Preview format\")\r\n                            (offText \"HTML\")\r\n                            (onText  \"PDF\")\r\n                            (elClass \"hide-on-smallest\")\r\n                            (checked ${this.state.isPdf})\r\n                            (onClick ${(ev) => this.handleIsPdfClick(ev)}) )))\r\n                (Switch (@ (caption \"Scripting\")\r\n                           (offText \"OFF\")\r\n                           (onText  \"ON\")\r\n                           (elClass \"hide-on-smallest\")\r\n                           (checked ${this.state.useScripting})\r\n                           (onClick ${(ev) => this.handleUseScriptingClick(ev)}) ))\r\n                (span (@ (style (flexGrow \"2\"))) \" \")\r\n                (div (@ (className \"row command-box-input-outer\") )\r\n                    (div (@ (className \"input-field col s9 command-box-input-inner\") )\r\n                        (input (@ (ref ${this.commandBoxRef})\r\n                                  (className \"CommandBoxInput command-box-input autocomplete\")\r\n                                  (type \"text\")\r\n                                  (placeholder ($concat\r\n                                      \"Command palette    (\" ${\r\n                                      isEmulation && isChrome ? 'Alt+Ctrl+Shift+O' :'Ctrl+Shift+O'\r\n                                      } \")\" ))\r\n                                  (spellcheck \"false\")\r\n                                  (onBlur ${(ev) => this.handleCommandBoxOnBlur(ev)})\r\n                                  (onKeyDown ${(ev) => this.handleCommandBoxOnKeyDown(ev)}) ))))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px\") )\r\n                           (className \"btn tooltipped\")\r\n                           (data-tooltip \"Update preview\")\r\n                           (onClick ${(ev) => this.handleShowClick(ev)}) )\r\n                    (i (@ (className \"material-icons\")) \"visibility\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px\") )\r\n                           (className \"btn tooltipped\")\r\n                           (data-tooltip \"Toggle preview\")\r\n                           (onClick ${(ev) => this.handleStretchedClick(ev)}) )\r\n                    (i (@ (className \"material-icons\")) \"chrome_reader_mode\") ))\r\n            (div (@ (className \"AppMainContentWrap\"))\r\n                (AceEditor (@ (ref ${this.editorRef})\r\n                              (id \"editor\")\r\n                              (stretched ${this.state.stretched ? true: false})\r\n                              (collapsed ${this.state.splitterMoving ? true: false})\r\n                              (fontSize ${this.aceFontSize})\r\n                              (onSaveAs ${(o) => this.handleSaveAsClick(o)})\r\n                              (onChange ${(o) => this.handleAceEditorOnChange(o)})\r\n                              (onChangeScrollTop ${(y, totalHeight) => this.handleAceEditorOnChangeScrollTop(y, totalHeight)})\r\n                              (onChangeScrollLeft ${(x) => this.handleAceEditorOnChangeScrollLeft(x)}) ))\r\n                (div (@ (ref ${this.editorPlaceholderRef})\r\n                        (className ($concat \"AceEditorPlaceholder\"\r\n                                   ${this.state.splitterMoving ? \"\" : \" collapsed\"}) ) ))\r\n                (div (@ (ref ${this.splitterRef})\r\n                        (className ($concat \"Splitter\"\r\n                                   ${this.state.stretched ? \" collapsed\" : \"\"}))\r\n                        (onPointerDown ${(ev) => this.handleSplitterOnPointerDown(ev)}) ))\r\n                (div (@ (className ($concat \"OutputIframePlaceholder\"\r\n                                   ${this.state.splitterMoving ? \"\" : \" collapsed\"}) ) ))\r\n                (iframe (@ (ref ${this.rootRef})\r\n                           (src \"empty.html\")\r\n                           (style (background-color ${this.state.darkThemePreview && AppState.inputFormat === 'md' ? '#1b1f23' : 'white'}))\r\n                           ; (sandbox \"\")\r\n                           (className ($concat \"OutputIframe\"\r\n                                      ${this.state.stretched || this.state.splitterMoving ? \" collapsed\" : \"\"}) ) ))\r\n                (div (@ (id \"appIndicatorBar\")\r\n                        (className \"AppIndicatorBar\")) \"\") )\r\n            (FileDropDialog (@ (ref ${this.fileDropDialogRef})))\r\n            (FileOpenDialog (@ (ref ${this.fileOpenDialogRef})))\r\n            (FileSaveDialog (@ (ref ${this.fileSaveDialogRef})))\r\n            (SettingsDialog (@ (ref ${this.settingsDialogRef}))) )`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AceEditor       from '../components/aceeditor.js';\r\nimport FileDropDialog  from '../components/filedropdialog.js';\r\nimport FileOpenDialog  from '../components/fileopendialog.js';\r\nimport FileSaveDialog  from '../components/filesavedialog.js';\r\nimport SettingsDialog  from '../components/settingsdialog.js';\r\nimport { MenuItem,\r\n         MenuDivider,\r\n         Switch }      from '../components/ui.js';\r\nimport App             from '../components/app.js';\r\n\r\n\r\n\r\nconst lsx_ = liyad.LSX({\r\n    jsx: React.createElement,\r\n    jsxFlagment: React.Fragment,\r\n    components: {\r\n        AceEditor,\r\n        FileDropDialog,\r\n        FileOpenDialog,\r\n        FileSaveDialog,\r\n        SettingsDialog,\r\n        MenuItem,\r\n        MenuDivider,\r\n        Switch,\r\n        App,\r\n    },\r\n});\r\n\r\nexport default lsx_;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { initBackend } from './libs/remote.js';\nimport lsx_            from './libs/lsx.js';\n\n\n\nwindow.lsx = lsx_;\n\n\n(async () => {\n    await initBackend();\n    ReactDOM.render(lsx`(App)`, document.getElementById('app'));\n})();\n"],"sourceRoot":""}