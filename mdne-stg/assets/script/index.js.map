{"version":3,"sources":["webpack://mdneUI/webpack/bootstrap","webpack://mdneUI/webpack/runtime/define property getters","webpack://mdneUI/webpack/runtime/hasOwnProperty shorthand","webpack://mdneUI/webpack/runtime/make namespace object","webpack://mdneUI/./src.renderer/assets/script/libs/backends/carlo.js","webpack://mdneUI/./src.renderer/assets/script/libs/backends/electron.js","webpack://mdneUI/./src.renderer/assets/script/libs/backends/browser.js","webpack://mdneUI/./src.renderer/assets/script/libs/backend-api.js","webpack://mdneUI/./src.renderer/assets/script/libs/cmdrunner.js","webpack://mdneUI/./src.renderer/assets/script/libs/remote.js","webpack://mdneUI/./src.renderer/assets/script/libs/appstate.js","webpack://mdneUI/./src.renderer/assets/script/libs/backend-wrap.js","webpack://mdneUI/./src.renderer/assets/script/components/aceeditor.js","webpack://mdneUI/./src.renderer/assets/script/libs/modes.js","webpack://mdneUI/./src.renderer/assets/script/components/filedropdialog.js","webpack://mdneUI/./src.renderer/assets/script/components/fileopendialog.js","webpack://mdneUI/./src.renderer/assets/script/components/filesavedialog.js","webpack://mdneUI/./src.renderer/assets/script/components/settingsdialog.js","webpack://mdneUI/./src.renderer/assets/script/components/ui.js","webpack://mdneUI/./src.renderer/assets/script/libs/start.js","webpack://mdneUI/./src.renderer/assets/script/libs/escape.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/app.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/mode.js","webpack://mdneUI/./src.renderer/assets/script/libs/commands/md.js","webpack://mdneUI/./src.renderer/assets/script/components/app.js","webpack://mdneUI/./src.renderer/assets/script/libs/lsx.js","webpack://mdneUI/./src.renderer/assets/script/index.js"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","renderByMenneu_","loadFile_","saveFile_","listDirectory_","listDesktopDirectory_","listHomeDirectory_","fileExists_","pathJoin_","getDirName_","getBaseName_","getStartupFile_","openURL_","openNewWindow_","rpc_","carlo_","window","_MDNE_BACKEND_TYPE","_MDNE_BACKEND_CAPS_NO_PDF_RENDERER","_MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN","renderByMenneu","loadFile","saveFile","listDirectory","listDesktopDirectory","listHomeDirectory","fileExists","pathJoin","getDirName","getBaseName","getStartupFile","openURL","openNewWindow","rpc","carlo","nativeNotifyEditorDirty","nativeNotifyEditorDirty_","nativeAlert","nativeAlert_","nativeAlertSync","nativeAlertSync_","nativeConfirm","nativeConfirm_","nativeConfirmSync","nativeConfirmSync_","nativeFileOpenDialog","nativeFileOpenDialog_","nativeFileSaveDialog","nativeFileSaveDialog_","apiKey","mdneApi","getKey","dirty","send","async","message","type","ipc","ipcSync","title","defaultPath","filters","source","data","options","srcPath","exportPath","filePath","text","dirPath","url","Backend","frontend","this","frontend_","command","ast","backend_","handle","x","loadParams","fileInfo","path","file","fileBodyText","on","event","arg","ret","runCommand","Promise","sender","succeeded","payload","e","error","document","addEventListener","ev","keyCode","preventDefault","welcomeFile","internalSaveFileEx","forExport","p","b","util","menneu","getAppEnv","RedAgateUtil","FileSaver","saveTextAs","location","hash","encodeURIComponent","Base64","encode","pako","deflate","TextEncoding","encodeToUtf8","replace","name","opts","assign","replacementMacros","re","fn","concat","Vx02PGUB3NFWwhsd__replacementMacros","Array","isArray","outputFormat","toLowerCase","errText","Error","bufStr","render","toString","length","resultUrl","URL","createObjectURL","Blob","setTimeout","revokeObjectURL","response","fetch","directory","files","isDirectory","filter","join","a","split","stack","pop","match","push","startsWith","dir","lastIndexOf","substring","targetPath","targetUrl","result","forEach","part","item","decodeURIComponent","indexOf","inflate","decode","ok","open","pathname","LM_async_","config","liyad","defaultConfig","reservedNames","Template","installCore","installArithmetic","installSequence","installConcurrent","stripComments","returnMultipleRoot","SExpressionAsync","setGlobals","install","operators","state","resolve","reject","funcs","evaluateAST","reader","FileReader","onload","onerror","readAsText","backend","carloBackend","electronBackend","browserBackend","commandRunner","AppState","AppName","AceEditor","inputFormat","fileChanged","invalidate","updateAppIndicatorBar","getElementById","innerText","notifyEditorDirty","alertWrap","String","alert","confirmWrap","confirm","React","Component","constructor","props","super","editor","outerWrapRef","createRef","componentDidMount","ace","edit","id","setFontSize","fontSize","setTheme","session","setMode","commands","addCommand","bindKey","win","mac","exec","getValue","getUndoManager","markClean","onSaveAs","onChange","y","onChangeScrollTop","getScreenLength","renderer","lineHeight","onChangeScrollLeft","lsx","stretched","collapsed","getInputFormat","slice","endsWith","isPreviewable","getAceEditorMode","FileDropDialog","dialogRef","showModal","handler","current","activeElement","blur","openFile","aceId","clearSelection","setValue","moveCursorTo","openFileAndClose","close","handleOnDragOver","stopPropagation","i","dataTransfer","paths","all","texts","map","handleCancelClick","fileOpenDialog","currentAceId","currentFilePath","fileTypes","exts","currentDir","fileName","handleOnDrop","handleOnOpenDialogClick","FileOpenDialog","selectedFileType","currentDirFiles","inputFileName","fileNameInputRef","fileTypeSelectorRef","setState","selectedType","filePaths","extensions","t","then","info","catch","e2","e3","handleFileListItemClick","isDir","focus","trim","getFilteredCurrentDirFiles","ext","z","handleOkClick","FileSaveDialog","allFilesType","SettingsDialog","showFields","fontFamily","tabSize","wrap","darkThemePreview","theme","componentDidUpdate","M","updateTextFields","elems","querySelectorAll","FormSelect","init","handleFontFamilyChange","target","handleFontSizeChange","handleTabSizeChange","Math","floor","Number","handleWrapChange","checked","handleDarkThemePreviewChange","handleThemeChange","cf","dataFormat","escapeHtml","s","getOperators","app","args","dirName","fullPath","fileDropDialogRef","afterFileOpen","handleFileOpenClick","handleSaveClick","fileSaveAs","handleSaveAsClick","fileExport","handleExportClick","handleShowClick","onoff","syncPreview","format","isPdf","useScripting","getEntireText","getSelectedText","insertText","runCommandAST","topic","getCurrentAceId","modeName","aceMode","rows","max","cols","fill","_","r","insert","getCursorPosition","App","splitterMoving","counter","aceFontSize","scheduleRerenderPreview","savedEditorStyleWidth","savedPreviewScrollY","commandBoxRef","editorRef","editorPlaceholderRef","splitterRef","rootRef","fileOpenDialogRef","fileSaveDialogRef","settingsDialogRef","onbeforeunload","isClean","getAppOperators","getModeOperators","getMdOperators","Dropdown","constrainWidth","Tooltip","Autocomplete","dialogPolyfill","dialogs","dialog","registerDialog","appSettingsStr","localStorage","getItem","appSettings","JSON","parse","setOptions","onkeyup","ctrlKey","shiftKey","setEditorNewFile","openFileOpenDialog","contentWindow","style","width","resize","handleStretchedClick","scrollTo","scrollX","scrollY","handleSyncPreviewClick","handleIsPdfClick","handleUseScriptingClick","start","rawInput","outputUrl","console","darkTheme","min","documentElement","scrollHeight","execCommand","handleSettingsClick","getOptions","settings","version","setItem","stringify","handleAceEditorOnChange","curOp","reload","handleAceEditorOnChangeScrollTop","totalHeight","w","handleAceEditorOnChangeScrollLeft","handleCommandBoxOnKeyDown","clearBox","getInstance","toast","html","classes","handleCommandBoxOnBlur","Toast","dismissAll","handleSplitterOnPointerDown","onpointermove","ev2","maxWidth","clientX","innerWidth","round","onpointerup","releasePointerCapture","pointerId","setPointerCapture","isEmulation","ua","navigator","userAgent","isChrome","LSX","jsx","createElement","jsxFlagment","Fragment","components","MenuItem","icon","caption","onClick","MenuDivider","Switch","offText","onText","elClass","lsx_","setFrontend","initBackend","ReactDOM"],"mappings":"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","file":"index.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'CARLO_RPC') {\r\n    // Carlo backend\r\n\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = false;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = false;\r\n\r\n    renderByMenneu_ = window.renderByMenneu;\r\n    loadFile_ = window.loadFile;\r\n    saveFile_ = window.saveFile;\r\n    listDirectory_ = window.listDirectory;\r\n    listDesktopDirectory_ = window.listDesktopDirectory;\r\n    listHomeDirectory_ = window.listHomeDirectory;\r\n    fileExists_ = window.fileExists;\r\n    pathJoin_ = window.pathJoin;\r\n    getDirName_ = window.getDirName;\r\n    getBaseName_ = window.getBaseName;\r\n    getStartupFile_ = window.getStartupFile;\r\n    openURL_ = window.openURL;\r\n    openNewWindow_ = window.openNewWindow;\r\n    rpc_ = window.rpc;\r\n    carlo_ = window.carlo;\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'ELECTRON_IPC') {\r\n    // Electron backend\r\n\r\n    const apiKey = mdneApi.getKey();\r\n\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = false;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = false;\r\n\r\n    nativeNotifyEditorDirty_ = (dirty) => {\r\n        mdneApi.send(apiKey, 'app:editor:notifyEditorDirty', {\r\n            dirty,\r\n        });\r\n    };\r\n\r\n    nativeAlert_ = (async (message, type) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeAlert', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeAlertSync_ = ((message, type) => {\r\n        return mdneApi.ipcSync(apiKey, 'app:editor:nativeAlertSync', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeConfirm_ = (async (message, type) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeConfirm', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeConfirmSync_ = ((message, type) => {\r\n        return mdneApi.ipcSync(apiKey, 'app:editor:nativeConfirmSync', {\r\n            message,\r\n            type,\r\n        });\r\n    });\r\n\r\n    nativeFileOpenDialog_ = (async (title, defaultPath, filters) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeFileOpenDialog', {\r\n            title,\r\n            defaultPath,\r\n            filters,\r\n        });\r\n    });\r\n\r\n    nativeFileSaveDialog_ = (async (title, defaultPath, filters) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:nativeFileSaveDialog', {\r\n            title,\r\n            defaultPath,\r\n            filters,\r\n        });\r\n    });\r\n\r\n    renderByMenneu_ = (async (source, data, options, srcPath, ...exportPath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:renderByMenneu', {\r\n            source,\r\n            data,\r\n            options,\r\n            srcPath,\r\n            exportPath,\r\n        });\r\n    });\r\n\r\n    loadFile_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:loadFile', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    saveFile_ = (async (text, ...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:saveFile', {\r\n            text,\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    listDirectory_ = (async (...dirPath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listDirectory', {\r\n            dirPath,\r\n        });\r\n    });\r\n\r\n    listDesktopDirectory_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listDesktopDirectory', {});\r\n    });\r\n\r\n    listHomeDirectory_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:listHomeDirectory', {});\r\n    });\r\n\r\n    fileExists_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:fileExists', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    pathJoin_ = (async (...filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:pathJoin', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getDirName_ = (async (filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getDirName', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getBaseName_ = (async (filePath) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getBaseName', {\r\n            filePath,\r\n        });\r\n    });\r\n\r\n    getStartupFile_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:getStartupFile', {});\r\n    });\r\n\r\n    openURL_ = (async (url) => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:openURL', {\r\n            url,\r\n        });\r\n    });\r\n\r\n    openNewWindow_ = (async () => {\r\n        return await mdneApi.ipc(apiKey, 'app:editor:openNewWindow', {});\r\n    });\r\n\r\n    class Backend {\r\n        async setFrontend(frontend) {\r\n            this.frontend_ = frontend;\r\n            (async () => {\r\n                //\r\n            })();\r\n        }\r\n\r\n        async runCommand(command) {\r\n            return await mdneApi.ipc(apiKey, 'app:editor:Backend:runCommand', {\r\n                command,\r\n            });\r\n        }\r\n\r\n        async runCommandAST(ast) {\r\n            return await mdneApi.ipc(apiKey, 'app:editor:Backend:runCommandAST', {\r\n                ast,\r\n            });\r\n        }\r\n    }\r\n\r\n    const backend_ = new Backend;\r\n\r\n    rpc_ = {\r\n        handle: x => x,\r\n    };\r\n\r\n    carlo_ = {\r\n        loadParams: (async () => {\r\n            return [backend_];\r\n        }),\r\n        fileInfo: (async (file) => {\r\n            return ({\r\n                path: file.path,\r\n                fileBodyText: await loadFile(file.path),\r\n            });\r\n        }),\r\n    };\r\n\r\n    mdneApi.on(apiKey, 'app:editor:Frontend:runCommand', async (event, arg) => {\r\n        try {\r\n            let ret = backend_.frontend_.runCommand(arg.command);\r\n            if (ret instanceof Promise) {\r\n                ret = await ret;\r\n            }\r\n            event.sender.send('app:editor:Frontend:runCommand', {succeeded: true, payload: ret});\r\n        } catch (e) {\r\n            event.sender.send('app:editor:Frontend:runCommand', {succeeded: false, error: e.message});\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keyup', (ev) => {\r\n        if (ev.keyCode === 122) {\r\n            // F11\r\n            mdneApi.ipc(apiKey, 'app:editor:toggleFullScreen', {});\r\n            ev.preventDefault();\r\n        }\r\n    }, false);\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nlet nativeNotifyEditorDirty_ = void 0;\r\nlet nativeAlert_ = void 0;\r\nlet nativeAlertSync_ = void 0;\r\nlet nativeConfirm_ = void 0;\r\nlet nativeConfirmSync_ = void 0;\r\nlet nativeFileOpenDialog_ = void 0;\r\nlet nativeFileSaveDialog_ = void 0;\r\nlet renderByMenneu_ = void 0;\r\nlet loadFile_ = void 0;\r\nlet saveFile_ = void 0;\r\nlet listDirectory_ = void 0;\r\nlet listDesktopDirectory_ = void 0;\r\nlet listHomeDirectory_ = void 0;\r\nlet fileExists_ = void 0;\r\nlet pathJoin_ = void 0;\r\nlet getDirName_ = void 0;\r\nlet getBaseName_ = void 0;\r\nlet getStartupFile_ = void 0;\r\nlet openURL_ = void 0;\r\nlet openNewWindow_ = void 0;\r\nlet rpc_ = void 0;\r\nlet carlo_ = void 0;\r\n\r\n\r\nconst additionalContentStyles = `\r\n<style>\r\n::-webkit-scrollbar {\r\n    width: 13px;\r\n    height: 13px;\r\n}\r\n::-webkit-scrollbar-track {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgb(88, 88, 88);\r\n    background-color: rgb(56, 56, 56);\r\n}\r\n::-webkit-scrollbar-thumb {\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgb(88, 88, 88);\r\n    background-color: rgb(102, 102, 102);\r\n}\r\n</style>\r\n`;\r\n\r\n\r\nif (!window._MDNE_BACKEND_TYPE || window._MDNE_BACKEND_TYPE === 'BROWSER_EMULATION') {\r\n    // Fallback (for Browser)\r\n\r\n    window._MDNE_BACKEND_TYPE = 'BROWSER_EMULATION';\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER = true;\r\n    window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN = true;\r\n\r\n    const welcomeFile = 'assets/data/welcome.md';\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    renderByMenneu_ = (async (source, data, options, srcPath, ...exportPath) => {\r\n        const opts = Object.assign({}, options, {\r\n            // NOTE: to enhance macros, define Vx02PGUB3NFWwhsd__replacementMacros.\r\n            replacementMacros: [{\r\n                re: /!!!lsx\\s([\\s\\S]+?)!!!/g,\r\n                fn: 'lsx', // evaluate input as LSX script\r\n            }].concat(\r\n                window.Vx02PGUB3NFWwhsd__replacementMacros &&\r\n                Array.isArray(window.Vx02PGUB3NFWwhsd__replacementMacros) ?\r\n                    window.Vx02PGUB3NFWwhsd__replacementMacros:\r\n                    []),\r\n        });\r\n        if (!opts.outputFormat || opts.outputFormat.toLowerCase() !== 'html') {\r\n            const errText = `output format ${opts.outputFormat} is not available.`;\r\n            throw new Error(errText);\r\n        }\r\n\r\n        // eslint-disable-next-line no-undef\r\n        const buf = await menneu.render(source, {}, opts);\r\n        let bufStr = buf.toString();\r\n        if (exportPath.length === 0) {\r\n            bufStr += additionalContentStyles;\r\n        }\r\n\r\n        // NOTE: Browsers treat Data URLs as cross-origin.\r\n        //       To avoid cross-origin, use Blob URLs instead.\r\n        // const resultUrl = 'data:text/html;base64,' + menneu.getAppEnv().RedAgateUtil.Base64.encode(buf);\r\n\r\n        // eslint-disable-next-line no-undef\r\n        const resultUrl = URL.createObjectURL(new Blob([bufStr], { type: 'text/html' }));\r\n\r\n        if (exportPath.length > 0) {\r\n            internalSaveFileEx(true, bufStr, ...exportPath);\r\n        }\r\n\r\n        // schedule revoking the Blob URL.\r\n        setTimeout(() => URL.revokeObjectURL(resultUrl), 5000);\r\n        return resultUrl;\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    loadFile_ = (async (...filePath) => {\r\n        // eslint-disable-next-line no-undef\r\n        const response = await fetch(welcomeFile);\r\n        return await response.text();\r\n    });\r\n\r\n    // eslint-disable-next-line no-inner-declarations\r\n    async function internalSaveFileEx(forExport, text, ...filePath) {\r\n        const p = await pathJoin(...filePath);\r\n        const b = await getBaseName(p);\r\n        // eslint-disable-next-line no-undef\r\n        const util = menneu.getAppEnv().RedAgateUtil;\r\n        await util.FileSaver.saveTextAs(b, text);\r\n\r\n        if (!forExport) {\r\n            try {\r\n                // eslint-disable-next-line require-atomic-updates, no-undef\r\n                window.location.hash = `filename=${encodeURIComponent(b)}&open.d=${util.Base64.encode(pako.deflate(\r\n                    util.TextEncoding.encodeToUtf8(text)))\r\n                    .replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '')}`;\r\n            // eslint-disable-next-line no-empty\r\n            } catch (e) {}\r\n        }\r\n\r\n        return {\r\n            path: p,\r\n            name: b,\r\n        };\r\n    }\r\n\r\n    saveFile_ = (async (text, ...filePath) => {\r\n        return await internalSaveFileEx(false, text, ...filePath);\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    listDirectory_ = (async (...dirPath) => {\r\n        return {\r\n            directory: '',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    listDesktopDirectory_ = (async () => {\r\n        return {\r\n            directory: '/',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    listHomeDirectory_ = (async () => {\r\n        return {\r\n            directory: '/',\r\n            files: [{\r\n                name: '.',\r\n                isDirectory: true,\r\n            }],\r\n        };\r\n    });\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    fileExists_ = (async (...filePath) => {\r\n        return false;\r\n    });\r\n\r\n    pathJoin_ = (async (...filePath) => {\r\n        const p = filePath.filter(x => x.length > 0).join('/').replace(/\\/+/g, '/');\r\n        const a = p.split('/');\r\n        const stack = [];\r\n        for (const x of a) {\r\n            switch (x) {\r\n            case '.': case '':\r\n                break;\r\n            case '..':\r\n                stack.pop();\r\n                break;\r\n            default:\r\n                if (x.match(/^[.]+$/)) {\r\n                    stack.pop();\r\n                } else {\r\n                    stack.push(x);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return (p.startsWith('/') ? '/' : '') + stack.join('/');\r\n    });\r\n\r\n    getDirName_ = (async (filePath) => {\r\n        let dir = filePath;\r\n        if (dir.lastIndexOf('/') !== -1) {\r\n            dir = dir.substring(0, dir.lastIndexOf('/'));\r\n        }\r\n        if (dir === '') {\r\n            dir = '/';\r\n        }\r\n        return dir;\r\n    });\r\n\r\n    getBaseName_ = (async (filePath) => {\r\n        let base = filePath.substring(filePath.lastIndexOf('/') + 1);\r\n        return base;\r\n    });\r\n\r\n    getStartupFile_ = (async () => {\r\n        let targetPath = 'Welcome.md';\r\n        let targetUrl = welcomeFile;\r\n        // eslint-disable-next-line no-undef\r\n        const util = menneu.getAppEnv().RedAgateUtil;\r\n\r\n        if (window.location.hash) {\r\n            const result = {};\r\n            window.location.hash.substring(1).split('&').forEach((part) => {\r\n                const item = part.split('=');\r\n                result[item[0]] = decodeURIComponent(item[1]);\r\n            });\r\n            if (window.location.hash.indexOf('open.d=') >= 0) {\r\n                if (result['open.d']) {\r\n                    targetPath = result['filename'] || 'Untitled.md';\r\n                    try {\r\n                        // eslint-disable-next-line no-undef\r\n                        targetUrl = `data:text/plain;base64,${util.Base64.encode(pako.inflate(\r\n                            util.Base64.decode(\r\n                                result['open.d'].replace(/-/g, '+').replace(/_/g, '/'))))}`;\r\n                    // eslint-disable-next-line no-empty\r\n                    } catch (e) {}\r\n                }\r\n            } else if (window.location.hash.indexOf('open.url=') >= 0) {\r\n                if (result['open.url']) {\r\n                    targetPath = result['open.url']\r\n                        .substring(result['open.url'].lastIndexOf('/') + 1) ||\r\n                        'index';\r\n                    targetUrl = result['open.url'];\r\n                }\r\n            } else if (result['filename']) {\r\n                targetPath = result['filename'];\r\n                targetUrl = `data:text/plain,`;\r\n            }\r\n        }\r\n        // eslint-disable-next-line no-undef\r\n        const response = await fetch(targetUrl, {});\r\n        if (response.ok) {\r\n            return {\r\n                path: targetPath,\r\n                text: await response.text(),\r\n            };\r\n        }\r\n        throw new Error('Fetching url failed. Network response was not ok, or CORB error.');\r\n    });\r\n\r\n    openURL_ = (async (url) => {\r\n        window.open(url, '_blank', 'noopener');\r\n        return true;\r\n    });\r\n\r\n    openNewWindow_ = (async () => {\r\n        window.open(window.location.pathname + '#filename=Untitled.md', '_blank', 'noopener');\r\n        return true;\r\n    });\r\n\r\n    const LM_async_ = (() => {\r\n        let config = Object.assign({}, liyad.defaultConfig);\r\n        config.reservedNames = Object.assign({}, config.reservedNames, {\r\n            Template: '$concat',\r\n        });\r\n    \r\n        config = liyad.installCore(config);\r\n        config = liyad.installArithmetic(config);\r\n        config = liyad.installSequence(config);\r\n        config = liyad.installConcurrent(config);\r\n    \r\n        config.stripComments = true;\r\n        config.returnMultipleRoot = true;\r\n    \r\n        return liyad.SExpressionAsync(config);\r\n    })();\r\n\r\n    LM_async_\r\n    .setGlobals({})\r\n    .install(config => {\r\n        const operators = [{\r\n            name: '$>',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...command) => {\r\n                return new Promise((resolve, reject) => {\r\n                    reject(new Error('cannot execute shell'));\r\n                });\r\n            },\r\n        }];\r\n        config.funcs = (config.funcs || []).concat(operators);\r\n        // config.macros = (config.macros || []).concat(macros);\r\n        // config.symbols = (config.symbols || []).concat(symbols);\r\n        return config;\r\n    });\r\n\r\n    class Backend {\r\n        async setFrontend(frontend) {\r\n            // Node world can now use frontend RPC handle.\r\n            this.frontend_ = frontend;\r\n            (async () => {\r\n                //\r\n            })();\r\n        }\r\n\r\n        async runCommand(command) {\r\n            return LM_async_(command);\r\n        }\r\n\r\n        async runCommandAST(ast) {\r\n            return LM_async_.evaluateAST(ast);\r\n        }\r\n    }\r\n\r\n    const backend_ = new Backend;\r\n\r\n    rpc_ = {\r\n        handle: x => x,\r\n    };\r\n\r\n    carlo_ = {\r\n        loadParams: (async () => {\r\n            return [backend_];\r\n        }),\r\n        fileInfo: (async (file) => {\r\n            const promise = new Promise((resolve, reject) => {\r\n                // eslint-disable-next-line no-undef\r\n                const reader = new FileReader();\r\n                // eslint-disable-next-line no-unused-vars\r\n                reader.onload = ev => {\r\n                    resolve({\r\n                        path: file.name,\r\n                        fileBodyText: reader.result,\r\n                    });\r\n                };\r\n                // eslint-disable-next-line no-unused-vars\r\n                reader.onerror = ev => {\r\n                    reject(reader.error);\r\n                };\r\n                reader.readAsText(file, 'UTF-8');\r\n            });\r\n            return promise;\r\n        }),\r\n    };\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = nativeNotifyEditorDirty_;\r\nexport const nativeAlert = nativeAlert_;\r\nexport const nativeAlertSync = nativeAlertSync_;\r\nexport const nativeConfirm = nativeConfirm_;\r\nexport const nativeConfirmSync = nativeConfirmSync_;\r\nexport const nativeFileOpenDialog = nativeFileOpenDialog_;\r\nexport const nativeFileSaveDialog = nativeFileSaveDialog_;\r\nexport const renderByMenneu = renderByMenneu_;\r\nexport const loadFile = loadFile_;\r\nexport const saveFile = saveFile_;\r\nexport const listDirectory = listDirectory_;\r\nexport const listDesktopDirectory = listDesktopDirectory_;\r\nexport const listHomeDirectory = listHomeDirectory_;\r\nexport const fileExists = fileExists_;\r\nexport const pathJoin = pathJoin_;\r\nexport const getDirName = getDirName_;\r\nexport const getBaseName = getBaseName_;\r\nexport const getStartupFile = getStartupFile_;\r\nexport const openURL = openURL_;\r\nexport const openNewWindow = openNewWindow_;\r\nexport const rpc = rpc_;\r\nexport const carlo = carlo_;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport * as carloBackend    from './backends/carlo.js';\r\nimport * as electronBackend from './backends/electron.js';\r\nimport * as browserBackend  from './backends/browser.js';\r\n\r\n\r\nlet backend = null;\r\n\r\n\r\nif (window._MDNE_BACKEND_TYPE === 'CARLO_RPC') {\r\n    // Carlo backend\r\n    backend = carloBackend;\r\n} else if (window._MDNE_BACKEND_TYPE === 'ELECTRON_IPC') {\r\n    // Electron backend\r\n    backend = electronBackend;\r\n} else {\r\n    // Fallback (for Browser)\r\n    backend = browserBackend;\r\n}\r\n\r\n\r\nexport const nativeNotifyEditorDirty = backend.nativeNotifyEditorDirty;\r\nexport const nativeAlert = backend.nativeAlert;\r\nexport const nativeAlertSync = backend.nativeAlertSync;\r\nexport const nativeConfirm = backend.nativeConfirm;\r\nexport const nativeConfirmSync = backend.nativeConfirmSync;\r\nexport const nativeFileOpenDialog = backend.nativeFileOpenDialog;\r\nexport const nativeFileSaveDialog = backend.nativeFileSaveDialog;\r\nexport const renderByMenneu = backend.renderByMenneu;\r\nexport const loadFile = backend.loadFile;\r\nexport const saveFile = backend.saveFile;\r\nexport const listDirectory = backend.listDirectory;\r\nexport const listDesktopDirectory = backend.listDesktopDirectory;\r\nexport const listHomeDirectory = backend.listHomeDirectory;\r\nexport const fileExists = backend.fileExists;\r\nexport const pathJoin = backend.pathJoin;\r\nexport const getDirName = backend.getDirName;\r\nexport const getBaseName = backend.getBaseName;\r\nexport const getStartupFile = backend.getStartupFile;\r\nexport const openURL = backend.openURL;\r\nexport const openNewWindow = backend.openNewWindow;\r\nexport const rpc = backend.rpc;\r\nexport const carlo = backend.carlo;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nconst LM_async_ = (() => {\r\n    let config = Object.assign({}, liyad.defaultConfig);\r\n    config.reservedNames = Object.assign({}, config.reservedNames, {\r\n        Template: '$concat',\r\n    });\r\n\r\n    config = liyad.installCore(config);\r\n    config = liyad.installArithmetic(config);\r\n    config = liyad.installSequence(config);\r\n    config = liyad.installConcurrent(config);\r\n\r\n    config.stripComments = true;\r\n    config.returnMultipleRoot = true;\r\n\r\n    return liyad.SExpressionAsync(config);\r\n})();\r\n\r\n\r\nLM_async_.setGlobals({});\r\n\r\nexport default LM_async_;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { rpc,\r\n         carlo }     from './backend-api.js';\r\nimport commandRunner from './cmdrunner.js';\r\n\r\n\r\n\r\nclass Frontend {\r\n    runCommand(command) {\r\n        return commandRunner(command);\r\n    }\r\n}\r\n\r\n\r\nexport const frontend_ = new Frontend;\r\nlet backend_ = null;\r\n\r\n\r\nexport async function initBackend() {\r\n    if (backend_) {\r\n        return backend_;\r\n    }\r\n    // eslint-disable-next-line require-atomic-updates\r\n    backend_ = (await carlo.loadParams())[0];\r\n    await backend_.setFrontend(rpc.handle(frontend_));\r\n}\r\n\r\n\r\nexport function frontend() {\r\n    return frontend_;\r\n}\r\n\r\n\r\nexport function backend() {\r\n    return backend_;\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nconst AppState = {\r\n    AppName: 'Markdown Editor',\r\n    AceEditor: null,\r\n    filePath: null,\r\n    inputFormat: 'md',\r\n    fileChanged: false,\r\n    invalidate: () => void 0,\r\n};\r\n\r\n\r\nexport function updateAppIndicatorBar() {\r\n    document.title = `${AppState.AppName} - ${\r\n        AppState.fileChanged ? '● ' : ''}${\r\n        AppState.filePath || '(New file)'}`;\r\n    document.getElementById('appIndicatorBar').innerText = `${\r\n        AppState.fileChanged ? '● ' : ''}${\r\n        AppState.filePath || '(New file)'} | mode: ${\r\n        AppState.inputFormat}`;\r\n}\r\n\r\nexport default AppState;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeNotifyEditorDirty,\r\n         nativeAlert,\r\n         nativeConfirm } from './backend-api.js';\r\nimport AppState          from './appstate.js';\r\n\r\n\r\n\r\nexport const notifyEditorDirty = (dirty) => {\r\n    AppState.fileChanged = dirty;\r\n    if (nativeNotifyEditorDirty) {\r\n        nativeNotifyEditorDirty(dirty);\r\n    }\r\n}\r\n\r\n\r\nexport const alertWrap = async (message) => {\r\n    if (nativeAlert) {\r\n        await nativeAlert(String(message));\r\n    } else {\r\n        alert(message);\r\n    }\r\n}\r\n\r\n\r\nexport const confirmWrap = async (message) => {\r\n    if (nativeConfirm) {\r\n        return await nativeConfirm(String(message));\r\n    } else {\r\n        return confirm(message);\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { saveFile }              from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap }             from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\n\r\n\r\n\r\nexport default class AceEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.editor = null;\r\n\r\n        this.outerWrapRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = ace.edit(this.props.id);\r\n        this.editor.setFontSize(this.props.fontSize);\r\n        this.editor.setTheme('ace/theme/monokai');\r\n        this.editor.session.setMode('ace/mode/markdown');\r\n        this.editor.commands.addCommand({\r\n            name: 'save',\r\n            bindKey: { win: 'Ctrl-S', mac: 'Cmd-S' },\r\n            exec: async (editor) => {\r\n                if (AppState.filePath) {\r\n                    try {\r\n                        await saveFile(editor.getValue(), AppState.filePath);\r\n                        editor.session.getUndoManager().markClean();\r\n                        notifyEditorDirty(false);\r\n                        updateAppIndicatorBar();\r\n                    } catch (e) {\r\n                        await alertWrap(e);\r\n                    }\r\n                } else {\r\n                    this.props.onSaveAs({});\r\n                }\r\n            }\r\n        })\r\n\r\n        this.editor.on('change', (o) => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(o);\r\n            }\r\n        });\r\n        this.editor.session.on('changeScrollTop', (y) => {\r\n            if (this.props.onChangeScrollTop) {\r\n                this.props.onChangeScrollTop(y, this.editor.session.getScreenLength() * this.editor.renderer.lineHeight);\r\n            }\r\n        });\r\n        this.editor.session.on('changeScrollLeft', (x) => {\r\n            if (this.props.onChangeScrollLeft) {\r\n                this.props.onChangeScrollLeft(x);\r\n            }\r\n        });\r\n\r\n        AppState.AceEditor = AppState.AceEditor || {};\r\n        AppState.AceEditor[this.props.id] = this.editor;\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (div (@ (ref ${this.outerWrapRef})\r\n                (className\r\n                    ($concat \"AceEditorOuterWrap\"\r\n                             ${this.props.stretched ? \" stretched\" : \"\"}\r\n                             ${this.props.collapsed ? \" collapsed\" : \"\"} )))\r\n            (div (@ (id ${this.props.id})\r\n                    (className \"AceEditorDiv\") )))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\n/**\r\n * @param {string} path\r\n * @return {string}\r\n */\r\nexport function getInputFormat(path) {\r\n    switch (path.lastIndexOf('.') >= 0 ?\r\n        path.toLowerCase().slice(path.lastIndexOf('.')) : '') {\r\n    case '.md': case '.markdown':\r\n        return 'md';\r\n    case '.html': case '.htm':\r\n        return 'html';\r\n    case '.lisp': case '.lsx':\r\n        return 'lisp';\r\n    case '.tex':\r\n        return 'tex';\r\n    case '.latex':\r\n        return 'latex';\r\n    case '.css':\r\n        return 'css';\r\n    case '.less':\r\n        return 'less';\r\n    case '.sass':\r\n        return 'sass';\r\n    case '.scss':\r\n        return 'scss';\r\n    case '.json':\r\n        return 'json';\r\n    case '.json5':\r\n        return 'json5';\r\n    case '.js': case '.mjs': case '.cjs':\r\n        return 'js';\r\n    case '.jsx':\r\n        return 'jsx';\r\n    case '.ts':\r\n        return 'ts';\r\n    case '.tsx':\r\n        return 'tsx';\r\n    case '.svg':\r\n        return 'svg';\r\n    case '.xml':\r\n        return 'xml';\r\n    case '.yaml': case '.yml':\r\n        return 'yaml';\r\n    case '.graphql': case '.gql':\r\n        return 'graphql';\r\n    case '.proto': case '.proto2': case '.proto3':\r\n        return 'protobuf';\r\n    case '.sql':\r\n        return 'sql';\r\n    case '.cs':\r\n        return 'csharp';\r\n    case '.go':\r\n        return 'golang';\r\n    case '.rb':\r\n        return 'ruby';\r\n    case '.rs':\r\n        return 'rust';\r\n    case '.py':\r\n        return 'python';\r\n    case '.r':\r\n        return 'r';\r\n    case '.sh':\r\n        return 'sh';\r\n    case '.dockerfile':\r\n        return 'dockerfile';\r\n    case '.makefile':\r\n        return 'makefile';\r\n    default:\r\n        if (path.toLowerCase().endsWith('dockerfile')) {\r\n            return 'dockerfile';\r\n        }\r\n        if (path.toLowerCase().endsWith('makefile')) {\r\n            return 'makefile';\r\n        }\r\n        return 'text';\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} inputFormat\r\n * @return {boolean}\r\n */\r\nexport function isPreviewable(inputFormat) {\r\n    switch (inputFormat) {\r\n    case 'md':\r\n        return true;\r\n    case 'html':\r\n        return true;\r\n    case 'lisp':\r\n        return true;\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} inputFormat\r\n * @return {string | undefined}\r\n */\r\nexport function getAceEditorMode(inputFormat) {\r\n    switch (inputFormat) {\r\n    case 'md':\r\n        return 'ace/mode/markdown';\r\n    case 'html':\r\n        return 'ace/mode/html';\r\n    case 'lisp':\r\n        return 'ace/mode/lisp';\r\n    case 'tex':\r\n        return 'ace/mode/tex';\r\n    case 'latex':\r\n        return 'ace/mode/latex';\r\n    case 'css':\r\n        return 'ace/mode/css';\r\n    case 'less':\r\n        return 'ace/mode/less';\r\n    case 'sass':\r\n        return 'ace/mode/sass';\r\n    case 'scss':\r\n        return 'ace/mode/scss';\r\n    case 'json':\r\n        return 'ace/mode/json';\r\n    case 'json5':\r\n        return 'ace/mode/json5';\r\n    case 'js':\r\n        return 'ace/mode/javascript';\r\n    case 'jsx':\r\n        return 'ace/mode/jsx';\r\n    case 'ts':\r\n        return 'ace/mode/typescript';\r\n    case 'tsx':\r\n        return 'ace/mode/tsx';\r\n    case 'svg':\r\n        return 'ace/mode/svg';\r\n    case 'xml':\r\n        return 'ace/mode/xml';\r\n    case 'yaml':\r\n        return 'ace/mode/yaml';\r\n    case 'graphql':\r\n        return 'ace/mode/graphqlshema';\r\n    case 'protobuf':\r\n        return 'ace/mode/protobuf';\r\n    case 'sql':\r\n        return 'ace/mode/sql';\r\n    case 'csharp':\r\n        return 'ace/mode/csharp';\r\n    case 'golang':\r\n        return 'ace/mode/golang';\r\n    case 'ruby':\r\n        return 'ace/mode/ruby';\r\n    case 'rust':\r\n        return 'ace/mode/rust';\r\n    case 'python':\r\n        return 'ace/mode/python';\r\n    case 'r':\r\n        return 'ace/mode/r';\r\n    case 'sh':\r\n        return 'ace/mode/sh';\r\n    case 'dockerfile':\r\n        return 'ace/mode/dockerfile';\r\n    case 'makefile':\r\n        return 'ace/mode/makefile';\r\n    case 'text':\r\n        return 'ace/mode/text';\r\n    default:\r\n        return void 0;\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { loadFile,\r\n         pathJoin,\r\n         carlo }                 from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap }             from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport { getInputFormat,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\n\r\n\r\n\r\nexport default class FileDropDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.dialogRef.current.showModal();\r\n        document.activeElement.blur();\r\n        this.options = options;\r\n        this.handler = handler;\r\n    }\r\n\r\n    openFile(path, text) {\r\n        AppState.filePath = path;\r\n        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n        notifyEditorDirty(false);\r\n        updateAppIndicatorBar();\r\n\r\n        const editor = AppState.AceEditor[this.options.aceId];\r\n\r\n        editor.clearSelection();\r\n        editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n        editor.setValue(text);\r\n        editor.clearSelection();\r\n        editor.session.getUndoManager().markClean();\r\n        editor.moveCursorTo(0, 0);\r\n    }\r\n\r\n    openFileAndClose(path, text) {\r\n        this.openFile(path, text);\r\n\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n        this.handler();\r\n    }\r\n\r\n    handleOnDragOver(ev) {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n    }\r\n\r\n    async handleOnDrop(ev) {\r\n        try {\r\n            ev.preventDefault();\r\n            const files = [];\r\n            for (let i = 0; i < ev.dataTransfer.files.length; i++) {\r\n                files.push(carlo.fileInfo(ev.dataTransfer.files[i]));\r\n            }\r\n            const paths = await Promise.all(files);\r\n            const texts = await Promise.all(\r\n                paths.map(x => x.fileBodyText ?\r\n                    Promise.resolve(x.fileBodyText) : // emulation\r\n                    loadFile(x.path)                  // carlo\r\n                ));\r\n\r\n            this.openFileAndClose(paths[0].path, texts[0]);\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n            AppState.filePath = null;\r\n            notifyEditorDirty(false);\r\n            updateAppIndicatorBar();\r\n        }\r\n    }\r\n\r\n    async handleOnOpenDialogClick(ev) {\r\n        this.handleCancelClick(ev);\r\n        try {\r\n            this.options.fileOpenDialog.showModal({\r\n                title: 'Open',\r\n                currentAceId: this.options.aceId,\r\n                currentFilePath: AppState.filePath,\r\n                fileTypes: [{\r\n                    value: 'md',\r\n                    text: 'Markdown (*.md, *.markdown)',\r\n                    exts: ['.md', '.markdown'],\r\n                },{\r\n                    value: 'html',\r\n                    text: 'HTML (*.html, *.htm)',\r\n                    exts: ['.html', '.htm'],\r\n                },{\r\n                    value: '*',\r\n                    text: 'All files (*.*)',\r\n                    exts: [],\r\n                }],\r\n            }, async (currentDir, fileName) => {\r\n                const path = await pathJoin(currentDir, fileName);\r\n                const text = await loadFile(path);\r\n\r\n                this.openFileAndClose(path, text);\r\n            });\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n            // eslint-disable-next-line require-atomic-updates\r\n            AppState.filePath = null;\r\n            notifyEditorDirty(false);\r\n            updateAppIndicatorBar();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 \"Open file\")\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\")\r\n                           (verticalAlign \"middle\") )\r\n                    (onDragOver ${(ev) => {this.handleOnDragOver(ev)}})\r\n                    (onDragLeave ${() => {  }})\r\n                    (onDrop ${async (ev) => {await this.handleOnDrop(ev)}}) )\r\n                (i (@ (className \"material-icons large\")) \"insert_drive_file\")(br)\r\n                \"Drop file here.\" (br)(br)(br)\r\n                (a (@ (style (cursor \"pointer\")\r\n                             (color \"white\")\r\n                             (border-bottom \"1px solid white\") )\r\n                      (onClick ${(ev) => {this.handleOnOpenDialogClick(ev)}}) )\r\n                      \"Or click here to open the file dialog.\" ))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeFileOpenDialog,\r\n         listDirectory,\r\n         listDesktopDirectory,\r\n         listHomeDirectory,\r\n         fileExists,\r\n         getDirName,\r\n         getBaseName } from '../libs/backend-api.js';\r\nimport { alertWrap }   from '../libs/backend-wrap.js';\r\n\r\n\r\n\r\nexport default class FileOpenDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.title = '';\r\n        this.state.currentFilePath = '';\r\n        this.state.fileTypes = [];\r\n        this.state.selectedFileType = '*';\r\n\r\n        this.state.currentDir = '';\r\n        this.state.currentDirFiles = [];\r\n        this.state.inputFileName = '';\r\n\r\n        this.dialogRef = React.createRef();\r\n        this.fileNameInputRef = React.createRef();\r\n        this.fileTypeSelectorRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.setState({title: options.title});\r\n        this.setState({currentFilePath: options.currentFilePath});\r\n        this.setState({fileTypes: options.fileTypes});\r\n\r\n        let selectedType = options.fileTypes[0];\r\n        this.setState({selectedFileType: selectedType.value});\r\n\r\n        this.setState({currentDir: ''});\r\n        this.setState({currentDirFiles: []});\r\n        this.setState({inputFileName: ''});\r\n        this.options = options;\r\n        this.handler = handler;\r\n\r\n        if (nativeFileOpenDialog) {\r\n            (async () => {\r\n                const filePaths = await nativeFileOpenDialog(\r\n                    options.title,\r\n                    options.currentFilePath,\r\n                    options.fileTypes.map(x => ({\r\n                        name: x.text,\r\n                        extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                    })));\r\n                if (filePaths) {\r\n                    this.handler(await getDirName(filePaths[0]), await getBaseName(filePaths[0]));\r\n                }\r\n            })();\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n\r\n            listDirectory(options.currentFilePath)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                listDesktopDirectory()\r\n                .then(info => {\r\n                    this.setState({currentDir: info.directory});\r\n                    this.setState({currentDirFiles: info.files});\r\n                })\r\n                // eslint-disable-next-line no-unused-vars\r\n                .catch(e2 => {\r\n                    listHomeDirectory()\r\n                    .then(info => {\r\n                        this.setState({currentDir: info.directory});\r\n                        this.setState({currentDirFiles: info.files});\r\n                    })\r\n                    .catch(e3 => {\r\n                        // TODO: await it.\r\n                        alertWrap(e3);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFileListItemClick(ev, name, isDir) {\r\n        if (isDir) {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: ''});\r\n\r\n            listDirectory(this.state.currentDir, name)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            .catch(e => {\r\n                // TODO: await it.\r\n                alertWrap(e);\r\n            });\r\n        } else {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: name});\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleOkClick(ev) {\r\n        try {\r\n            if (this.state.inputFileName.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            let fileName = this.state.inputFileName;\r\n\r\n            if (! (await fileExists(this.state.currentDir, fileName))) {\r\n                await alertWrap('File does not exist.');\r\n                return;\r\n            }\r\n\r\n            this.handler(this.state.currentDir, fileName);\r\n\r\n            document.activeElement.blur();\r\n            this.dialogRef.current.close();\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n        }\r\n    }\r\n\r\n    getFilteredCurrentDirFiles() {\r\n        return this.state.currentDirFiles.filter(x => {\r\n            if (x.isDirectory) {\r\n                return true;\r\n            }\r\n            let fileName = x.name;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (!selectedType || !selectedType.exts || selectedType.exts.length === 0) {\r\n                return true;\r\n            }\r\n            return (selectedType.exts.filter(z => z === ext)[0]);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 ${this.state.title})\r\n            (div ${this.state.currentDir})\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\") ))\r\n                (div (@ (style (color \"black\")\r\n                               (text-align \"left\")\r\n                               (height \"calc(100% - 100px)\")\r\n                               (overflow-x \"auto\")\r\n                               (overflow-y \"scroll\") ))\r\n                    (ul (@ (className \"collection\")\r\n                           (style (margin \"0\")) )\r\n                        ($=for ${this.getFilteredCurrentDirFiles()}\r\n                            (li (@ (key $index)\r\n                                   (className \"collection-item\"))\r\n                                (a (@ (onClick (|-> (ev) use ($data)\r\n                                          (${(ev, name, isDir) => this.handleFileListItemClick(ev, name, isDir)}\r\n                                              ev ::$data:name ::$data:isDirectory )))\r\n                                      (style (cursor \"pointer\")\r\n                                             (color \"inherit\")\r\n                                             (text-decoration \"none\") ))\r\n                                    (i (@ (className \"material-icons tiny\")\r\n                                          (style (margin \"0 10px 10px 10px\")) )\r\n                                        ($if ::$data:isDirectory \"folder\" \"insert_drive_file\") )\r\n                                    ::$data:name )) )))\r\n                (div (@ (className \"row\"))\r\n                    (div (@ (className \"input-field col s10\"))\r\n                        (label \"File name\")\r\n                        (input (@ (ref ${this.fileNameInputRef})\r\n                                  (style (color \"white\"))\r\n                                  (type \"text\")\r\n                                  (spellcheck \"false\")\r\n                                  (readonly \"readonly\")\r\n                                  (onChange ${() => this.setState({inputFileName: this.fileNameInputRef.current.value})})\r\n                                  (value ${this.state.inputFileName}) )))\r\n                    (div (@ (className \"input-field col s2\"))\r\n                        (select (@ (ref ${this.fileTypeSelectorRef})\r\n                                   (className \"browser-default\")\r\n                                   (onChange ${() => this.setState({selectedFileType: this.fileTypeSelectorRef.current.value})}) )\r\n                            ($=for ${this.state.fileTypes}\r\n                                (option (@ (key   ::$data:value)\r\n                                           (value ::$data:value)\r\n                                           (($if (== ${this.state.selectedFileType} ::$data:value)\r\n                                               \"selected\" \"data-x-no-selected\" )))\r\n                                    ::$data:text ))))))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeFileSaveDialog,\r\n         listDirectory,\r\n         listDesktopDirectory,\r\n         listHomeDirectory,\r\n         fileExists,\r\n         getDirName,\r\n         getBaseName } from '../libs/backend-api.js';\r\nimport { alertWrap,\r\n         confirmWrap } from '../libs/backend-wrap.js';\r\n\r\n\r\n\r\nexport default class FileSaveDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.title = '';\r\n        this.state.currentFilePath = '';\r\n        this.state.fileTypes = [];\r\n        this.state.selectedFileType = '*';\r\n\r\n        this.state.currentDir = '';\r\n        this.state.currentDirFiles = [];\r\n        this.state.inputFileName = '';\r\n\r\n        this.dialogRef = React.createRef();\r\n        this.fileNameInputRef = React.createRef();\r\n        this.fileTypeSelectorRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.setState({title: options.title});\r\n        this.setState({currentFilePath: options.currentFilePath});\r\n        this.setState({fileTypes: options.fileTypes});\r\n\r\n        const ext = options.currentFilePath ?\r\n            (options.currentFilePath.lastIndexOf('.') >= 0 ?\r\n                options.currentFilePath.toLowerCase()\r\n                .slice(options.currentFilePath.lastIndexOf('.')) : '') : '';\r\n        let selectedType = options.fileTypes.filter(x => x.exts.filter(z => z === ext)[0])[0];\r\n        let allFilesType = options.fileTypes.filter(x => x.value === '*')[0];\r\n        this.setState({selectedFileType:\r\n            options.forExport ? options.fileTypes[0].value :\r\n                (selectedType ? selectedType.value :\r\n                    (ext !== '' ? allFilesType.value : options.fileTypes[0].value))});\r\n\r\n        this.setState({currentDir: ''});\r\n        this.setState({currentDirFiles: []});\r\n        this.setState({inputFileName: ''});\r\n        this.options = options;\r\n        this.handler = handler;\r\n\r\n        if (nativeFileSaveDialog) {\r\n            (async () => {\r\n                const fileName = await nativeFileSaveDialog(\r\n                    options.title,\r\n                    options.currentFilePath,\r\n                    options.fileTypes.map(x => ({\r\n                        name: x.text,\r\n                        extensions: x.exts && x.exts.length > 0 ? x.exts.map(t => t.slice(1)) : ['*'],\r\n                    })));\r\n                if (fileName) {\r\n                    this.handler(await getDirName(fileName), await getBaseName(fileName));\r\n                }\r\n            })();\r\n        } else {\r\n            this.dialogRef.current.showModal();\r\n            document.activeElement.blur();\r\n\r\n            listDirectory(options.currentFilePath)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                listDesktopDirectory()\r\n                .then(info => {\r\n                    this.setState({currentDir: info.directory});\r\n                    this.setState({currentDirFiles: info.files});\r\n                })\r\n                // eslint-disable-next-line no-unused-vars\r\n                .catch(e2 => {\r\n                    listHomeDirectory()\r\n                    .then(info => {\r\n                        this.setState({currentDir: info.directory});\r\n                        this.setState({currentDirFiles: info.files});\r\n                    })\r\n                    .catch(e3 => {\r\n                        // TODO: await it.\r\n                        alertWrap(e3);\r\n                    });\r\n                });\r\n            });\r\n\r\n            getBaseName(options.currentFilePath)\r\n            .then(name => {\r\n                this.fileNameInputRef.current.focus();\r\n                this.setState({inputFileName: name});\r\n            })\r\n            // eslint-disable-next-line no-unused-vars\r\n            .catch(e => {\r\n                // NOTE: ignore error\r\n                // alertWrap(e); // TODO: await it.\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFileListItemClick(ev, name, isDir) {\r\n        if (isDir) {\r\n            this.fileNameInputRef.current.focus();\r\n\r\n            listDirectory(this.state.currentDir, name)\r\n            .then(info => {\r\n                this.setState({currentDir: info.directory});\r\n                this.setState({currentDirFiles: info.files});\r\n            })\r\n            .catch(e => {\r\n                // TODO: await it.\r\n                alertWrap(e);\r\n            });\r\n        } else {\r\n            this.fileNameInputRef.current.focus();\r\n            this.setState({inputFileName: name});\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleOkClick(ev) {\r\n        try {\r\n            if (this.state.inputFileName.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            let fileName = this.state.inputFileName;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (ext === '' && selectedType) {\r\n                fileName += selectedType.exts[0] || '';\r\n            } else if (! selectedType.exts.filter(x => x === ext)[0]) {\r\n                fileName += selectedType.exts[0] || '';\r\n            }\r\n\r\n            if (await fileExists(this.state.currentDir, fileName)) {\r\n                if (! await confirmWrap('Are you sure want to overwrite the existing file?')) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.handler(this.state.currentDir, fileName);\r\n\r\n            document.activeElement.blur();\r\n            this.dialogRef.current.close();\r\n        } catch (e) {\r\n            await alertWrap(e);\r\n        }\r\n    }\r\n\r\n    getFilteredCurrentDirFiles() {\r\n        return this.state.currentDirFiles.filter(x => {\r\n            if (x.isDirectory) {\r\n                return true;\r\n            }\r\n            let fileName = x.name;\r\n            const ext = fileName.lastIndexOf('.') >= 0 ?\r\n                fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n            let selectedType = this.options.fileTypes.filter(x => x.value === this.state.selectedFileType)[0];\r\n            if (!selectedType || !selectedType.exts || selectedType.exts.length === 0) {\r\n                return true;\r\n            }\r\n            return (selectedType.exts.filter(z => z === ext)[0]);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (h5 ${this.state.title})\r\n            (div ${this.state.currentDir})\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\") ))\r\n                (div (@ (style (color \"black\")\r\n                               (text-align \"left\")\r\n                               (height \"calc(100% - 100px)\")\r\n                               (overflow-x \"auto\")\r\n                               (overflow-y \"scroll\") ))\r\n                    (ul (@ (className \"collection\")\r\n                           (style (margin \"0\")) )\r\n                        ($=for ${this.getFilteredCurrentDirFiles()}\r\n                            (li (@ (key $index)\r\n                                   (className \"collection-item\"))\r\n                                (a (@ (onClick (|-> (ev) use ($data)\r\n                                          (${(ev, name, isDir) => this.handleFileListItemClick(ev, name, isDir)}\r\n                                              ev ::$data:name ::$data:isDirectory )))\r\n                                      (style (cursor \"pointer\")\r\n                                             (color \"inherit\")\r\n                                             (text-decoration \"none\") ))\r\n                                    (i (@ (className \"material-icons tiny\")\r\n                                          (style (margin \"0 10px 10px 10px\")) )\r\n                                        ($if ::$data:isDirectory \"folder\" \"insert_drive_file\") )\r\n                                    ::$data:name )) )))\r\n                (div (@ (className \"row\"))\r\n                    (div (@ (className \"input-field col s10\"))\r\n                        (label \"File name\")\r\n                        (input (@ (ref ${this.fileNameInputRef})\r\n                                  (style (color \"white\"))\r\n                                  (type \"text\")\r\n                                  (spellcheck \"false\")\r\n                                  (onChange ${() => this.setState({inputFileName: this.fileNameInputRef.current.value})})\r\n                                  (value ${this.state.inputFileName}) )))\r\n                    (div (@ (className \"input-field col s2\"))\r\n                        (select (@ (ref ${this.fileTypeSelectorRef})\r\n                                   (className \"browser-default\")\r\n                                   (onChange ${() => this.setState({selectedFileType: this.fileTypeSelectorRef.current.value})}) )\r\n                            ($=for ${this.state.fileTypes}\r\n                                (option (@ (key   ::$data:value)\r\n                                           (value ::$data:value)\r\n                                           (($if (== ${this.state.selectedFileType} ::$data:value)\r\n                                               \"selected\" \"data-x-no-selected\" )))\r\n                                    ::$data:text ))))))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport default class SettingsDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.showFields = false;\r\n        this.state.fontFamily = void 0;\r\n        this.state.fontSize = 14;\r\n        this.state.tabSize = 4;\r\n        this.state.wrap = false;\r\n        this.state.darkThemePreview = false;\r\n        this.state.theme = 'monokai';\r\n\r\n        this.dialogRef = React.createRef();\r\n    }\r\n\r\n    showModal(options, handler) {\r\n        this.dialogRef.current.showModal();\r\n        document.activeElement.blur();\r\n        this.options = options;\r\n        this.handler = handler;\r\n        this.setState({\r\n            showFields: false,\r\n            fontFamily: options.editor.fontFamily,\r\n            fontSize: options.editor.fontSize > 0 ? options.editor.fontSize : 14,\r\n            tabSize: options.editor.tabSize,\r\n            wrap: options.editor.wrap === 'off' ? false : (options.editor.wrap === 'free'),\r\n            theme: (options.editor.theme || '').replace('ace/theme/', ''),\r\n            darkThemePreview: options.renderer.darkThemePreview,\r\n        });\r\n        setTimeout(() => this.setState({showFields: true}), 30);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        M.updateTextFields();\r\n        const elems = document.querySelectorAll('select');\r\n        /* const instances = */ M.FormSelect.init(elems, {});\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleFontFamilyChange(ev) {\r\n        this.setState({\r\n            fontFamily: (ev.target.value || '').trim() === '' ? null : ev.target.value,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleFontSizeChange(ev) {\r\n        this.setState({\r\n            fontSize: ev.target.value,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleTabSizeChange(ev) {\r\n        this.setState({\r\n            tabSize: Math.floor(Number(ev.target.value)),\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleWrapChange(ev) {\r\n        this.setState({\r\n            wrap: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleDarkThemePreviewChange(ev) {\r\n        this.setState({\r\n            darkThemePreview: ev.target.checked,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleThemeChange(ev) {\r\n        this.setState({\r\n            theme: ev.target.value,\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleOkClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n\r\n        const fontSize = Number(this.state.fontSize);\r\n        this.handler({\r\n            editor: {\r\n                fontFamily: this.state.fontFamily,\r\n                fontSize: fontSize > 0 ? fontSize : 14,\r\n                tabSize: this.state.tabSize > 0 ? this.state.tabSize : 4,\r\n                wrap: this.state.wrap,\r\n                theme: `ace/theme/${this.state.theme}`,\r\n            },\r\n            renderer: {\r\n                darkThemePreview: this.state.darkThemePreview,\r\n            },\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCancelClick(ev) {\r\n        document.activeElement.blur();\r\n        this.dialogRef.current.close();\r\n    }\r\n\r\n    render() {\r\n        return (lsx`\r\n        (dialog (@ (ref ${this.dialogRef})\r\n                   (className \"appSettingsDialog-root\")\r\n                   (style (backgroundColor \"#333\")\r\n                          (color \"white\") ))\r\n            (style (@ (dangerouslySetInnerHTML \"\"\"$concat\r\n                .appSettingsDialog-root .select-wrapper input {\r\n                    color: white;\r\n                }\r\n                .appSettingsDialog-root .select-wrapper svg.caret {\r\n                    fill: white;\r\n                }\r\n                \"\"\") ))\r\n            (h5 \"Settings\")\r\n            (div (@ (style (width \"80vw\")\r\n                           (height \"70vh\")\r\n                           (display \"table-cell\")\r\n                           (textAlign \"center\")\r\n                           (paddingTop \"20px\") ))\r\n                ($if ${this.state.showFields} (form\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s12\"))\r\n                            (input (@ (id \"appSettingsDialog-fontFamily\")\r\n                                      (type \"text\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.fontFamily})\r\n                                      (onChange ${(ev) => this.handleFontFamilyChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-fontFamily\"))\r\n                                \"Font family (e.g. Consolas, 'Migu 1M', monospace)\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (input (@ (id \"appSettingsDialog-fontSize\")\r\n                                      (type \"number\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.fontSize})\r\n                                      (onChange ${(ev) => this.handleFontSizeChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-fontSize\"))\r\n                                \"Font size (in points)\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (input (@ (id \"appSettingsDialog-tabSize\")\r\n                                      (type \"number\")\r\n                                      (className \"validate\")\r\n                                      (style (color \"white\"))\r\n                                      (value ${this.state.tabSize})\r\n                                      (onChange ${(ev) => this.handleTabSizeChange(ev)}) ))\r\n                            (label (@ (for \"appSettingsDialog-tabSize\"))\r\n                                \"Tab size\") ))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"0\")) )\r\n                        (div (@ (className \"input-field col s2\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.wrap ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleWrapChange(ev)}) ))\r\n                                (span \"Wrap\") ))\r\n                        (div (@ (className \"input-field col s4\"))\r\n                            (label\r\n                                (input (@ (type \"checkbox\")\r\n                                          (className \"filled-in\")\r\n                                          (checked ${this.state.darkThemePreview ? 'checked' : ''})\r\n                                          (onChange ${(ev) => this.handleDarkThemePreviewChange(ev)}) ))\r\n                                (span \"Preview in dark theme\") )))\r\n                    (div (@ (className \"row\")\r\n                            (style (margin \"40px 0 0 0\")\r\n                                   (color \"white\") ))\r\n                        (div (@ (className \"input-field col s12\"))\r\n                            (select (@ (id \"appSettingsDialog-theme\")\r\n                                       (onChange ${(ev) => this.handleThemeChange(ev)}) )\r\n                                (option (@ (value \"monokai\")\r\n                                           (selected ${this.state.theme === 'monokai' ? 'selected' : ''})) \"monokai\")\r\n                                (option (@ (value \"cobalt\")\r\n                                           (selected ${this.state.theme === 'cobalt' ? 'selected' : ''})) \"cobalt\")\r\n                                (option (@ (value \"terminal\")\r\n                                           (selected ${this.state.theme === 'terminal' ? 'selected' : ''})) \"terminal\")\r\n                                (option (@ (value \"chrome\")\r\n                                           (selected ${this.state.theme === 'chrome' ? 'selected' : ''})) \"chrome\")\r\n                                (option (@ (value \"textmate\")\r\n                                           (selected ${this.state.theme === 'textmate' ? 'selected' : ''})) \"textmate\") )\r\n                            (label (@ (for \"appSettingsDialog-theme\"))\r\n                                \"Theme\") )) )))\r\n            (div (@ (style (display \"flex\")\r\n                           (justifyContent \"center\") ))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn grey darken-3\")\r\n                           (onClick ${(ev) => this.handleCancelClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"cancel\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"Cancel\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px 0 3px\")\r\n                                  (width \"9em\") )\r\n                           (className \"btn blue darken-2\")\r\n                           (onClick ${(ev) => this.handleOkClick(ev)}) )\r\n                    (i (@ (className \"material-icons large\")) \"check\")\r\n                    (span (@ (style (margin \"0 10px 10px 10px\")\r\n                                    (display \"inline-block\")\r\n                                    (vertical-align \"middle\") )) \"OK\") ) ))`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const MenuItem = ({icon, caption, onClick}) => {\r\n    return (lsx`\r\n        (li (a (@ (onClick ${onClick}))\r\n            (i (@ (className \"material-icons\")) ${icon})\r\n            ${caption} ))`\r\n    );\r\n};\r\n\r\n\r\nexport const MenuDivider = () => {\r\n    return (lsx`(li (@ (className \"divider\") (tabIndex -1)))`);\r\n};\r\n\r\n\r\nexport const Switch = ({caption, offText, onText, elClass, checked, onClick}) => {\r\n    return (lsx`\r\n        (div (@ (className (\"switch\" ${elClass ? elClass : ''})))\r\n            (label ${caption})(br)\r\n            (label\r\n                ${offText}\r\n                (input (@ (type \"checkbox\")\r\n                          (checked ${checked})\r\n                          (onClick ${onClick}) ))\r\n                (span  (@ (className \"lever\")))\r\n                ${onText} ))`\r\n    );\r\n};\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { renderByMenneu } from './backend-api.js';\r\n\r\n\r\n\r\nconst start = (async (text, cf, data, srcPath, ...exportPath) => {\r\n    return await renderByMenneu(text, data, Object.assign({\r\n        inputFormat: 'md',\r\n        dataFormat: 'object',\r\n    }, cf || {}), srcPath, ...exportPath);\r\n});\r\n\r\nexport default start;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\n\r\nexport const escapeHtml = (s) => s\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\")\r\n    .replace(/'/g, \"&#39;\");\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { loadFile,\r\n         pathJoin,\r\n         getDirName,\r\n         openURL,\r\n         openNewWindow } from '../backend-api.js';\r\nimport AppState          from '../appstate.js';\r\nimport { isPreviewable } from '../modes.js';\r\nimport { backend }       from '../remote.js';\r\n\r\n\r\n\r\nexport function getSuggests() {\r\n    return {\r\n        'new-window': null,\r\n        'open': null,\r\n        'open \"path/to/file/opening\"': null,\r\n        'save': null,\r\n        'saveas': null,\r\n        'saveas \"path/to/file/to/save/as\"': null,\r\n        'export': null,\r\n        'export \"path/to/file/to/export\"': null,\r\n        'preview': null,\r\n        'sync on': null,\r\n        'sync off': null,\r\n        'preview-format pdf': null,\r\n        'preview-format html': null,\r\n        'scripting on': null,\r\n        'scripting off': null,\r\n        'entire-text': null,\r\n        'selected-text': null,\r\n        'insert \"text\"': null,\r\n        '$resolve-pipe ($> ls -al) (<- insert) (-> () nil)': null,\r\n        '$> some-shell-cmd cmd-options': null,\r\n        'help': null,\r\n        'help topic-name': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({app}) {\r\n    return ([\r\n        {\r\n            name: 'new-window',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                openNewWindow();\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'open',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    const fullPath = await pathJoin(dirName, filePath);\r\n                    const text = await loadFile(fullPath);\r\n                    app.fileDropDialogRef.current.openFile(fullPath, text);\r\n\r\n                    app.afterFileOpen();\r\n                    return '';\r\n                } else {\r\n                    app.handleFileOpenClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'save',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                app.handleSaveClick({});\r\n                return 'Saving...';\r\n            },\r\n        }, {\r\n            name: 'saveas',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    await app.fileSaveAs(dirName, filePath);\r\n                    return 'Saved.';\r\n                } else {\r\n                    app.handleSaveAsClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'export',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => async (filePath) => {\r\n                if (! isPreviewable(AppState.inputFormat)) {\r\n                    throw new Error(`Exporting of ${AppState.inputFormat} format is not supported.`);\r\n                }\r\n                if (filePath) {\r\n                    const dirName = AppState.filePath ? await getDirName(AppState.filePath) : null;\r\n                    await app.fileExport(dirName, filePath);\r\n                    return 'Exported.';\r\n                } else {\r\n                    app.handleExportClick({});\r\n                    return '';\r\n                }\r\n            },\r\n        }, {\r\n            name: 'preview',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                app.handleShowClick({});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'sync',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (onoff) => {\r\n                app.setState({syncPreview: onoff === 'on' || onoff === true});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'preview-format',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (format) => {\r\n                app.setState({isPdf: format === 'pdf'});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'scripting',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (onoff) => {\r\n                app.setState({useScripting: onoff === 'on' || onoff === true});\r\n                return '';\r\n            },\r\n        }, {\r\n            name: 'entire-text',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.getEntireText(text);\r\n            },\r\n        }, {\r\n            name: 'selected-text',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.getSelectedText(text);\r\n            },\r\n        }, {\r\n            name: 'insert',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (text) => {\r\n                return app.insertText(text);\r\n            },\r\n        }, {\r\n            name: '$>',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...commands) => {\r\n                return backend().runCommandAST([[{'symbol': '$>'}, commands.join(' ')]]);\r\n            },\r\n        }, {\r\n            name: 'help',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (topic) => {\r\n                openURL('https://github.com/shellyln/mdne');\r\n                return '';\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../appstate.js';\r\nimport { getAceEditorMode }      from '../modes.js';\r\n\r\n\r\n\r\n/**\r\n * @return {string}\r\n */\r\nexport function getSuggests() {\r\n    return {\r\n        'mode md': null,\r\n        'mode html': null,\r\n        'mode lisp': null,\r\n        'mode tex': null,\r\n        'mode latex': null,\r\n        'mode css': null,\r\n        'mode less': null,\r\n        'mode sass': null,\r\n        'mode scss': null,\r\n        'mode json': null,\r\n        'mode json5': null,\r\n        'mode js': null,\r\n        'mode jsx': null,\r\n        'mode ts': null,\r\n        'mode tsx': null,\r\n        'mode svg': null,\r\n        'mode xml': null,\r\n        'mode yaml': null,\r\n        'mode graphql': null,\r\n        'mode protobuf': null,\r\n        'mode sql': null,\r\n        'mode csharp': null,\r\n        'mode golang': null,\r\n        'mode ruby': null,\r\n        'mode rust': null,\r\n        'mode python': null,\r\n        'mode r': null,\r\n        'mode sh': null,\r\n        'mode dockerfile': null,\r\n        'mode makefile': null,\r\n        'mode text': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({getCurrentAceId}) {\r\n    return ([\r\n        {\r\n            name: 'mode',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (modeName) => {\r\n                if (!modeName) {\r\n                    throw new Error('Editor mode name is not specified.');\r\n                }\r\n                AppState.inputFormat = modeName;\r\n                const aceMode = getAceEditorMode(modeName);\r\n                if (aceMode) {\r\n                    const editor = AppState.AceEditor[getCurrentAceId()];\r\n                    editor.session.setMode(aceMode);\r\n\r\n                    updateAppIndicatorBar();\r\n                    AppState.invalidate();\r\n\r\n                    return '';\r\n                } else {\r\n                    throw new Error('Invalid editor mode name: ' + modeName);\r\n                }\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AppState from '../appstate.js';\r\n\r\n\r\n\r\nexport function getSuggests() {\r\n    return {\r\n        'md table rows cols': null,\r\n        'md list rows': null,\r\n        'md o-list rows': null,\r\n        'md checkbox rows': null,\r\n        'md blockquote': null,\r\n        'md link': null,\r\n        'md image': null,\r\n        'md toc': null,\r\n        'md hr': null,\r\n        'md math': null,\r\n        'md inline-math': null,\r\n        'md mathjax': null,\r\n        'md code': null,\r\n        'md inline-code': null,\r\n        'md uml': null,\r\n        'md emoji': null,\r\n        'md italic': null,\r\n        'md italic-alt': null,\r\n        'md bold': null,\r\n        'md bold-alt': null,\r\n        'md strikethru': null,\r\n        'md mark': null,\r\n        'md ins': null,\r\n        'md footnote': null,\r\n        'md inline-footnote': null,\r\n        'md deflist': null,\r\n        'md lazy-deflist': null,\r\n        'md abbr': null,\r\n        'md pagebreak': null,\r\n        'md h1': null,\r\n        'md h1-no-toc': null,\r\n        'md h2': null,\r\n        'md h2-no-toc': null,\r\n        'md h3': null,\r\n        'md h4': null,\r\n        'md h5': null,\r\n        'md h6': null,\r\n        'md style': null,\r\n        'md comment': null,\r\n        'md char-entity-ref': null,\r\n        'md escape': null,\r\n        'md embedded-image': null,\r\n        'md embedded-uml': null,\r\n        'md embedded-style': null,\r\n        'md svg': null,\r\n        'md canvas': null,\r\n        'md line': null,\r\n        'md rect': null,\r\n        'md roundrect': null,\r\n        'md qr': null,\r\n        'md code128': null,\r\n        'md code39': null,\r\n        'md gtin13': null,\r\n        'md gtin8': null,\r\n        'md print-preview': null,\r\n        'md html5': null,\r\n    };\r\n}\r\n\r\n\r\nexport function getOperators({getCurrentAceId}) {\r\n    return ([\r\n        {\r\n            name: 'md',\r\n            // eslint-disable-next-line no-unused-vars\r\n            fn: (state, name) => (...args) => {\r\n                switch (args[0]) {\r\n                case 'table':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        const cols = Math.max(1, Number(args[2] || 3));\r\n                        let s = `\\n|${Array(cols).fill('').map((_, i) => `R_C${i}`).join('|')}|\\n|${\r\n                                    // eslint-disable-next-line no-unused-vars\r\n                                    Array(cols).fill('').map((_, i) => '----').join('|')}|\\n`;\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `|${Array(cols).fill('').map((_, i) => `R${r}C${i}`).join('|')}|\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'list':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `* item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'o-list':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `1. item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'checkbox':\r\n                    {\r\n                        const rows = Math.max(1, Number(args[1] || 3));\r\n                        let s = '\\n';\r\n                        for (let r = 0; r < rows; r++) {\r\n                            s += `* [${r % 2 === 0 ? 'X' : ' '}] item ${r}\\n`;\r\n                        }\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), s);\r\n                    }\r\n                    return '';\r\n                case 'blockquote': case 'quote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n> This is blockquote.\\n>> This is blockquote.\\n');\r\n                    }\r\n                    return '';\r\n                case 'link':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n[This is inline-style link with title](https://github.com/shellyln/mdne \"mdne\")\\n');\r\n                    }\r\n                    return '';\r\n                case 'image':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n![alt text](https://shellyln.github.io/assets/image/mdne-logo.svg \"Logo\" =300x100)\\n');\r\n                    }\r\n                    return '';\r\n                case 'toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n[[TOC]]\\n');\r\n                    }\r\n                    return '';\r\n                case 'hr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n----\\n');\r\n                    }\r\n                    return '';\r\n                case 'math':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n$$$\\nsum_(i=1)^n i^3=((n(n+1))/2)^2\\n$$$\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-math':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' $$sum_(i=1)^n i^3=((n(n+1))/2)^2$$ ');\r\n                    }\r\n                    return '';\r\n                case 'mathjax':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML\"' +\r\n                            ' crossorigin=\"anonymous\"></script>\\n');\r\n                    }\r\n                    return '';\r\n                case 'code':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n```javascript\\n\\nconst x = 0;\\n\\n```\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-code':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' `const x = 0` ');\r\n                    }\r\n                    return '';\r\n                case 'uml':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n@startuml\\n' +\r\n                            'Alice -> Bob: Authentication Request\\n' +\r\n                            'Bob --> Alice: Authentication Response\\n\\n' +\r\n                            'Alice -> Bob: Another authentication Request\\n' +\r\n                            'Alice <-- Bob: Another authentication Response\\n' +\r\n                            '@enduml\\n');\r\n                    }\r\n                    return '';\r\n                case 'emoji':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            ' :wink: :crush: :cry: :tear: :laughing: :yum: ');\r\n                    }\r\n                    return '';\r\n                case 'italic':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' *This is italic* ');\r\n                    }\r\n                    return '';\r\n                case 'italic-alt':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' _This is italic_ ');\r\n                    }\r\n                    return '';\r\n                case 'bold':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' **This is bold** ');\r\n                    }\r\n                    return '';\r\n                case 'bold-alt':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' __This is bold__ ');\r\n                    }\r\n                    return '';\r\n                case 'strikethrough': case 'strikethru':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ~~This is strikethrough~~ ');\r\n                    }\r\n                    return '';\r\n                case 'mark':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ==This is mark== ');\r\n                    }\r\n                    return '';\r\n                case 'ins':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), ' ++This is ins++ ');\r\n                    }\r\n                    return '';\r\n                case 'footnote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is footnote 1 link[^first].\\n[^first]: Footnote text.\\n');\r\n                    }\r\n                    return '';\r\n                case 'inline-footnote':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is inline footnote^[Text of inline footnote.].\\n');\r\n                    }\r\n                    return '';\r\n                case 'deflist':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nTerm 1\\n    ~ Definition 1a\\n    ~ Definition 1b\\n');\r\n                    }\r\n                    return '';\r\n                case 'lazy-deflist':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nTerm 1\\n:   Definition 1a\\nwith lazy continuation.\\n\\n' +\r\n                            '    paragraph 1\\n\\n        { code block }\\n    paragraph 3\\n' +\r\n                            ':   Definition 1b\\n\\n');\r\n                    }\r\n                    return '';\r\n                case 'abbr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\nThis is HTML abbreviation example.\\n*[HTML]: Hyper Text Markup Language\\n');\r\n                    }\r\n                    return '';\r\n                case 'pagebreak':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<div style=\"page-break-before:always\"></div>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h1':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n# This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h1-no-toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<p style=\"font-size: 2em; font-weight: bold; ' +\r\n                            'border-bottom: 1px solid #eaecef; padding-bottom: .3em;\">' +\r\n                            'This is a header.</p>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h2':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n## This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h2-no-toc':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<p style=\"font-size: 1.5em; font-weight: bold; ' +\r\n                            'border-bottom: 1px solid #eaecef; padding-bottom: .3em;\">' +\r\n                            'This is a header.</p>\\n');\r\n                    }\r\n                    return '';\r\n                case 'h3':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h4':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n#### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h5':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n##### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'h6':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n###### This is a header.\\n');\r\n                    }\r\n                    return '';\r\n                case 'style':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n<style>h4 { background-color: cyan; }</style>\\n');\r\n                    }\r\n                    return '';\r\n                case 'comment':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(), '\\n<!-- This is a comment. -->\\n');\r\n                    }\r\n                    return '';\r\n                case 'char-entity-ref':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n&amp;&lt;&gt;&quot;&apos;&nbsp;\\n' +\r\n                            '&sup3;&frac34;&plusmn;&times;&divide;&para;&sect;&middot;&laquo;&raquo;\\n' +\r\n                            '&copy;&reg;&trade;&yen;&euro;$&curren;&pound;&cent;\\n');\r\n                    }\r\n                    return '';\r\n                case 'escape':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n\\\\<style>h5 { background-color: cyan; }\\\\</style>\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-image':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Image(@(src\"https://shellyln.github.io/assets/image/mdne-logo.svg\")(width 300)(height 100)(unit \"px\")(alt \"Logo\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-uml':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(PlantUml \"\"\"\\n' +\r\n                            'Alice -> Bob: Authentication Request\\n' +\r\n                            'Bob --> Alice: Authentication Response\\n\\n' +\r\n                            'Alice -> Bob: Another authentication Request\\n' +\r\n                            'Alice <-- Bob: Another authentication Response\\n' +\r\n                            '\"\"\")\\n');\r\n                    }\r\n                    return '';\r\n                case 'embedded-style':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Style(@(src\"https://shellyln.github.io/menneu/assets/style/playground.css\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'svg':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n%%%(Svg (@ (width 100)(height 100)(unit \"mm\"))\\n\\n)\\n');\r\n                    }\r\n                    return '';\r\n                case 'canvas':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Canvas (-> (ctx) (::ctx@moveTo  10  10)\\n' +\r\n                            '                  (::ctx@lineTo 190 190)\\n' +\r\n                            '                  (::ctx:strokeStyle=\"rgba(255,128,0,0.2)\")\\n' +\r\n                            '                  (::ctx@stroke)\\n' +\r\n                            '                  (::ctx@beginPath) ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'line':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Line (@(x 0)(y 0)(lineWidth 1)(stroke)(strokeColor \"blue\")' +\r\n                            '(points ($list 10 10 20 40 30 90 ))))\\n');\r\n                    }\r\n                    return '';\r\n                case 'rect':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Rect(@(x 5)(y 5)(width 70)(height 20)(lineWidth 3)' +\r\n                            '(stroke)(strokeColor \"blue\")(fill)(fillColor \"darkblue\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'roundrect':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(RoundRect(@(x 5)(y 5)(width 70)(height 20)(lineWidth 3)(r 3)' +\r\n                            '(stroke)(strokeColor \"blue\")(fill)(fillColor \"darkblue\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'qr':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n(Qr (@ (x 5)(y 7)(cellSize 0.8)(fill)(fillColor \"darkblue\")(data \"Hello\")))\\n');\r\n                    }\r\n                    return '';\r\n                case 'code128':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Code128 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '            (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"Hello\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'code39':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Code39 (@ (x 5)(y 7)(narrowWidth 0.66)(wideWidth 1.32)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '           (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"HELLO\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'gtin13':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Gtin13 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '           (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"123456789012\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'gtin8':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '\\n' +\r\n                            '(Gtin8 (@ (x 5)(y 7)(elementWidth 0.66)(height 15)(quietHeight 0)(textHeight 7)\\n' +\r\n                            '          (font \"7px \\'OCRB\\'\")(fill)(fillColor \"darkblue\")(data \"1234567\") ))\\n');\r\n                    }\r\n                    return '';\r\n                case 'print-preview':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '<script>window.print()</script>');\r\n                    }\r\n                    return '';\r\n                case 'html5':\r\n                    {\r\n                        const editor = AppState.AceEditor[getCurrentAceId()];\r\n                        editor.session.insert(editor.getCursorPosition(),\r\n                            '(Html5\\n' +\r\n                            '(head (title \"Untitled\")\\n' +\r\n                            '      (meta (@ (charset \"UTF-8\")))\\n' +\r\n                            '      (NormalizeCss)\\n' +\r\n                            '      (PaperCss)\\n' +\r\n                            '\\n' +\r\n                            '    (style (@ (dangerouslySetInnerHTML \"\"\"$concat\\n' +\r\n                            '        /* You can write additional styles here. */\\n' +\r\n                            '        /*\\n' +\r\n                            '        body {\\n' +\r\n                            '            background-color: blue;\\n' +\r\n                            '        }\\n' +\r\n                            '        */\\n' +\r\n                            '    \"\"\") )))\\n' +\r\n                            '\\n' +\r\n                            '(body (@ (class \"A4\"))\\n' +\r\n                            '    (section (@ (class \"sheet padding-10mm\"))\\n' +\r\n                            '        Hello!\\n' +\r\n                            '        )))\\n');\r\n                    }\r\n                    return '';\r\n                default:\r\n                    return '';\r\n                }\r\n            },\r\n        }\r\n    ]);\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { nativeConfirmSync,\r\n         saveFile,\r\n         getStartupFile,\r\n         openURL,\r\n         openNewWindow }         from '../libs/backend-api.js';\r\nimport { notifyEditorDirty,\r\n         alertWrap,\r\n         confirmWrap }           from '../libs/backend-wrap.js';\r\nimport AppState,\r\n       { updateAppIndicatorBar } from '../libs/appstate.js';\r\nimport start                     from '../libs/start.js';\r\nimport { getInputFormat,\r\n         isPreviewable,\r\n         getAceEditorMode }      from '../libs/modes.js';\r\nimport { escapeHtml }            from '../libs/escape.js';\r\nimport commandRunner             from '../libs/cmdrunner.js';\r\n\r\nimport { getSuggests as getAppSuggests,\r\n         getOperators as getAppOperators }  from '../libs/commands/app.js';\r\nimport { getSuggests as getModeSuggests,\r\n         getOperators as getModeOperators } from '../libs/commands/mode.js';\r\nimport { getSuggests as getMdSuggests,\r\n         getOperators as getMdOperators }   from '../libs/commands/md.js';\r\n\r\n\r\n\r\nconst LOCAL_STORAGE_KEY = '_mdne_app_settings__Xlnuf3Ao';\r\nconst LOCAL_STORAGE_VERSION = 2;\r\nconst LOCAL_STORAGE_INITIAL = `{\"version\":${LOCAL_STORAGE_VERSION},\"editor\":{},\"renderer\":{}}`;\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.state.stretched = true;\r\n        this.state.syncPreview = false;\r\n        this.state.isPdf = false;\r\n        this.state.useScripting = false;\r\n        this.state.currentAceId = 'editor';\r\n        this.state.splitterMoving = false;\r\n        this.state.darkThemePreview = false;\r\n        this.state.counter = 0;\r\n\r\n        this.aceFontSize = 14;\r\n        this.scheduleRerenderPreview = false;\r\n        this.savedEditorStyleWidth = null;\r\n        this.savedPreviewScrollY = 0;\r\n\r\n        this.commandBoxRef = React.createRef();\r\n        this.editorRef = React.createRef();\r\n        this.editorPlaceholderRef = React.createRef();\r\n        this.splitterRef = React.createRef();\r\n        this.rootRef = React.createRef();\r\n        this.fileDropDialogRef = React.createRef();\r\n        this.fileOpenDialogRef = React.createRef();\r\n        this.fileSaveDialogRef = React.createRef();\r\n        this.settingsDialogRef = React.createRef();\r\n\r\n        AppState.invalidate = () => this.setState({counter: this.state.counter + 1});\r\n\r\n        window.onbeforeunload = (ev) => {\r\n            // TODO: check all Ace editors\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            const isClean = editor.session.getUndoManager().isClean();\r\n            if (! isClean) {\r\n                if (nativeConfirmSync) {\r\n                    // NOTE: do not show prompt here on electron environment.\r\n                } else {\r\n                    ev.preventDefault(); \r\n                    return '';\r\n                }\r\n            }\r\n            return void 0;\r\n        }\r\n\r\n        commandRunner.install(config => {\r\n            const getCurrentAceId = () => this.state.currentAceId;\r\n            const operators = [\r\n                ...getAppOperators({app: this}),\r\n                ...getModeOperators({getCurrentAceId}),\r\n                ...getMdOperators({getCurrentAceId}),\r\n            ];\r\n            config.funcs = (config.funcs || []).concat(operators);\r\n            // config.macros = (config.macros || []).concat(macros);\r\n            // config.symbols = (config.symbols || []).concat(symbols);\r\n            return config;\r\n        });\r\n        // commandRunner.setGlobals({});\r\n    }\r\n\r\n    componentDidMount() {\r\n        {\r\n            const elems = document.querySelectorAll('.dropdown-trigger');\r\n            /* const instances = */ M.Dropdown.init(elems, {\r\n                constrainWidth: false,\r\n            });\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('.tooltipped');\r\n            /* const instances = */ M.Tooltip.init(elems, {});\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('select');\r\n            /* const instances = */ M.FormSelect.init(elems, {});\r\n        }\r\n        {\r\n            const elems = document.querySelectorAll('.command-box-input.autocomplete');\r\n            /* const instances = */ M.Autocomplete.init(elems, {\r\n                data: Object.assign(\r\n                    getAppSuggests(),\r\n                    getModeSuggests(),\r\n                    getMdSuggests(),\r\n                ),\r\n            });\r\n        }\r\n        // eslint-disable-next-line no-undef\r\n        if (window.dialogPolyfill) {\r\n            // initialize polyfill emulated elements\r\n            const dialogs = document.querySelectorAll('dialog');\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                const dialog = dialogs[i];\r\n                // eslint-disable-next-line no-undef\r\n                dialogPolyfill.registerDialog(dialog);\r\n            }\r\n        }\r\n\r\n        {\r\n            const appSettingsStr = window.localStorage.getItem(LOCAL_STORAGE_KEY) || LOCAL_STORAGE_INITIAL;\r\n            const appSettings = JSON.parse(appSettingsStr);\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.setOptions(appSettings.editor ?? {});\r\n            this.setState({\r\n                darkThemePreview: appSettings?.renderer?.darkThemePreview ?? false,\r\n            });\r\n        }\r\n\r\n        document.onkeyup = (ev) => {\r\n            if (ev.ctrlKey && ev.shiftKey && ev.keyCode === 79) {\r\n                // Ctrl+Shift+O\r\n                this.commandBoxRef.current.focus();\r\n            }\r\n        };\r\n\r\n        const setEditorNewFile = () => {\r\n            AppState.inputFormat = 'md';\r\n            notifyEditorDirty(false);\r\n\r\n            updateAppIndicatorBar();\r\n\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.clearSelection();\r\n            editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n            editor.setValue('');\r\n            editor.clearSelection();\r\n            editor.session.getUndoManager().markClean();\r\n\r\n            this.setState({counter: this.state.counter + 1});\r\n        };\r\n\r\n        getStartupFile()\r\n        .then(file => {\r\n            if (file) {\r\n                AppState.filePath = file.path;\r\n                AppState.inputFormat = getInputFormat(AppState.filePath);\r\n                notifyEditorDirty(false);\r\n    \r\n                updateAppIndicatorBar();\r\n    \r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.clearSelection();\r\n                editor.session.setMode(getAceEditorMode(AppState.inputFormat));\r\n                editor.setValue(file.text);\r\n                editor.clearSelection();\r\n                editor.session.getUndoManager().markClean();\r\n                editor.moveCursorTo(0, 0);\r\n\r\n                this.setState({counter: this.state.counter + 1});\r\n            } else {\r\n                setEditorNewFile();\r\n                this.openFileOpenDialog();\r\n            }\r\n        })\r\n        // eslint-disable-next-line no-unused-vars\r\n        .catch(e => {\r\n            setEditorNewFile();\r\n            this.openFileOpenDialog();\r\n        });\r\n    }\r\n\r\n    afterFileOpen() {\r\n        this.rootRef.current.contentWindow.location.replace('empty.html');\r\n\r\n        this.setState({stretched: true});\r\n        this.savedEditorStyleWidth = null;\r\n        this.savedPreviewScrollY = 0;\r\n        this.editorRef.current.outerWrapRef.current.style.width = null;\r\n        this.editorPlaceholderRef.current.style.width = null;\r\n\r\n        document.activeElement.blur();\r\n\r\n        setTimeout(() => {\r\n            // adjust wrapping and horizontal scroll bar\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.resize(true);\r\n        }, 30);\r\n    }\r\n\r\n    openFileOpenDialog() {\r\n        this.fileDropDialogRef.current.showModal({\r\n            aceId: this.state.currentAceId,\r\n            fileOpenDialog: this.fileOpenDialogRef.current,\r\n        }, () => this.afterFileOpen());\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleFileOpenClick(ev) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        const isClean = editor.session.getUndoManager().isClean();\r\n        if (! isClean) {\r\n            if (! await confirmWrap('Changes you made may not be saved.\\nAre you sure want to discard changes?')) {\r\n                return;\r\n            }\r\n        }\r\n        this.openFileOpenDialog();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleStretchedClick(ev) {\r\n        this.setState({stretched: !this.state.stretched});\r\n        if (this.state.stretched) {\r\n            // collapsed\r\n            this.editorRef.current.outerWrapRef.current.style.width = this.savedEditorStyleWidth;\r\n            this.editorPlaceholderRef.current.style.width = this.savedEditorStyleWidth;\r\n            setTimeout(() => this.rootRef.current.contentWindow.scrollTo(\r\n                this.rootRef.current.contentWindow.scrollX,\r\n                this.savedPreviewScrollY,\r\n            ), 30);\r\n        } else {\r\n            // stretched\r\n            try {\r\n                this.savedEditorStyleWidth = this.editorRef.current.outerWrapRef.current.style.width;\r\n                this.savedPreviewScrollY = this.rootRef.current.contentWindow.scrollY;\r\n            } catch (e) {\r\n                // NOTE: ignore errors\r\n            }\r\n            this.editorRef.current.outerWrapRef.current.style.width = null;\r\n            this.editorPlaceholderRef.current.style.width = null;\r\n        }\r\n        document.activeElement.blur();\r\n\r\n        setTimeout(() => {\r\n            // adjust wrapping and horizontal scroll bar\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.resize(true);\r\n        }, 30);\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSyncPreviewClick(ev) {\r\n        this.setState({syncPreview: !this.state.syncPreview});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleIsPdfClick(ev) {\r\n        this.setState({isPdf: !this.state.isPdf});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleUseScriptingClick(ev) {\r\n        this.setState({useScripting: !this.state.useScripting});\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleShowClick(ev) {\r\n        if (this.state.stretched) {\r\n            this.editorRef.current.outerWrapRef.current.style.width = this.savedEditorStyleWidth;\r\n            this.editorPlaceholderRef.current.style.width = this.savedEditorStyleWidth;\r\n        }\r\n\r\n        if (this.state.isPdf &&\r\n            (window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER ||\r\n             window._MDNE_BACKEND_CAPS_NO_PDF_PREVIEW_PLUGIN)) {\r\n            // do nothing\r\n        } else {\r\n            this.setState({stretched: false});\r\n        }\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        if (! isPreviewable(AppState.inputFormat)) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`Preview of ${AppState.inputFormat} format is not supported.`);\r\n            this.rootRef.current.contentWindow.location.replace('error.html');\r\n        } else {\r\n            if (this.state.isPdf) {\r\n                start(editor.getValue(), {\r\n                    inputFormat: AppState.inputFormat,\r\n                    outputFormat: 'pdf',\r\n                    rawInput:\r\n                        (AppState.inputFormat !== 'md' &&\r\n                        AppState.inputFormat !== 'html') ||\r\n                            this.state.useScripting ? false : true,\r\n                }, null, AppState.filePath)\r\n                .then(outputUrl => {\r\n                    this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                })\r\n                .catch(async (e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(e);\r\n                    this.rootRef.current.contentWindow.location.replace('error.html');\r\n                });\r\n            } else {\r\n                start(editor.getValue(), {\r\n                    inputFormat: AppState.inputFormat,\r\n                    outputFormat: 'html',\r\n                    rawInput:\r\n                        (AppState.inputFormat !== 'md' &&\r\n                        AppState.inputFormat !== 'html') ||\r\n                            this.state.useScripting ? false : true,\r\n                    darkTheme: this.state.darkThemePreview ? true : false,\r\n                }, null, AppState.filePath)\r\n                .then(outputUrl => {\r\n                    this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                    setTimeout(() => this.rootRef.current.contentWindow.scrollTo(\r\n                        this.rootRef.current.contentWindow.scrollX,\r\n                        Math.min(\r\n                            this.savedPreviewScrollY,\r\n                            this.rootRef.current.contentWindow.document.documentElement?.scrollHeight\r\n                                ?? this.savedPreviewScrollY,\r\n                        ),\r\n                    ), 30);\r\n                })\r\n                .catch(async (e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(e);\r\n                    this.rootRef.current.contentWindow.location.replace('error.html');\r\n                });\r\n            }\r\n\r\n            setTimeout(() => {\r\n                // adjust wrapping and horizontal scroll bar\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.resize(true);\r\n            }, 30);\r\n        }\r\n        document.activeElement.blur();\r\n    }\r\n\r\n    handleSaveClick(ev) {\r\n        if (AppState.filePath) {\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            editor.execCommand('save');\r\n        } else {\r\n            this.handleSaveAsClick(ev);\r\n        }\r\n    }\r\n\r\n    async fileSaveAs(currentDir, fileName) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        const fileInfo = await saveFile(editor.getValue(), currentDir, fileName);\r\n        // eslint-disable-next-line require-atomic-updates\r\n        AppState.filePath = fileInfo.path;\r\n        // eslint-disable-next-line require-atomic-updates\r\n        AppState.inputFormat = getInputFormat(AppState.filePath);\r\n\r\n        editor.session.getUndoManager().markClean();\r\n        notifyEditorDirty(false);\r\n        updateAppIndicatorBar();\r\n\r\n        this.setState({counter: this.state.counter + 1});\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSaveAsClick(ev) {\r\n        this.fileSaveDialogRef.current.showModal({\r\n            title: 'Save as',\r\n            currentAceId: this.state.currentAceId,\r\n            currentFilePath: AppState.filePath,\r\n            forExport: false,\r\n            fileTypes: [{\r\n                value: 'md',\r\n                text: 'Markdown (*.md, *.markdown)',\r\n                exts: ['.md', '.markdown'],\r\n            },{\r\n                value: 'html',\r\n                text: 'HTML (*.html, *.htm)',\r\n                exts: ['.html', '.htm'],\r\n            },{\r\n                value: '*',\r\n                text: 'All files (*.*)',\r\n                exts: [],\r\n            }],\r\n        }, async (currentDir, fileName) => {\r\n            try {\r\n                await this.fileSaveAs(currentDir, fileName);\r\n            } catch (e) {\r\n                await alertWrap(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async fileExport(currentDir, fileName) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n        const ext = fileName.lastIndexOf('.') >= 0 ?\r\n            fileName.toLowerCase().slice(fileName.lastIndexOf('.')) : '';\r\n        await start(editor.getValue(), {\r\n            inputFormat: AppState.inputFormat,\r\n            outputFormat: ext === '.pdf' ? 'pdf' : 'html',\r\n            rawInput:\r\n                (AppState.inputFormat !== 'md' &&\r\n                 AppState.inputFormat !== 'html') ||\r\n                    this.state.useScripting ? false : true,\r\n        }, null, AppState.filePath, currentDir, fileName);\r\n    }\r\n\r\n    getEntireText() {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        return editor.getValue();\r\n    }\r\n\r\n    getSelectedText() {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        return editor.getSelectedText();\r\n    }\r\n\r\n    insertText(text) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        editor.session.insert(editor.getCursorPosition(), text);\r\n        return text;\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    async handleExportClick(ev) {\r\n        if (! isPreviewable(AppState.inputFormat)) {\r\n            await alertWrap(`Preview of ${AppState.inputFormat} format is not supported.`);\r\n        } else {\r\n            this.fileSaveDialogRef.current.showModal({\r\n                title: 'Export',\r\n                currentAceId: this.state.currentAceId,\r\n                currentFilePath: AppState.filePath,\r\n                forExport: true,\r\n                fileTypes: [].concat(\r\n                    (window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER ? [] : [{\r\n                        value: 'pdf',\r\n                        text: 'PDF (*.pdf)',\r\n                        exts: ['.pdf'],\r\n                    }]),\r\n                    [{\r\n                        value: 'html',\r\n                        text: 'HTML (*.html, *.htm)',\r\n                        exts: ['.html', '.htm'],\r\n                    },{\r\n                        value: '*',\r\n                        text: 'All files (*.*)',\r\n                        exts: [],\r\n                    }]\r\n                ),\r\n            }, async (currentDir, fileName) => {\r\n                try {\r\n                    await this.fileExport(currentDir, fileName);\r\n                } catch (e) {\r\n                    await alertWrap(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleSettingsClick(ev) {\r\n        const editor = AppState.AceEditor[this.state.currentAceId];\r\n        const appSettingsStr = window.localStorage.getItem(LOCAL_STORAGE_KEY) || LOCAL_STORAGE_INITIAL;\r\n\r\n        this.settingsDialogRef.current.showModal(\r\n            {\r\n                editor: editor.getOptions(),\r\n                renderer: JSON.parse(appSettingsStr).renderer ?? {},\r\n            },\r\n            (settings) => {\r\n                settings.version = LOCAL_STORAGE_VERSION;\r\n                editor.setOptions(settings.editor);\r\n                window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(settings));\r\n                this.setState({\r\n                    darkThemePreview: settings?.renderer?.darkThemePreview ?? false,\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleAceEditorOnChange(o) {\r\n        if (! AppState.fileChanged) {\r\n            const editor = AppState.AceEditor[this.state.currentAceId];\r\n            if (!(editor.curOp && editor.curOp.command.name)) {\r\n                return;\r\n            }\r\n            notifyEditorDirty(true);\r\n            updateAppIndicatorBar();\r\n            // NOTE: Don't update state!\r\n        }\r\n\r\n        if (!this.state.stretched && this.state.syncPreview && !this.state.isPdf) {\r\n            if (! isPreviewable(AppState.inputFormat)) {\r\n                return;\r\n            }\r\n            if (!this.scheduleRerenderPreview) {\r\n                this.scheduleRerenderPreview = true;\r\n                setTimeout(() => {\r\n                    const editor = AppState.AceEditor[this.state.currentAceId];\r\n\r\n                    start(editor.getValue(), {\r\n                        inputFormat: AppState.inputFormat,\r\n                        outputFormat: 'html',\r\n                        rawInput:\r\n                            (AppState.inputFormat !== 'md' &&\r\n                             AppState.inputFormat !== 'html') ||\r\n                                this.state.useScripting ? false : true,\r\n                        darkTheme: this.state.darkThemePreview ? true : false,\r\n                    }, null, AppState.filePath)\r\n                    .then(outputUrl => {\r\n                        if (outputUrl.startsWith('data:') || outputUrl.startsWith('blob:')) {\r\n                            // emulation\r\n                            this.rootRef.current.contentWindow.location.replace(outputUrl);\r\n                        } else {\r\n                            // carlo\r\n                            this.rootRef.current.contentWindow.location.reload(true);\r\n                        }\r\n                        this.scheduleRerenderPreview = false;\r\n                    })\r\n                    .catch(e => {\r\n                        this.scheduleRerenderPreview = false;\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(e);\r\n                    });\r\n                }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleAceEditorOnChangeScrollTop(y, totalHeight) {\r\n        if (!this.state.stretched && !this.state.isPdf) {\r\n            try {\r\n                const w = y / totalHeight;\r\n                const scrollY = this.rootRef.current.contentWindow.document.documentElement.scrollHeight * w;\r\n                this.rootRef.current.contentWindow.scrollTo(\r\n                    this.rootRef.current.contentWindow.scrollX,\r\n                    scrollY,\r\n                );\r\n                this.savedPreviewScrollY = scrollY;\r\n            } catch (e) {\r\n                // emulation\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleAceEditorOnChangeScrollLeft(x) {\r\n        // if (!this.state.stretched && !this.state.isPdf) {\r\n        //     this.rootRef.current.contentWindow.scrollTo(x, this.rootRef.current.contentWindow.scrollTop);\r\n        // }\r\n    }\r\n\r\n    handleCommandBoxOnKeyDown(ev) {\r\n        const clearBox = () => {\r\n            this.commandBoxRef.current.value = '';\r\n            const instance = M.Autocomplete.getInstance(\r\n                document.querySelectorAll('.command-box-input.autocomplete')[0]);\r\n            instance.close();\r\n        };\r\n\r\n        if (ev.keyCode === 13) {\r\n            if (this.commandBoxRef.current.value.trim() === '') {\r\n                clearBox();\r\n            } else {\r\n                const command = `(${this.commandBoxRef.current.value})`;\r\n                commandRunner(command)\r\n                .then(r => {\r\n                    clearBox();\r\n                    if (typeof r === 'string' && r.trim() === '') {\r\n                        return;\r\n                    }\r\n                    if (r === null || r === void 0) {\r\n                        return;\r\n                    }\r\n                    if (Array.isArray(r) && r.length === 0) {\r\n                        return;\r\n                    }\r\n                    M.toast({\r\n                        html: escapeHtml(String(r)).replace(/\\r?\\n/g, '<br>'),\r\n                        classes: 'teal darken-4',\r\n                    });\r\n                })\r\n                .catch(e => {\r\n                    clearBox();\r\n                    M.toast({\r\n                        html: escapeHtml(String(e)),\r\n                        classes: 'red darken-4',\r\n                    });\r\n                });\r\n            }\r\n        } else if (ev.keyCode === 27) {\r\n            clearBox();\r\n            document.activeElement.blur();\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    handleCommandBoxOnBlur(ev) {\r\n        M.Toast.dismissAll();\r\n    }\r\n\r\n    handleSplitterOnPointerDown(ev) {\r\n        this.setState({splitterMoving: true});\r\n        const moveHandler = (ev2) => {\r\n            const maxWidth = Math.max(Math.min(ev2.clientX - 5, window.innerWidth - 440), 400);\r\n            const width = `${Math.round(maxWidth / window.innerWidth * 100)}%`;\r\n            this.editorRef.current.outerWrapRef.current.style.width = width;\r\n            this.editorPlaceholderRef.current.style.width = width;\r\n        };\r\n        const upHandler = (ev2) => {\r\n            window.onpointermove = null;\r\n            window.onpointerup = null;\r\n            this.splitterRef.current.releasePointerCapture(ev2.pointerId);\r\n            this.setState({splitterMoving: false});\r\n            setTimeout(() => {\r\n                this.rootRef.current.contentWindow.scrollTo(\r\n                    this.rootRef.current.contentWindow.scrollX,\r\n                    this.savedPreviewScrollY,\r\n                );\r\n\r\n                // adjust wrapping and horizontal scroll bar\r\n                const editor = AppState.AceEditor[this.state.currentAceId];\r\n                editor.resize(true);\r\n            }, 30);\r\n        };\r\n        window.onpointermove = moveHandler;\r\n        window.onpointerup = upHandler;\r\n        this.splitterRef.current.setPointerCapture(ev.pointerId);\r\n    }\r\n\r\n    render() {\r\n        const isEmulation = window._MDNE_BACKEND_TYPE === 'BROWSER_EMULATION';\r\n        const ua = window.navigator.userAgent;\r\n        // NOTE: Chromium Edge treats as Chrome.\r\n        const isChrome =\r\n            ua.match(' Chrome/') &&\r\n            !ua.match(' CriOS/') &&\r\n            !ua.match(' OPR/') &&\r\n            !ua.match(' Presto/') &&\r\n            !ua.match(' Vivaldi/') &&\r\n            !ua.match(' Iron Safari/') &&\r\n            !ua.match(' Sleipnir/') &&\r\n            !ua.match(' Mobile Safari/');\r\n\r\n        return (lsx`\r\n        (Template\r\n            (div (@ (className \"AppMainMenuWrap\"))\r\n                (a (@ (className \"AppMainMenu dropdown-trigger btn-floating\")\r\n                      (data-target \"dropdown1\") )\r\n                    (i (@ (className \"AppMainMenuIcon material-icons large\")) \"dehaze\") )\r\n                (ul (@ (id \"dropdown1\")\r\n                       (className \"dropdown-content\") )\r\n                    (MenuItem (@ (icon \"add_box\")\r\n                                 (caption \"New window\")\r\n                                 (onClick ${() => { openNewWindow() }}) ))\r\n                    (MenuItem (@ (icon \"folder_open\")\r\n                                 (caption \"Open...\")\r\n                                 (onClick ${(ev) => this.handleFileOpenClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"save\")\r\n                                 (caption \"Save (Ctrl+S)\")\r\n                                 (onClick ${(ev) => this.handleSaveClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"save\")\r\n                                 (caption \"Save as...\")\r\n                                 (onClick ${(ev) => this.handleSaveAsClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"publish\")\r\n                                 (caption \"Export...\")\r\n                                 (onClick ${(ev) => this.handleExportClick(ev)}) ))\r\n                    (MenuDivider)\r\n                    (MenuItem (@ (icon \"find_in_page\")\r\n                                 (caption \"Find... (Ctrl+F)\")\r\n                                 (onClick ${() => {\r\n                                     const editor = AppState.AceEditor['editor'];\r\n                                     editor.execCommand('find');\r\n                                 }}) ))\r\n                    (MenuDivider)\r\n                    (MenuItem (@ (icon \"settings\")\r\n                                 (caption \"Settings...\")\r\n                                 (onClick ${(ev) => this.handleSettingsClick(ev)}) ))\r\n                    (MenuItem (@ (icon \"help_outline\")\r\n                                 (caption \"Help\")\r\n                                 (onClick ${() => openURL('https://github.com/shellyln/mdne')}) )) )\r\n                (Switch (@ (caption \"Sync preview\")\r\n                           (offText \"OFF\")\r\n                           (onText  \"ON\")\r\n                           (elClass \"hide-on-smallest\")\r\n                           (checked ${this.state.syncPreview})\r\n                           (onClick ${(ev) => this.handleSyncPreviewClick(ev)}) ))\r\n                ($if ${!window._MDNE_BACKEND_CAPS_NO_PDF_RENDERER}\r\n                    (Switch (@ (caption \"Preview format\")\r\n                            (offText \"HTML\")\r\n                            (onText  \"PDF\")\r\n                            (elClass \"hide-on-smallest\")\r\n                            (checked ${this.state.isPdf})\r\n                            (onClick ${(ev) => this.handleIsPdfClick(ev)}) )))\r\n                (Switch (@ (caption \"Scripting\")\r\n                           (offText \"OFF\")\r\n                           (onText  \"ON\")\r\n                           (elClass \"hide-on-smallest\")\r\n                           (checked ${this.state.useScripting})\r\n                           (onClick ${(ev) => this.handleUseScriptingClick(ev)}) ))\r\n                (span (@ (style (flexGrow \"2\"))) \" \")\r\n                (div (@ (className \"row command-box-input-outer\") )\r\n                    (div (@ (className \"input-field col s9 command-box-input-inner\") )\r\n                        (input (@ (ref ${this.commandBoxRef})\r\n                                  (className \"CommandBoxInput command-box-input autocomplete\")\r\n                                  (type \"text\")\r\n                                  (placeholder ($concat\r\n                                      \"Command palette    (\" ${\r\n                                      isEmulation && isChrome ? 'Alt+Ctrl+Shift+O' :'Ctrl+Shift+O'\r\n                                      } \")\" ))\r\n                                  (spellcheck \"false\")\r\n                                  (onBlur ${(ev) => this.handleCommandBoxOnBlur(ev)})\r\n                                  (onKeyDown ${(ev) => this.handleCommandBoxOnKeyDown(ev)}) ))))\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px\") )\r\n                           (className \"btn tooltipped\")\r\n                           (data-tooltip \"Update preview\")\r\n                           (onClick ${(ev) => this.handleShowClick(ev)}) )\r\n                    (i (@ (className \"material-icons\")) \"visibility\") )\r\n                (button (@ (style (textTransform \"none\")\r\n                                  (margin \"0 3px\") )\r\n                           (className \"btn tooltipped\")\r\n                           (data-tooltip \"Toggle preview\")\r\n                           (onClick ${(ev) => this.handleStretchedClick(ev)}) )\r\n                    (i (@ (className \"material-icons\")) \"chrome_reader_mode\") ))\r\n            (div (@ (className \"AppMainContentWrap\"))\r\n                (AceEditor (@ (ref ${this.editorRef})\r\n                              (id \"editor\")\r\n                              (stretched ${this.state.stretched ? true: false})\r\n                              (collapsed ${this.state.splitterMoving ? true: false})\r\n                              (fontSize ${this.aceFontSize})\r\n                              (onSaveAs ${(o) => this.handleSaveAsClick(o)})\r\n                              (onChange ${(o) => this.handleAceEditorOnChange(o)})\r\n                              (onChangeScrollTop ${(y, totalHeight) => this.handleAceEditorOnChangeScrollTop(y, totalHeight)})\r\n                              (onChangeScrollLeft ${(x) => this.handleAceEditorOnChangeScrollLeft(x)}) ))\r\n                (div (@ (ref ${this.editorPlaceholderRef})\r\n                        (className ($concat \"AceEditorPlaceholder\"\r\n                                   ${this.state.splitterMoving ? \"\" : \" collapsed\"}) ) ))\r\n                (div (@ (ref ${this.splitterRef})\r\n                        (className ($concat \"Splitter\"\r\n                                   ${this.state.stretched ? \" collapsed\" : \"\"}))\r\n                        (onPointerDown ${(ev) => this.handleSplitterOnPointerDown(ev)}) ))\r\n                (div (@ (className ($concat \"OutputIframePlaceholder\"\r\n                                   ${this.state.splitterMoving ? \"\" : \" collapsed\"}) ) ))\r\n                (iframe (@ (ref ${this.rootRef})\r\n                           (src \"empty.html\")\r\n                           (style (background-color ${this.state.darkThemePreview && AppState.inputFormat === 'md' ? '#1b1f23' : 'white'}))\r\n                           ; (sandbox \"\")\r\n                           (className ($concat \"OutputIframe\"\r\n                                      ${this.state.stretched || this.state.splitterMoving ? \" collapsed\" : \"\"}) ) ))\r\n                (div (@ (id \"appIndicatorBar\")\r\n                        (className \"AppIndicatorBar\")) \"\") )\r\n            (FileDropDialog (@ (ref ${this.fileDropDialogRef})))\r\n            (FileOpenDialog (@ (ref ${this.fileOpenDialogRef})))\r\n            (FileSaveDialog (@ (ref ${this.fileSaveDialogRef})))\r\n            (SettingsDialog (@ (ref ${this.settingsDialogRef}))) )`\r\n        );\r\n    }\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport AceEditor       from '../components/aceeditor.js';\r\nimport FileDropDialog  from '../components/filedropdialog.js';\r\nimport FileOpenDialog  from '../components/fileopendialog.js';\r\nimport FileSaveDialog  from '../components/filesavedialog.js';\r\nimport SettingsDialog  from '../components/settingsdialog.js';\r\nimport { MenuItem,\r\n         MenuDivider,\r\n         Switch }      from '../components/ui.js';\r\nimport App             from '../components/app.js';\r\n\r\n\r\n\r\nconst lsx_ = liyad.LSX({\r\n    jsx: React.createElement,\r\n    jsxFlagment: React.Fragment,\r\n    components: {\r\n        AceEditor,\r\n        FileDropDialog,\r\n        FileOpenDialog,\r\n        FileSaveDialog,\r\n        SettingsDialog,\r\n        MenuItem,\r\n        MenuDivider,\r\n        Switch,\r\n        App,\r\n    },\r\n});\r\n\r\nexport default lsx_;\r\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { initBackend } from './libs/remote.js';\nimport lsx_            from './libs/lsx.js';\n\n\n\nwindow.lsx = lsx_;\n\n\n(async () => {\n    await initBackend();\n    ReactDOM.render(lsx`(App)`, document.getElementById('app'));\n})();\n"],"sourceRoot":""}