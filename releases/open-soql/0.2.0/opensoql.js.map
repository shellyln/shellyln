{"version":3,"sources":["webpack://opensoql/webpack/universalModuleDefinition","webpack://opensoql/webpack/bootstrap","webpack://opensoql/./node_modules/fruitsconfits/src/lib/object-parser.ts","webpack://opensoql/./node_modules/fruitsconfits/src/lib/parser.ts","webpack://opensoql/./node_modules/fruitsconfits/src/lib/string-parser.ts","webpack://opensoql/./node_modules/fruitsconfits/src/lib/types.ts","webpack://opensoql/./src/builder.ts","webpack://opensoql/./src/filters.ts","webpack://opensoql/./src/index.ts","webpack://opensoql/./src/lib/cache.ts","webpack://opensoql/./src/lib/call.ts","webpack://opensoql/./src/lib/compiler.ts","webpack://opensoql/./src/lib/csv-parser.ts","webpack://opensoql/./src/lib/datetime-util.ts","webpack://opensoql/./src/lib/functions.ts","webpack://opensoql/./src/lib/parser.ts","webpack://opensoql/./src/lib/prepare.ts","webpack://opensoql/./src/lib/run-dml.ts","webpack://opensoql/./src/lib/run-query.ts","webpack://opensoql/./src/lib/util.ts","webpack://opensoql/./src/resolvers.ts","webpack://opensoql/./src/sort.ts","webpack://opensoql/./src/types.ts"],"names":[],"mappings":"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","file":"opensoql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"opensoql\"] = factory();\n\telse\n\t\troot[\"opensoql\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { ParserFnWithCtx } from './types';\r\nimport { zeroWidth,\r\n         zeroWidthError,\r\n         beginning,\r\n         end,\r\n         quantify,\r\n         first,\r\n         or,\r\n         transform,\r\n         lookAhead,\r\n         lookBehind,\r\n         ApplyProductionRulesArg,\r\n         applyProductionRules,\r\n         makeProgram } from './parser';\r\n\r\n\r\n\r\nexport function objSequence<T extends ArrayLike<T[number]>, C, R>(\r\n        helper: (token: T[number]) => R,\r\n        comparator: (a: T[number], b: T[number]) => boolean,\r\n        ): (needle: T) => ParserFnWithCtx<T, C, R> {\r\n\r\n    return (needle => {\r\n        return (input => {\r\n            const len = Math.max(0, input.end - input.start);\r\n            let matched = true;\r\n\r\n            if (len >= needle.length) {\r\n                for (let i = 0; i < needle.length; i++) {\r\n                    if (! comparator(input.src[input.start + i], needle[i])) {\r\n                        matched = false;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                matched = false;\r\n            }\r\n\r\n            return (matched ? {\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + needle.length,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(needle)],\r\n            } : {\r\n                succeeded: false,\r\n                error: false,\r\n                src: input.src,\r\n                pos: input.start,\r\n                message: `operator \"objSequence(${needle})\"`,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function objClass<T extends ArrayLike<T[number]>, C, R>(\r\n        helper: (token: T[number]) => R,\r\n        comparator: (a: T[number], b: T[number]) => boolean,\r\n        ): (...needles: Array<T[number]>) => ParserFnWithCtx<T, C, R> {\r\n\r\n    // NOTE: <T> version `needles` type is `T`.\r\n    return ((...needles) => {\r\n        return (input => {\r\n            const len = Math.max(0, input.end - input.start);\r\n            let index = -1;\r\n\r\n            const succeeded = len > 0 ? needles.some((needle, idx) => {\r\n                if (comparator(input.src[input.start], needle)) {\r\n                    index = idx;\r\n                    return true;\r\n                }\r\n            }) : false;\r\n\r\n            return (succeeded ? {\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + 1,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(needles[index])],\r\n            } : {\r\n                succeeded: false,\r\n                error: false,\r\n                src: input.src,\r\n                pos: input.start,\r\n                message: `operator \"objClass(${needles.join(',')})\"`,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function objClassNot<T extends ArrayLike<T[number]>, C, R>(\r\n    helper: (token: T[number]) => R,\r\n    comparator: (a: T[number], b: T[number]) => boolean,\r\n    ): (...needles: Array<T[number]>) => ParserFnWithCtx<T, C, R> {\r\n\r\n    // NOTE: <T> version `needles` type is `T`.\r\n    return ((...needles) => {\r\n        return (input => {\r\n            const len = Math.max(0, input.end - input.start);\r\n\r\n            if (len > 0) {\r\n                for (const needle of needles) {\r\n                    let matched = true;\r\n\r\n                    if (! comparator(input.src[input.start], needle)) {\r\n                        matched = false;\r\n                        break;\r\n                    }\r\n\r\n                    if (matched) {\r\n                        return ({\r\n                            succeeded: false,\r\n                            error: false,\r\n                            src: input.src,\r\n                            pos: input.start,\r\n                            message: `operator \"objClassNot(${needles.join(',')})\"`,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return ({\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + 1,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(input.src[input.start])],\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function objClassByNeedleFn<T extends ArrayLike<T[number]>, C, R>(\r\n        helper: (token: T[number]) => R,\r\n        comparator: (a: T[number], b: T[number]) => boolean,\r\n        ): (needle: (src: T[number]) => boolean) => ParserFnWithCtx<T, C, R> {\r\n\r\n    // NOTE: needles[i] should be one character. surrogate pair and/or ligature are accepted.\r\n    // NOTE: <T> version `needles` type is `T`.\r\n    return (needle => {\r\n        return (input => {\r\n            const len = Math.max(0, input.end - input.start);\r\n            const matched = len > 0 ? needle(input.src[input.start]) : false;\r\n\r\n            return (matched ? {\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + 1,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(input.src[input.start])],\r\n            } : {\r\n                succeeded: false,\r\n                error: false,\r\n                src: input.src,\r\n                pos: input.start,\r\n                message: `operator \"objClassByNeedleFn\"`,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function getObjectParsers<T extends ArrayLike<T[number]>, C, R>(\r\n        params: {\r\n            rawToToken: (rawToken: T[number]) => R,\r\n            concatTokens: (tokens: R[]) => R[],\r\n            comparator: (a: T[number], b: T[number]) => boolean,\r\n        }) {\r\n\r\n    const clsFn = objClassByNeedleFn<T, C, R>(params.rawToToken, params.comparator);\r\n\r\n    const isAny = clsFn(src => true);\r\n\r\n    // TODO: reduce unneccessary call for adding types.\r\n    return ({\r\n        seq: objSequence<T, C, R>(params.rawToToken, params.comparator),\r\n        cls: objClass<T, C, R>(params.rawToToken, params.comparator),\r\n        notCls: objClassNot<T, C, R>(params.rawToToken, params.comparator),\r\n        clsFn,\r\n        classes: {\r\n            any: isAny,\r\n        },\r\n        cat: transform<T, C, R>(params.concatTokens),\r\n        once: quantify<T, C, R>(1, 1),\r\n        repeat: quantify<T, C, R>(),\r\n        qty: (min?: number, max?: number) => quantify<T, C, R>(min, max), // TODO:\r\n        zeroWidth: (helper?: () => R) => zeroWidth<T, C, R>(helper),      // TODO:\r\n        err: (message: string) => zeroWidthError<T, C, R>(message),       // TODO:\r\n        beginning: (helper?: () => R) => beginning<T, C, R>(helper),      // TODO:\r\n        end: (helper?: () => R) => end<T, C, R>(helper),                  // TODO:\r\n        first: (...parsers: Array<ParserFnWithCtx<T, C, R>>) => first<T, C, R>(...parsers), // TODO:\r\n        or: (...parsers: Array<ParserFnWithCtx<T, C, R>>) => or<T, C, R>(...parsers),       // TODO:\r\n        combine: transform<T, C, R>(),\r\n        erase: transform<T, C, R>(tokens => []),\r\n        trans: (fn: (tokens: R[]) => R[]) => transform<T, C, R>(fn),                            // TODO:\r\n        ahead: (...parsers: Array<ParserFnWithCtx<T, C, R>>) => lookAhead<T, C, R>(...parsers), // TODO:\r\n        behind: (n: number, helper?: () => R) => lookBehind<T, C, R>(n, helper),\r\n        rules: (args: ApplyProductionRulesArg<T, C, R>) => applyProductionRules<T, C, R>(args), // TODO:\r\n        makeProgram,\r\n    });\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { ParserInputWithCtx,\r\n         ParseError,\r\n         parserInput,\r\n         ParserFnFailedResult,\r\n         ParserFnWithCtx } from './types';\r\n\r\n\r\n\r\nfunction getLineAndCol(src: string, pos: number) {\r\n    let line = 1;\r\n    let col = 1;\r\n\r\n    for (let i = 0; i <= pos; i++) {\r\n        switch (src[i]) {\r\n        case '\\r':\r\n            if (src[i + 1] === '\\n') {\r\n                i++;\r\n            }\r\n            // FALL_TURU\r\n        case '\\n':\r\n            line++;\r\n            col = 1;\r\n            break;\r\n        default:\r\n            col++;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return ({\r\n        line,\r\n        col,\r\n    });\r\n}\r\n\r\n\r\nexport function formatErrorMessage<T extends ArrayLike<T[number]>, C, R>(\r\n    result: ParserFnFailedResult<T, C, R>) {\r\n\r\n    let msg = '';\r\n    let src = '';\r\n    if (typeof result.src === 'string') {\r\n        src = result.src.slice(Math.max(result.pos - 5, 0), result.pos + 55);\r\n\r\n        let ar = src.split(/\\r\\n|\\n|\\r/);\r\n        ar = ar.slice(0, 1)\r\n            .concat('          ^~~~~~~~')\r\n            .concat(...ar.slice(1));\r\n        src = ar.join('\\n') + '\\n\\n';\r\n\r\n        const lineAndCol = getLineAndCol(result.src, result.pos);\r\n        msg =  (`parse failed at position:${\r\n            result.pos} line:${lineAndCol.line} col:${lineAndCol.col} ${\r\n            result.message ? ` ${result.message}` : ''}\\n     ${src}`);\r\n    } else {\r\n        src = '     (object)\\n          ^~~~~~~~';\r\n        try {\r\n            src = '     ' +\r\n                JSON.stringify((result.src as any).slice(Math.max(result.pos - 10, 0), result.pos)) + '\\n          ' +\r\n                JSON.stringify((result.src as any).slice(result.pos, result.pos + 1)) + '\\n          ' +\r\n                JSON.stringify((result.src as any).slice(result.pos + 1, result.pos + 10));\r\n\r\n            let ar = src.split(/\\r\\n|\\n|\\r/);\r\n            ar = ar.slice(0, 2)\r\n                .concat('          ^~~~~~~~')\r\n                .concat(...ar.slice(2));\r\n            src = ar.join('\\n') + '\\n\\n';\r\n        } catch (e) {}\r\n\r\n        msg = (`parse failed at position:${\r\n            result.pos} ${\r\n            result.message ? ` ${result.message}` : ''}\\n     ${src}`);\r\n    }\r\n    return msg;\r\n}\r\n\r\n\r\nexport function zeroWidth<T extends ArrayLike<T[number]>, C, R>(\r\n        helper?: () => R\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        return ({\r\n            succeeded: true,\r\n            next: {\r\n                src: input.src,\r\n                start: input.start,\r\n                end: input.end,\r\n                context: input.context,\r\n                templateArgs: input.templateArgs,\r\n                templateArgsPos: input.templateArgsPos,\r\n            },\r\n            tokens: helper ? [helper()] : [],\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function zeroWidthError<T extends ArrayLike<T[number]>, C, R>(\r\n        message: string\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        throw new ParseError({\r\n            succeeded: false,\r\n            error: true,\r\n            src: input.src,\r\n            pos: input.start,\r\n            message: message || '',\r\n        });\r\n        // return ({\r\n        //     succeeded: false,\r\n        //     error: true,\r\n        //     src: input.src,\r\n        //     pos: input.start,\r\n        //     message: message || '',\r\n        // });\r\n    });\r\n}\r\n\r\n\r\nexport function beginning<T extends ArrayLike<T[number]>, C, R>(\r\n        helper?: () => R\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        return (input.start === 0 ? {\r\n            succeeded: true,\r\n            next: {\r\n                src: input.src,\r\n                start: input.start,\r\n                end: input.end,\r\n                context: input.context,\r\n                templateArgs: input.templateArgs,\r\n                templateArgsPos: input.templateArgsPos,\r\n            },\r\n            tokens: helper ? [helper()] : [],\r\n        } : {\r\n            succeeded: false,\r\n            error: false,\r\n            src: input.src,\r\n            pos: input.start,\r\n            message: 'operator \"beginning\"',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function end<T extends ArrayLike<T[number]>, C, R>(\r\n        helper?: () => R\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        return (input.start === input.end ? {\r\n            succeeded: true,\r\n            next: {\r\n                src: input.src,\r\n                start: input.start,\r\n                end: input.end,\r\n                context: input.context,\r\n                templateArgs: input.templateArgs,\r\n                templateArgsPos: input.templateArgsPos,\r\n            },\r\n            tokens: helper ? [helper()] : [],\r\n        } : {\r\n            succeeded: false,\r\n            error: false,\r\n            src: input.src,\r\n            pos: input.start,\r\n            message: 'operator \"end\"',\r\n        });\r\n    });\r\n}\r\n\r\n// TODO: match by callback function parser\r\n// TODO: `nesting` parser\r\n\r\n\r\nexport function quantify<T extends ArrayLike<T[number]>, C, R>(\r\n        min?: number, max?: number\r\n        ): (parser: ParserFnWithCtx<T, C, R>) => ParserFnWithCtx<T, C, R> {\r\n\r\n    min = min || 0;\r\n    return (parser => {\r\n        return (input => {\r\n            let next = input;\r\n            const matched: Array<{next: ParserInputWithCtx<T, C>, tokens: R[]}> = [];\r\n\r\n            for (;;) {\r\n                const x = parser(next);\r\n                if (x.succeeded) {\r\n                    next = x.next;\r\n                    matched.push({next: x.next, tokens: x.tokens});\r\n                    if (max && max === matched.length) {\r\n                        break;\r\n                    }\r\n                } else {\r\n                    if (x.error) {\r\n                        return x;\r\n                    }\r\n                    if (matched.length >= (min as number)) {\r\n                        break;\r\n                    } else {\r\n                        return ({\r\n                            succeeded: false,\r\n                            error: false,\r\n                            src: next.src,\r\n                            pos: next.start,\r\n                            message: 'operator \"quantify\"',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (matched.length > 0) {\r\n                const r: R[] = [];\r\n                for (const x of matched) {\r\n                    r.push(...x.tokens);\r\n                }\r\n                return ({\r\n                    succeeded: true,\r\n                    next: (matched[matched.length - 1]).next,\r\n                    tokens: r,\r\n                });\r\n            } else {\r\n                return ({\r\n                    succeeded: true,\r\n                    next: {\r\n                        src: input.src,\r\n                        start: input.start,\r\n                        end: input.end,\r\n                        context: input.context,\r\n                        templateArgs: input.templateArgs,\r\n                        templateArgsPos: input.templateArgsPos,\r\n                    },\r\n                    tokens: [],\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function first<T extends ArrayLike<T[number]>, C, R>(\r\n        ...parsers: Array<ParserFnWithCtx<T, C, R>>\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        let matched: {next: ParserInputWithCtx<T, C>, tokens: R[]} | null = null;\r\n\r\n        let last: ParserFnFailedResult<T, C, R> | null = null;\r\n        for (const parser of parsers) {\r\n            const x = parser(input);\r\n            if (x.succeeded) {\r\n                matched = {next: x.next, tokens: x.tokens};\r\n                break;\r\n            }\r\n            if (last) {\r\n                if (x.error) {\r\n                    if (!last.error || last.pos < x.pos) {\r\n                        last = x;\r\n                    }\r\n                } else if (last.pos < x.pos) {\r\n                    last = x;\r\n                }\r\n            } else {\r\n                last = x;\r\n            }\r\n        }\r\n\r\n        return (matched ? {\r\n            succeeded: true, next: matched.next, tokens: matched.tokens\r\n        } : last ? last : {\r\n            succeeded: false,\r\n            error: false,\r\n            src: input.src,\r\n            pos: input.start,\r\n            message: 'operator \"first\"',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function or<T extends ArrayLike<T[number]>, C, R>(\r\n        ...parsers: Array<ParserFnWithCtx<T, C, R>>\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        const matched: Array<{next: ParserInputWithCtx<T, C>, tokens: R[]}> = [];\r\n\r\n        let last: ParserFnFailedResult<T, C, R> | null = null;\r\n        for (const parser of parsers) {\r\n            const x = parser(input);\r\n            if (x.succeeded) {\r\n                matched.push({next: x.next, tokens: x.tokens});\r\n            } else {\r\n                if (last) {\r\n                    if (x.error) {\r\n                        if (!last.error || last.pos < x.pos) {\r\n                            last = x;\r\n                        }\r\n                    } else if (last.pos < x.pos) {\r\n                        last = x;\r\n                    }\r\n                } else {\r\n                    last = x;\r\n                }\r\n            }\r\n        }\r\n        if (matched.length > 0) {\r\n            const z = matched.reduce((a, b) => a.next.start >= b.next.start ? a : b);\r\n            return ({succeeded: true, next: z.next, tokens: z.tokens});\r\n        }\r\n\r\n        return (last ? last : {\r\n            succeeded: false,\r\n            error: false,\r\n            src: input.src,\r\n            pos: input.start,\r\n            message: 'operator \"or\"',\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function transform<T extends ArrayLike<T[number]>, C, R>(\r\n        trans?: ((tokens: R[], input: ParserInputWithCtx<T, C>) => R[]), ctxTrans?: ((context: C) => C)\r\n        ): (...parsers: Array<ParserFnWithCtx<T, C, R>>) => ParserFnWithCtx<T, C, R> {\r\n\r\n    return ((...parsers) => {\r\n        return (input => {\r\n            let next = input;\r\n            const tokens: R[] = [];\r\n\r\n            for (const parser of parsers) {\r\n                const x = parser(next);\r\n                if (! x.succeeded) {\r\n                    return x;\r\n                }\r\n                next = x.next;\r\n                tokens.push(...x.tokens);\r\n            }\r\n\r\n            // TODO: report errors while transforming\r\n            const t2 = trans ? trans(tokens, input) : tokens;\r\n            return ({\r\n                succeeded: true,\r\n                next: ctxTrans ? {\r\n                    src: next.src,\r\n                    start: next.start,\r\n                    end: next.end,\r\n                    context: ctxTrans(next.context),\r\n                    templateArgs: next.templateArgs,\r\n                    templateArgsPos: next.templateArgsPos,\r\n                } : next,\r\n                tokens: t2,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function combine<T extends ArrayLike<T[number]>, C, R>(\r\n        ...parsers: Array<ParserFnWithCtx<T, C, R>>\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return transform<T, C, R>()(...parsers);\r\n}\r\n\r\n\r\nexport function lookAhead<T extends ArrayLike<T[number]>, C, R>(\r\n        ...parsers: Array<ParserFnWithCtx<T, C, R>>\r\n        ): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        let next = input;\r\n\r\n        for (const parser of parsers) {\r\n            const x = parser(next);\r\n            if (! x.succeeded) {\r\n                return x;\r\n            }\r\n            next = x.next;\r\n        }\r\n\r\n        return ({\r\n            succeeded: true,\r\n            next: input,\r\n            tokens: [],\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function lookBehind<T extends ArrayLike<T[number]>, C, R>(\r\n        n: number, helper?: () => R): (\r\n            ...parsers: Array<ParserFnWithCtx<T, C, R>>\r\n            ) => ParserFnWithCtx<T, C, R> {\r\n\r\n    return ((...parsers) => {\r\n        return (input => {\r\n            if (input.start - n < 0) {\r\n                return ({\r\n                    succeeded: false,\r\n                    error: false,\r\n                    src: input.src,\r\n                    pos: input.start,\r\n                    message: 'lookBehind: src is too short',\r\n                });\r\n            }\r\n            let next: ParserInputWithCtx<T, C> = {\r\n                src: input.src,\r\n                start: input.start - n,\r\n                end: input.end,\r\n                context: input.context,\r\n                templateArgs: input.templateArgs,\r\n                templateArgsPos: input.templateArgsPos,\r\n            };\r\n\r\n            for (const parser of parsers) {\r\n                const x = parser(next);\r\n                if (! x.succeeded) {\r\n                    return x;\r\n                }\r\n                next = x.next;\r\n            }\r\n\r\n            return ({\r\n                succeeded: true,\r\n                next: input,\r\n                tokens: helper ? [helper()] : [],\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// tslint:disable-next-line: interface-over-type-literal\r\nexport type ApplyProductionRulesArg<T extends ArrayLike<T[number]>, C, R> = {\r\n    rules: Array<ParserFnWithCtx<R[], C, R> |\r\n           {parser: ParserFnWithCtx<R[], C, R>, rtol: boolean}>,\r\n    maxApply?: number,\r\n    check: ParserFnWithCtx<R[], C, R>,\r\n};\r\n\r\nexport function applyProductionRules<T extends ArrayLike<T[number]>, C, R>(\r\n        args: ApplyProductionRulesArg<T, C, R>\r\n        ): (lexer: ParserFnWithCtx<T, C, R>) => ParserFnWithCtx<T, C, R> {\r\n\r\n    return (lexer => {\r\n        return (lexerInput => {\r\n            const lexResult = lexer(lexerInput);\r\n            if (! lexResult.succeeded) {\r\n                return lexResult;\r\n            }\r\n\r\n            const input = parserInput<R[], C>(lexResult.tokens, lexerInput.context);\r\n            let next = input;\r\n            let completed = false;\r\n\r\n            if (args.check(next).succeeded) {\r\n                return ({\r\n                    succeeded: true,\r\n                    next: lexResult.next,\r\n                    tokens: lexResult.tokens,\r\n                });\r\n            }\r\n\r\n            completed: for (let i = 0;\r\n                    args.maxApply !== void 0 ? i < args.maxApply : true; i++) {\r\n                let matched = false;\r\n\r\n                rules: for (const rule of args.rules) {\r\n                    const {parser, rtol} =\r\n                        typeof rule === 'function' ?\r\n                            {parser: rule, rtol: false} : rule;\r\n                    const len = next.src.length;\r\n\r\n                    for (let s = 0; s <= len; s++) {\r\n                        const x = parser({\r\n                            src: next.src,\r\n                            start: rtol ? len - s : s,\r\n                            end: next.src.length,\r\n                            context: next.context,\r\n                            templateArgs: next.templateArgs,\r\n                            templateArgsPos: next.templateArgsPos,\r\n                        });\r\n                        if (x.succeeded) {\r\n                            matched = true;\r\n                            const nextSrc = next.src.slice(0, rtol ? len - s : s);\r\n                            nextSrc.push(...x.tokens);\r\n                            nextSrc.push(...next.src.slice(x.next.start));\r\n                            next = {\r\n                                src: nextSrc,\r\n                                start: 0,\r\n                                end: nextSrc.length,\r\n                                context: x.next.context,\r\n                                templateArgs: x.next.templateArgs,\r\n                                templateArgsPos: x.next.templateArgsPos,\r\n                            };\r\n                            if (args.check(next).succeeded) {\r\n                                completed = true;\r\n                                break completed;\r\n                            }\r\n                            break rules;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (! matched) {\r\n                    break;\r\n                }\r\n            }\r\n            if (! completed) {\r\n                if (! args.check(next).succeeded) {\r\n                    throw new ParseError({\r\n                        succeeded: false,\r\n                        error: true,\r\n                        src: input.src,\r\n                        pos: input.start,\r\n                        message: 'The application of production rules was not finished',\r\n                    });\r\n                }\r\n            }\r\n\r\n            return ({\r\n                succeeded: true,\r\n                next: lexResult.next,\r\n                tokens: next.src,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function makeProgram<T extends ArrayLike<T[number]>, C, R>(\r\n    parser: ParserFnWithCtx<T, C, R>): ParserFnWithCtx<T, C, R> {\r\n\r\n    return (input => {\r\n        try {\r\n            return parser(input);\r\n        } catch (e) {\r\n            if (e.result) {\r\n                return e.result;\r\n            } else {\r\n                throw e;\r\n            }\r\n        }\r\n    });\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nimport { StringParserFnWithCtx } from './types';\r\nimport { zeroWidth,\r\n         zeroWidthError,\r\n         beginning,\r\n         end,\r\n         quantify,\r\n         first,\r\n         or,\r\n         transform,\r\n         lookAhead,\r\n         lookBehind,\r\n         ApplyProductionRulesArg,\r\n         applyProductionRules,\r\n         makeProgram } from './parser';\r\n\r\n\r\n\r\nexport function charSequence<C, R>(\r\n        helper: (token: string) => R\r\n        ): (needle: string) => StringParserFnWithCtx<C, R> {\r\n\r\n    return (needle => {\r\n        return (input => {\r\n            const src = input.src.slice(input.start, input.end);\r\n            return (src.startsWith(needle) ? {\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + needle.length,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(needle)],\r\n            } : {\r\n                succeeded: false,\r\n                error: false,\r\n                src: input.src,\r\n                pos: input.start,\r\n                message: `operator \"charSequence(${needle})\"`,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function charClass<C, R>(\r\n        helper: (token: string) => R\r\n        ): (...needles: string[]) => StringParserFnWithCtx<C, R> {\r\n\r\n    // NOTE: needles[i] should be one character. surrogate pair and/or ligature are accepted.\r\n    return ((...needles) => {\r\n        return (input => {\r\n            const src = input.src.slice(input.start, input.end);\r\n            let index = -1;\r\n\r\n            const succeeded = needles.some((needle, idx) => {\r\n                const matched = src.startsWith(needle);\r\n                if (matched) {\r\n                    index = idx;\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            return (succeeded ? {\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + needles[index].length,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(needles[index])],\r\n            } : {\r\n                succeeded: false,\r\n                error: false,\r\n                src: input.src,\r\n                pos: input.start,\r\n                message: `operator \"charClass(${needles.join(',')})\"`,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function charClassNot<C, R>(\r\n    helper: (token: string) => R\r\n    ): (...needles: string[]) => StringParserFnWithCtx<C, R> {\r\n\r\n    // NOTE: needles[i] should be one character. surrogate pair and/or ligature are accepted.\r\n    return ((...needles) => {\r\n        return (input => {\r\n            const src = input.src.slice(input.start, input.end);\r\n\r\n            for (const needle of needles) {\r\n                const matched = src.startsWith(needle);\r\n                if (matched) {\r\n                    return ({\r\n                        succeeded: false,\r\n                        error: false,\r\n                        src: input.src,\r\n                        pos: input.start,\r\n                        message: `operator \"charClassNot(${needles.join(',')})\"`,\r\n                    });\r\n                }\r\n            }\r\n            const p = input.src.codePointAt(input.start);\r\n            if (p === void 0) {\r\n                return ({\r\n                    succeeded: false,\r\n                    error: false,\r\n                    src: input.src,\r\n                    pos: input.start,\r\n                    message: `operator \"charClassNot(${needles.join(',')})\"`,\r\n                });\r\n            }\r\n            const c = String.fromCodePoint(p);\r\n\r\n            return ({\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + c.length,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(c)],\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function charClassByNeedleFn<C, R>(\r\n        helper: (token: string) => R\r\n        ): (needle: (src: string) => number) => StringParserFnWithCtx<C, R> {\r\n\r\n    // NOTE: needles[i] should be one character. surrogate pair and/or ligature are accepted.\r\n    return (needle => {\r\n        return (input => {\r\n            const src = input.src.slice(input.start, input.end);\r\n            const len = needle(src);\r\n\r\n            return (len >= 0 ? {\r\n                succeeded: true,\r\n                next: {\r\n                    src: input.src,\r\n                    start: input.start + len,\r\n                    end: input.end,\r\n                    context: input.context,\r\n                    templateArgs: input.templateArgs,\r\n                    templateArgsPos: input.templateArgsPos,\r\n                },\r\n                tokens: [helper(src.substring(0, len))],\r\n            } : {\r\n                succeeded: false,\r\n                error: false,\r\n                src: input.src,\r\n                pos: input.start,\r\n                message: `operator \"charClassByNeedleFn\"`,\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function templateStringsParam<C, R>(\r\n        criteria: (o: any) => boolean, conv?: (o: any) => any): StringParserFnWithCtx<C, R> {\r\n\r\n    return (input => {\r\n        const src = input.src.slice(input.start, input.start + 1);\r\n        if (src === '\\x00') {\r\n            if (input.templateArgsPos) {\r\n                let argIdx = -1;\r\n                const strIdx = input.templateArgsPos.findIndex((v, i) => {\r\n                    argIdx = i;\r\n                    return v === input.start;\r\n                });\r\n                if (0 <= strIdx) {\r\n                    const o = input.templateArgs![argIdx];\r\n                    if (criteria(o)) {\r\n                        return ({\r\n                            succeeded: true,\r\n                            next: {\r\n                                src: input.src,\r\n                                start: input.start + 1,\r\n                                end: input.end,\r\n                                context: input.context,\r\n                                templateArgs: input.templateArgs,\r\n                                templateArgsPos: input.templateArgsPos,\r\n                            },\r\n                            tokens: [(conv ? conv(o) : o)],\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ({\r\n            succeeded: false,\r\n            error: false,\r\n            src: input.src,\r\n            pos: input.start,\r\n            message: `operator \"stringTemplatesParam()\"`,\r\n        });\r\n    });\r\n}\r\n\r\n\r\nexport function getStringParsers<C, R>(\r\n        params: {\r\n            rawToToken: (rawToken: string) => R,\r\n            concatTokens: (tokens: R[]) => R[],\r\n        }) {\r\n\r\n    const seq = charSequence<C, R>(params.rawToToken);\r\n    const cls = charClass<C, R>(params.rawToToken);\r\n    const notCls = charClassNot<C, R>(params.rawToToken);\r\n    const clsFn = charClassByNeedleFn<C, R>(params.rawToToken);\r\n    const cat = transform<string, C, R>(params.concatTokens);\r\n    const once = quantify<string, C, R>(1, 1);\r\n    const repeat = quantify<string, C, R>();\r\n    // TODO: reduce unneccessary call for adding types.\r\n    const qty = (min?: number, max?: number) => quantify<string, C, R>(min, max);\r\n    const combine = transform<string, C, R>();\r\n    const erase = transform<string, C, R>(tokens => []);\r\n\r\n    const isAlpha = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return ((\r\n            ('A' <= c && c <= 'Z') ||\r\n            ('a' <= c && c <= 'z')) ? c.length : -1);\r\n    });\r\n\r\n    const isUpper = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ('A' <= c && c <= 'Z') ? c.length : -1);\r\n    });\r\n\r\n    const isLower = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ('a' <= c && c <= 'z') ? c.length : -1);\r\n    });\r\n\r\n    const isNumber = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ('0' <= c && c <= '9') ? c.length : -1);\r\n    });\r\n\r\n    const isNonZeroNumber = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ('1' <= c && c <= '9') ? c.length : -1);\r\n    });\r\n\r\n    const isBinNum = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ('0' <= c && c <= '1') ? c.length : -1);\r\n    });\r\n\r\n    const isOctNum = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ('0' <= c && c <= '7') ? c.length : -1);\r\n    });\r\n\r\n    const isHexNum = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return ((\r\n            ('A' <= c && c <= 'F') ||\r\n            ('a' <= c && c <= 'f') ||\r\n            ('0' <= c && c <= '9')) ? c.length : -1);\r\n    });\r\n\r\n    const isAlNum = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return ((\r\n            ('A' <= c && c <= 'Z') ||\r\n            ('a' <= c && c <= 'z') ||\r\n            ('0' <= c && c <= '9')) ? c.length : -1);\r\n    });\r\n\r\n    const isSpace = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return ((' \\f\\n\\r\\t\\v​\\u00a0\\u1680​\\u180e' +\r\n            '\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a' +\r\n            '​\\u2028\\u2029\\u202f\\u205f​\\u3000\\ufeff').includes(c) ? c.length : -1);\r\n    });\r\n\r\n    const isSpaceWithinSingleLine = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return ((' \\f\\t\\v​\\u00a0\\u1680​\\u180e' +\r\n            '\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a' +\r\n            '​\\u2028\\u2029\\u202f\\u205f​\\u3000\\ufeff').includes(c) ? c.length : -1);\r\n    });\r\n\r\n    const isControl = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return ((\r\n            (0x0000 <= p && p <= 0x001f) ||\r\n            (0x007f <= p && p <= 0x009f)) ? c.length : -1);\r\n    });\r\n\r\n    const isWord = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return (\r\n            ((' \\f\\n\\r\\t\\v​\\u00a0\\u1680​\\u180e' +\r\n              '\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a' +\r\n              '​\\u2028\\u2029\\u202f\\u205f​\\u3000\\ufeff').includes(c)) ||\r\n            ((0x0000 <= p && p <= 0x001f) ||\r\n             (0x007f <= p && p <= 0x009f)) ?\r\n            -1 : c.length);\r\n    });\r\n\r\n    const isNewline = cls('\\r\\n', '\\n', '\\r');\r\n\r\n    const isAny = clsFn(src => {\r\n        const p = src.codePointAt(0);\r\n        if (p === void 0) {\r\n            return -1;\r\n        }\r\n        const c = String.fromCodePoint(p);\r\n        return c.length;\r\n    });\r\n\r\n\r\n    const binSep =\r\n        first(isBinNum, cls('_'));\r\n    const octSep =\r\n        first(isOctNum, cls('_'));\r\n    const hexSep =\r\n        first(isHexNum, cls('_'));\r\n\r\n    const binaryIntegerNumber = (...prefixes: Array<StringParserFnWithCtx<C, R>>) =>\r\n        combine(erase(first(...prefixes)),\r\n            cat(once(isBinNum), repeat(binSep)), );\r\n    const octalIntegerNumber = (...prefixes: Array<StringParserFnWithCtx<C, R>>) =>\r\n        combine(erase(first(...prefixes)),\r\n            cat(once(isOctNum), repeat(octSep)), );\r\n    const hexIntegerValue = (...prefixes: Array<StringParserFnWithCtx<C, R>>) =>\r\n        combine(erase(first(...prefixes)),\r\n            cat(once(isHexNum), repeat(hexSep)), );\r\n    const decimalIntegerNumber =\r\n        combine(cat(qty(0, 1)(cls('+', '-')),\r\n            first(combine(once(isNonZeroNumber), repeat(first(isNumber, cls('_')))),\r\n                seq('0'), )));\r\n    const bigDecimalIntegerNumber =\r\n        combine(cat(decimalIntegerNumber,\r\n            erase(seq('n')), ));\r\n    const floatingPointNumber =\r\n        combine(cat(qty(0, 1)(cls('+', '-')),\r\n            first(combine(once(isNonZeroNumber), repeat(first(isNumber, cls('_')))),\r\n                seq('0'), ),\r\n            qty(0, 1)(combine(seq('.'),\r\n                qty(1)(first(isNumber, cls('_'))), )),\r\n            qty(0, 1)(combine(cls('E', 'e'), qty(0, 1)(cls('+', '-')),\r\n                first(combine(once(isNonZeroNumber), repeat(isNumber)), seq('0')), ))));\r\n\r\n    // TODO: reduce unneccessary call for adding types.\r\n    return ({\r\n        seq,\r\n        cls,\r\n        notCls,\r\n        clsFn,\r\n        classes: {\r\n            alpha: isAlpha,\r\n            upper: isUpper,\r\n            lower: isLower,\r\n            num: isNumber,\r\n            nonzero: isNonZeroNumber,\r\n            bin: isBinNum,\r\n            oct: isOctNum,\r\n            hex: isHexNum,\r\n            alnum: isAlNum,\r\n            space: isSpace,\r\n            spaceWithinSingleLine: isSpaceWithinSingleLine,\r\n            ctrl: isControl,\r\n            newline: isNewline,\r\n            word: isWord,\r\n            any: isAny,\r\n        },\r\n        numbers: {\r\n            bin: binaryIntegerNumber,\r\n            oct: octalIntegerNumber,\r\n            hex: hexIntegerValue,\r\n            int: decimalIntegerNumber,\r\n            bigint: bigDecimalIntegerNumber,\r\n            float: floatingPointNumber,\r\n        },\r\n        isParam: templateStringsParam,\r\n        cat,\r\n        once,\r\n        repeat,\r\n        qty,\r\n        zeroWidth: (helper?: () => R) => zeroWidth<string, C, R>(helper), // TODO:\r\n        err: (message: string) => zeroWidthError<string, C, R>(message),  // TODO:\r\n        beginning: (helper?: () => R) => beginning<string, C, R>(helper), // TODO:\r\n        end: (helper?: () => R) => end<string, C, R>(helper),             // TODO:\r\n        first: (...parsers: Array<StringParserFnWithCtx<C, R>>) => first<string, C, R>(...parsers), // TODO:\r\n        or: (...parsers: Array<StringParserFnWithCtx<C, R>>) => or<string, C, R>(...parsers),       // TODO:\r\n        combine,\r\n        erase,\r\n        trans: (fn: (tokens: R[]) => R[]) => transform<string, C, R>(fn),                                 // TODO:\r\n        ahead: (...parsers: Array<StringParserFnWithCtx<C, R>>) => lookAhead<string, C, R>(...parsers),   // TODO:\r\n        behind: (n: number, helper?: () => R) => lookBehind<string, C, R>(n, helper),\r\n        rules: (args: ApplyProductionRulesArg<string, C, R>) => applyProductionRules<string, C, R>(args), // TODO:\r\n        makeProgram,\r\n    });\r\n}\r\n","// Copyright (c) 2019 Shellyl_N and Authors\r\n// license: ISC\r\n// https://github.com/shellyln\r\n\r\n\r\nexport interface ParserInputWithCtx<T extends ArrayLike<T[number]>, C> {\r\n    src: T;\r\n    start: number;\r\n    end: number;\r\n    context: C;\r\n    templateArgs?: any[];       // For \"template strings\". NOTE: For backword compatibility, this is optional.\r\n    templateArgsPos?: number[]; // For \"template strings\". NOTE: For backword compatibility, this is optional.\r\n}\r\nexport type ParserInput<T extends ArrayLike<T[number]>> = ParserInputWithCtx<T, undefined>;\r\nexport type StringParserInputWithCtx<C> = ParserInputWithCtx<string, C>;\r\nexport type StringParserInput = StringParserInputWithCtx<undefined>;\r\n\r\nexport class ParseError<T extends ArrayLike<T[number]>, C, R> extends Error {\r\n    public result: ParserFnFailedResult<T, C, R>;\r\n    constructor(result: ParserFnFailedResult<T, C, R>) {\r\n        super(result.message);\r\n        this.result = result;\r\n    }\r\n}\r\n\r\n\r\nexport function parserInput<T extends ArrayLike<T[number]>>(src: T): ParserInputWithCtx<T, undefined>;\r\nexport function parserInput<T extends ArrayLike<T[number]>, C>(src: T, context: C): ParserInputWithCtx<T, C>;\r\nexport function parserInput<T extends ArrayLike<T[number]>, C>(src: T, context?: C): ParserInputWithCtx<T, C> {\r\n    return ({\r\n        src,\r\n        start: 0,\r\n        end: src.length,\r\n        context: context as any,\r\n        templateArgs: [],\r\n        templateArgsPos: [],\r\n    });\r\n}\r\n\r\n\r\nexport function templateStringsParserInput<C>(strings: TemplateStringsArray, values: any[], context?: C): ParserInputWithCtx<string, C> {\r\n    const templateArgsPos: number[] = [];\r\n    let pos = 0;\r\n    if (values.length) {\r\n        for (let i = 0; i < strings.length; i++) {\r\n            const x = strings[i];\r\n            if (i < values.length) {\r\n                templateArgsPos.push(pos + x.length);\r\n                pos += x.length + 1;\r\n            }\r\n        }\r\n    }\r\n    const joined = strings.join('\\x00');\r\n    return ({\r\n        src: joined,\r\n        start: 0,\r\n        end: joined.length,\r\n        context: context as any,\r\n        templateArgs: values,\r\n        templateArgsPos,\r\n    });\r\n}\r\n\r\n\r\n// tslint:disable-next-line: interface-over-type-literal\r\nexport type ParserFnSucceededResult<T extends ArrayLike<T[number]>, C, R> =\r\n    {succeeded: true, next: ParserInputWithCtx<T, C>, tokens: R[]};\r\n\r\n// tslint:disable-next-line: interface-over-type-literal\r\nexport type ParserFnFailedResult<T extends ArrayLike<T[number]>, C, R> =\r\n    {succeeded: false, error: boolean, src: T, pos: number, message: string};\r\n\r\nexport type ParserFnWithCtx<T extends ArrayLike<T[number]>, C, R> =\r\n    (input: ParserInputWithCtx<T, C>) =>\r\n        ParserFnSucceededResult<T, C, R> |\r\n        ParserFnFailedResult<T, C, R>;\r\n\r\nexport type ParserFn<T extends ArrayLike<T[number]>, R> = ParserFnWithCtx<T, undefined, R>;\r\nexport type StringParserFnWithCtx<C, R> = ParserFnWithCtx<string, C, R>;\r\nexport type StringParserFn<R> = StringParserFnWithCtx<undefined, R>;\r\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { QueryBuilderInfo }     from './types';\nimport { prepareQuery,\n         prepareBuilderInfo }   from './lib/prepare';\nimport { executeCompiledQuery } from './lib/run-query';\nimport { executeInsertDML,\n         executeUpdateDML,\n         executeRemoveDML }     from './lib/run-dml';\n\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function build(builder: QueryBuilderInfo) {\n    const preparedBI = prepareBuilderInfo(builder);\n\n    function createTransactionScope(scopeTr: any, scopeTrOptions: any | undefined, isIsolated: boolean) {\n\n        async function withTransactionEvents<R>(\n                tr: any, trOptions: any | undefined, run: (tx: any, txOpts: any | undefined) => Promise<R>) {\n\n            try {\n                if (preparedBI.events.beginTransaction) {\n                    await preparedBI.events.beginTransaction({\n                        resolverData: {},\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        transactionData: tr,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        transactionOptions: trOptions,\n                    });\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const ret =  await run(tr, trOptions);\n\n                if (preparedBI.events.endTransaction) {\n                    await preparedBI.events.endTransaction({\n                        resolverData: {},\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        transactionData: tr,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        transactionOptions: trOptions,\n                    }, null);\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return ret;\n            } catch (e) {\n                if (preparedBI.events.endTransaction) {\n                    await preparedBI.events.endTransaction({\n                        resolverData: {},\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        transactionData: tr,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        transactionOptions: trOptions,\n                    }, e);\n                }\n                throw e;\n            }\n        }\n\n        async function runQuery<R>(strings: TemplateStringsArray | string, ...values: any[]): Promise<R[]> {\n            const run = async (tr: any, trOptions: any | undefined) => {\n                const query = prepareQuery(preparedBI, strings, ...values);\n                const ret = await executeCompiledQuery(preparedBI, tr, trOptions, query, null, null, null, null);\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return ret;\n            };\n\n            if (isIsolated) {\n                return await withTransactionEvents<R[]>({}, void 0, run);\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await run(scopeTr, scopeTrOptions);\n            }\n        }\n\n        async function runInsert<T>(resolver: string, obj: T): Promise<T extends (infer R)[] ? R[] : T> {\n            const run = async (tr: any, trOptions: any | undefined) => {\n                const isArray = Array.isArray(obj);\n    \n                const ret = await executeInsertDML(preparedBI, tr, trOptions, resolver, isArray ? obj as any : [obj]);\n                if (isArray) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return ret as any;\n                } else {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return ret[0];\n                }\n            };\n\n            if (isIsolated) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await withTransactionEvents({}, void 0, run);\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await run(scopeTr, scopeTrOptions);\n            }\n        }\n\n        async function runUpdate<T>(resolver: string, obj: T): Promise<T extends (infer R)[] ? R[] : T> {\n            const run = async (tr: any, trOptions: any | undefined) => {\n                const isArray = Array.isArray(obj);\n    \n                const ret = await executeUpdateDML(preparedBI, tr, trOptions, resolver, isArray ? obj as any : [obj]);\n                if (isArray) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return ret as any;\n                } else {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return ret[0];\n                }\n            };\n\n            if (isIsolated) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await withTransactionEvents({}, void 0, run);\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await run(scopeTr, scopeTrOptions);\n            }\n        }\n\n        async function runRemove<T>(resolver: string, obj: T) {\n            const run = async (tr: any, trOptions: any | undefined) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await executeRemoveDML(preparedBI, tr, trOptions, resolver, Array.isArray(obj) ? obj : [obj]);\n            };\n\n            if (isIsolated) {\n                return await withTransactionEvents({}, void 0, run);\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return await run(scopeTr, scopeTrOptions);\n            }\n        }\n\n        async function transaction(\n                callback: (commands: {\n                        soql: typeof runQuery,\n                        insert: typeof runInsert,\n                        update: typeof runUpdate,\n                        remove: typeof runRemove,\n                    }, tr: any) => Promise<void>,\n                trOptions?: any,\n                ) {\n\n            const tr = {};\n            const commands = createTransactionScope(tr, trOptions, false);\n\n            const run = async (_tr: any) => {\n                await callback({\n                    soql: commands.soql,\n                    insert: commands.insert,\n                    update: commands.update,\n                    remove: commands.remove,\n                }, tr);\n            };\n\n            return await withTransactionEvents(tr, trOptions, run);\n        }\n\n        return ({\n            soql: runQuery,\n            insert: runInsert,\n            update: runUpdate,\n            remove: runRemove,\n            transaction,\n        });\n    }\n\n    return createTransactionScope({}, void 0, true);\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { ResolverContext,\n         FieldResultType,\n         PreparedConditionOperand,\n         PreparedCondition,\n         PreparedAtomValue,\n         PreparedField,\n         PreparedFnCall,\n         ScalarQueryFuncInfo,\n         ImmediateScalarQueryFuncInfo,\n         AggregateQueryFuncInfo }         from './types';\nimport { getTrueCaseFieldName,\n         getObjectValueWithFieldNameMap } from './lib/util';\nimport { callAggregateFunction,\n         callScalarFunction,\n         callImmediateScalarFunction,\n         isScalarFnCallable }             from './lib/call';\nimport { CondOp1CacheValue,\n         condOp1FnCache,\n         condOp2ValueCache }              from './lib/cache';\n\n\n\nconst getOp1Noop = (\n    fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n    cache: CondOp1CacheValue, record: any) => void 0;\n\n\nconst getOp1AggregateFnValue = (\n        fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cache: CondOp1CacheValue, record: any) => {\n\n    const { op, op2FieldResultType, fnInfo } = cache;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return callAggregateFunction(\n        ctx, op as PreparedFnCall, fnInfo as AggregateQueryFuncInfo, op2FieldResultType,\n        record);\n}\n\n\nconst getOp1ScalarOnAggFnValue = (\n        fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cache: CondOp1CacheValue, record: any) => {\n\n    const { op, op2FieldResultType, fnInfo } = cache;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const firstRec = record[0];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n    return callScalarFunction(\n        ctx, op as PreparedFnCall, fnInfo as ScalarQueryFuncInfo, op2FieldResultType,\n        firstRec, record);\n}\n\n\nconst getOp1ScalarOnNonAggFnValue = (\n        fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cache: CondOp1CacheValue, record: any) => {\n\n    const { op, op2FieldResultType, fnInfo } = cache;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n    return callScalarFunction(\n        ctx, op as PreparedFnCall, fnInfo as ScalarQueryFuncInfo, op2FieldResultType,\n        record, null);\n}\n\n\nconst getOp1ImmediateScalarOnAggFnValue = (\n        fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cache: CondOp1CacheValue, record: any) => {\n\n    const { op, op2FieldResultType, fnInfo } = cache;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n    return callImmediateScalarFunction(\n        ctx, op as PreparedFnCall, fnInfo as ImmediateScalarQueryFuncInfo, op2FieldResultType,\n        null, record);\n}\n\n\nconst getOp1ImmediateScalarOnNonAggFnValue = (\n        fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cache: CondOp1CacheValue, record: any) => {\n\n    const { op, op2FieldResultType, fnInfo } = cache;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n    return callImmediateScalarFunction(\n        ctx, op as PreparedFnCall, fnInfo as ImmediateScalarQueryFuncInfo, op2FieldResultType,\n        record,  null);\n}\n\n\nfunction createOp1Cache(\n    groupFields: Map<string, string> | null,\n    isAggregation: boolean,\n    ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n    cond: PreparedCondition) {\n\n    let cache: CondOp1CacheValue | undefined = condOp1FnCache.get(cond);\n    const op = cond.operands[0];\n    const op2 = cond.operands[1];\n    let op2IsDateOrDatetime = false;\n    let op2FieldResultType: FieldResultType = 'any';\n\n    switch (typeof op2) {\n    case 'object':\n        if (op2 === null) {\n            // nothing to do\n        } else if (Array.isArray(op2)) {\n            // nothing to do\n        } else {\n            switch (op2.type) {\n            case 'date': case 'datetime':\n                op2IsDateOrDatetime = true;\n                op2FieldResultType = op2.type;\n                break;\n            }\n        }\n    }\n\n    switch (typeof op) {\n    case 'object':\n        if (op === null) {\n            // nothing to do (v is null)\n        } else if (Array.isArray(op)) {\n            throw new Error(`Array is not allowed in the operand(1).`);\n        } else {\n            switch (op.type) {\n            case 'field':\n                cache = {\n                    isField: true,\n                    isDateOrDatetime: op2IsDateOrDatetime,\n                    op,\n                    op2FieldResultType,\n                    fnInfo: null,\n                    fn: getOp1Noop,\n                };\n                condOp1FnCache.set(cond, cache);\n                break;\n            case 'fncall':\n                {\n                    const fnNameI = op.fn.toLowerCase();\n                    const fnInfo = ctx.functions.find(x => x.name.toLowerCase() === fnNameI);\n\n                    switch (fnInfo?.type) {\n                    case 'aggregate':\n                        if (! isAggregation) {\n                            throw new Error(`Aggregate function ${fnInfo.name} is not allowed.`);\n                        }\n                        cache = {\n                            isField: false,\n                            isDateOrDatetime: false,\n                            op,\n                            op2FieldResultType,\n                            fnInfo,\n                            fn: getOp1AggregateFnValue,\n                        };\n                        condOp1FnCache.set(cond, cache);\n                        break;\n                    case 'scalar':\n                        if (isAggregation) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            if (! isScalarFnCallable(ctx, groupFields!, op.args)) {\n                                throw new Error(`${op.fn} is not allowed. Aggregate function is needed.`);\n                            }\n                            cache = {\n                                isField: false,\n                                isDateOrDatetime: false,\n                                op,\n                                op2FieldResultType,\n                                fnInfo,\n                                fn: getOp1ScalarOnAggFnValue,\n                            };\n                            condOp1FnCache.set(cond, cache);\n                        } else {\n                            cache = {\n                                isField: false,\n                                isDateOrDatetime: false,\n                                op,\n                                op2FieldResultType,\n                                fnInfo,\n                                fn: getOp1ScalarOnNonAggFnValue,\n                            };\n                            condOp1FnCache.set(cond, cache);\n                        }\n                        break;\n                    case 'immediate-scalar':\n                        cache = {\n                            isField: false,\n                            isDateOrDatetime: false,\n                            op,\n                            op2FieldResultType,\n                            fnInfo,\n                            fn: isAggregation\n                                ? getOp1ImmediateScalarOnAggFnValue\n                                : getOp1ImmediateScalarOnNonAggFnValue,\n                        };\n                        condOp1FnCache.set(cond, cache);\n                        break;\n                    default:\n                        throw new Error(`Unexpected type appears in the operand(1).`);\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unexpected type appears in the operand(1).`);\n            }\n        }\n        break;\n    default:\n        throw new Error(`Unexpected type appears in the operand(1).`);\n    }\n\n    return cache as CondOp1CacheValue;\n}\n\n\nfunction getOp1Value(\n        fieldNameMap: Map<string, string>,\n        groupFields: Map<string, string> | null,\n        isAggregation: boolean,\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cond: PreparedCondition, record: any) {\n\n    let v = null;\n    const op = cond.operands[0];\n\n    const cache: CondOp1CacheValue = condOp1FnCache.get(cond)\n        ?? createOp1Cache(groupFields, isAggregation, ctx, cond);\n    \n    if (op === null) {\n        // NOTE: `cache` is possibly undefined.\n        // nothing to do (v is null)\n    } else if (Array.isArray(op)) {\n        throw new Error(`Array is not allowed in the operand(1).`);\n    } else if (cache.isField) {\n        // NOTE: Inline expansion\n\n        const { isDateOrDatetime, op } = cache;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        v = getObjectValueWithFieldNameMap(\n            fieldNameMap, record, (op as PreparedField).name[(op as PreparedField).name.length - 1]);\n\n        if (isDateOrDatetime && v !== null) {\n            v = new Date(v).getTime();\n        }\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        v = cache.fn(fieldNameMap, ctx, cache, record);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return v;\n}\n\n\nfunction getOp2Value(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cond: PreparedCondition, record: any):\n        string | number | PreparedAtomValue[] | null {\n\n    const cached = condOp2ValueCache.get(cond);\n    if (cached) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return cached.value;\n    }\n\n    let v = null;\n    const op = cond.operands[1];\n\n    switch (typeof op) {\n    case 'object':\n        if (op === null) {\n            // nothing to do (v is null)\n        } else if (Array.isArray(op)) {\n            v = op;\n        } else {\n            switch (op.type) {\n            case 'fncall':\n                {\n                    const fnNameI = op.fn.toLowerCase();\n                    const fnInfo = ctx.functions.find(x => x.name.toLowerCase() === fnNameI);\n\n                    switch (fnInfo?.type) {\n                    case 'immediate-scalar':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        v = callImmediateScalarFunction(ctx, op, fnInfo, 'any', null, null);\n                        break;\n                    default:\n                        throw new Error(`Unexpected type appears in the operand(2).`);\n                    }\n                }\n            default:\n                switch (op.type) {\n                case 'date': case 'datetime':\n                    v = new Date(op.value).getTime();\n                    break;\n                default:\n                    throw new Error(`Unexpected type appears in the operand(2).`);\n                }\n                break;\n            }\n        }\n        break;\n    default:\n        v = op; // string or number\n        break;\n    }\n\n    condOp2ValueCache.set(cond, { value: v });\n    return v;\n}\n\n\nfunction evalRecursiveCondition(\n        fieldNameMap: Map<string, string>,\n        groupFields: Map<string, string> | null,\n        isAggregation: boolean,\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        w: PreparedConditionOperand, record: any): boolean {\n\n    let ret = true;\n\n    switch (typeof w) {\n    case 'object':\n        if (Array.isArray(w)) {\n            throw new Error(`Array is not allowed in the condition.`);\n        } else {\n            if (w === null) {\n                throw new Error(`Unexpected type appears in the condition.`);\n            }\n            switch (w.type) {\n            case 'condition':\n                ret = evalCondition(fieldNameMap, groupFields, isAggregation, ctx, w, record);\n                break;\n            default:\n                throw new Error(`Unexpected type appears in the condition.`);\n            }\n        }\n        break;\n    default:\n        throw new Error(`Unexpected type appears in the condition.`);\n    }\n\n    return ret;\n}\n\n\nfunction convertPattern(v: string) {\n    // NOTE: wildcards are '%' (= /.*/) and '_' (= /./)\n    //       wildcard escape sequences are '\\%' and '\\_'\n\n    const pat0 = v.replace(/[.*+?^=!:${}()|[\\]\\/]/g, '\\\\$&');\n    let pattern = '';\n    let prev: string | undefined = void 0;\n\n    for (const c of pat0) {\n        switch (c) {\n        case '%':\n            if (prev === '\\\\') {\n                pattern += '%';\n            } else {\n                pattern += '.*';\n            }\n            break;\n        case '_':\n            if (prev === '\\\\') {\n                pattern += '_';\n            } else {\n                pattern += '.';\n            }\n            break;\n        case '\\\\':\n            break;\n        default:\n            if (prev === '\\\\') {\n                pattern += '\\\\';\n            }\n            pattern += c;\n        }\n        prev = c;\n    }\n    if (prev === '\\\\') {\n        pattern += '\\\\';\n    }\n    return `^${pattern}$`;\n}\n\n\nfunction evalCondition(\n        fieldNameMap: Map<string, string>,\n        groupFields: Map<string, string> | null,\n        isAggregation: boolean,\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cond: PreparedCondition, record: any): boolean {\n\n    let ret = true;\n\n    EVAL: switch (cond.op) {\n    case 'true':\n        break;\n    case 'and':\n        for (const w of cond.operands) {\n            if (! evalRecursiveCondition(fieldNameMap, groupFields, isAggregation, ctx, w, record)) {\n                ret = false;\n                break EVAL;\n            }\n        }\n        break;\n    case 'or':\n        for (const w of cond.operands) {\n            if (evalRecursiveCondition(fieldNameMap, groupFields, isAggregation, ctx, w, record)) {\n                break EVAL;\n            }\n        }\n        ret = false;\n        break;\n    case 'not':\n        ret = !evalRecursiveCondition(fieldNameMap, groupFields, isAggregation, ctx, cond.operands[0], record);\n        break;\n    default:\n        {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const v1 = getOp1Value(fieldNameMap, groupFields, isAggregation, ctx, cond, record);\n            const v2 = getOp2Value(ctx, cond, record);\n            switch (cond.op) {\n            case '=':\n                if (! (v1 === v2)) {\n                    ret = false;\n                }\n                break;\n            case '!=':\n                if (! (v1 !== v2)) {\n                    ret = false;\n                }\n                break;\n            case '<':\n                if (v1 === null) {\n                    ret = false;\n                    break;\n                }\n                if (v2 === null) {\n                    ret = false;\n                    break;\n                }\n                if (! ((v1 as any) < (v2 as any))) {\n                    ret = false;\n                }\n                break;\n            case '<=':\n                if (v1 === null) {\n                    ret = false;\n                    break;\n                }\n                if (v2 === null) {\n                    ret = false;\n                    break;\n                }\n                if (! ((v1 as any) <= (v2 as any))) {\n                    ret = false;\n                }\n                break;\n            case '>':\n                if (v1 === null) {\n                    ret = false;\n                    break;\n                }\n                if (v2 === null) {\n                    ret = false;\n                    break;\n                }\n                if (! ((v1 as any) > (v2 as any))) {\n                    ret = false;\n                }\n                break;\n            case '>=':\n                if (v1 === null) {\n                    ret = false;\n                    break;\n                }\n                if (v2 === null) {\n                    ret = false;\n                    break;\n                }\n                if (! ((v1 as any) >= (v2 as any))) {\n                    ret = false;\n                }\n                break;\n            case 'like':\n                if (typeof v1 !== 'string') {\n                    ret = false;\n                    break;\n                }\n                if (typeof v2 !== 'string') {\n                    throw new Error(`Operator \"like\": operand(2) should be string.`);\n                }\n                {\n                    const re = new RegExp(convertPattern(v2), 'i');\n                    if (! re.test(v1)) {\n                        ret = false;\n                    }\n                }\n                break;\n            case 'not_like':\n                if (typeof v1 !== 'string') {\n                    ret = false;\n                    break;\n                }\n                if (typeof v2 !== 'string') {\n                    throw new Error(`Operator \"not_like\": operand(2) should be string.`);\n                }\n                {\n                    const re = new RegExp(convertPattern(v2), 'i');\n                    if (re.test(v1)) {\n                        ret = false;\n                    }\n                }\n                break;\n            case 'in':\n                if (! Array.isArray(v2)) {\n                    throw new Error(`Operator \"in\": operand(2) should be array.`);\n                }\n                if (! v2.filter(w => w !== null).includes(v1)) {\n                    // NOTE: `(null = ?)`, `(? = null)` and `(null = null)` always FALSE.\n                    ret = false;\n                }\n                break;\n            case 'not_in':\n                if (! Array.isArray(v2)) {\n                    throw new Error(`Operator \"not_in\": operand(2) should be array.`);\n                }\n                if (v1 === null) {\n                    // NOTE: Emulate SQL's 'not in'; `(null <> null)` always FALSE.\n                    ret = false;\n                    break;\n                }\n                if (v2.includes(null)) {\n                    ret = false;\n                    break;\n                }\n                if (v2.includes(v1)) {\n                    ret = false;\n                }\n                break;\n            case 'includes':\n                if (typeof v1 !== 'string') {\n                    ret = false;\n                    break;\n                }\n                if (! Array.isArray(v2)) {\n                    throw new Error(`Operator \"includes\": operand(2) should be array.`);\n                }\n                ret = false;\n                OUTER: for (const p of v2) {\n                    if (typeof p !== 'string') {\n                        throw new Error(`Operator \"includes\": operand(2) array items should be string.`);\n                    }\n                    const v1Items = v1.split(';');\n                    const v2Items = p.split(';');\n                    for (const q of v2Items) {\n                        if (! v1Items.includes(q)) {\n                            continue OUTER;\n                        }\n                    }\n                    ret = true;\n                    break;\n                }\n                break;\n            case 'excludes':\n                if (typeof v1 !== 'string') {\n                    // NOTE: Emulate SQL's 'not in'; `(null <> null)` always FALSE.\n                    ret = false;\n                    break;\n                }\n                if (! Array.isArray(v2)) {\n                    throw new Error(`Operator \"excludes\": operand(2) should be array.`);\n                }\n                {\n                    const v1Items = v1.split(';');\n                    for (const p of v2) {\n                        if (typeof p !== 'string') {\n                            throw new Error(`Operator \"excludes\": operand(2) array items should be string.`);\n                        }\n                        const v2Items = p.split(';');\n                        let matched = true;\n                        for (const q of v2Items) {\n                            if (! v1Items.includes(q)) {\n                                matched = false;\n                                break;\n                            }\n                        }\n                        if (matched) {\n                            ret = false;\n                            break;\n                        }\n                    }\n                }\n                break;\n            }\n        }\n        break;\n    }\n\n    return ret;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function applyWhereConditions(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        conds: PreparedCondition[], records: any[]) {\n\n    const ret: any[] = [];\n\n    if (! records.length) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return ret;\n    }\n    const fieldNameMap = new Map<string, string>(Object.keys(records[0]).map(x => [x.toLowerCase(), x]));\n\n    NEXTREC: for (const record of records) {\n        for (const cond of conds) {\n            if (! evalCondition(fieldNameMap, null, false, ctx, cond, record)) {\n                continue NEXTREC;\n            }\n        }\n        ret.push(record);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return ret;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function applyHavingConditions(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        conds: PreparedCondition[], groupedRecsArray: any[][]) {\n\n    const ret: any[][] = [];\n\n    if (! groupedRecsArray.length) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return ret;\n    }\n    const fieldNameMap = new Map<string, string>(Object.keys(groupedRecsArray[0][0]).map(x => [x.toLowerCase(), x]));\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const firstRec = groupedRecsArray[0][0];\n    const groupFields = new Map<string, string>(\n        ctx.query?.groupBy?.map(w => [w.toLowerCase(), getTrueCaseFieldName(firstRec, w) ?? '']));\n\n    NEXTREC: for (const groupedRecs of groupedRecsArray) {\n        for (const cond of conds) {\n            if (! evalCondition(fieldNameMap, groupFields, true, ctx, cond, groupedRecs)) {\n                continue NEXTREC;\n            }\n        }\n        ret.push(groupedRecs);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return ret;\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\nexport * from './types';\nexport * from './filters';\nexport * from './sort';\nexport * from './builder';\nexport * from './resolvers';\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { ResolverContext,\n         FieldResultType,\n         QueryFuncInfo,\n         PreparedConditionOperand,\n         PreparedCondition,\n         PreparedFnCall } from '../types';\n\n\n\nexport interface CondOp1CacheValue {\n    isField: boolean,\n    isDateOrDatetime: boolean,\n    op: PreparedConditionOperand,\n    op2FieldResultType: FieldResultType,\n    fnInfo: QueryFuncInfo | null,\n    fn: (fieldNameMap: Map<string, string>, ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        cache: CondOp1CacheValue, record: any) => any,\n}\n\nexport interface CondOp2CacheValue {\n    value: any,\n}\n\n\nexport const condOp1FnCache = new WeakMap<PreparedCondition, CondOp1CacheValue>();\n\nexport const condOp2ValueCache = new WeakMap<PreparedCondition, CondOp2CacheValue>();\n\nexport const nestedFnInfoCache = new WeakMap<PreparedFnCall, QueryFuncInfo>();\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { FieldResultType,\n         PreparedFnCall,\n         ResolverContext,\n         ScalarQueryFuncInfo,\n         ImmediateScalarQueryFuncInfo,\n         AggregateQueryFuncInfo } from '../types';\nimport { getObjectValue }         from './util';\nimport { nestedFnInfoCache }      from './cache';\n\n\n\nexport function callScalarFunction(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        field: PreparedFnCall, fnInfo: ScalarQueryFuncInfo, fieldResultType: FieldResultType,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        record: any, groupedRecs: any[] | null): any {\n\n    const args = field.args.map(a => {\n        switch (typeof a) {\n        case 'object':\n            if (a === null) {\n                return a;\n            }\n            switch (a.type) {\n            case 'field':\n                {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    let z = getObjectValue(record, a.name[a.name.length - 1]);\n                    switch (fieldResultType) {\n                    case 'date': case 'datetime':\n                        z = new Date(z).getTime();\n                        break;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return z;\n                }\n            case 'date': case 'datetime':\n                switch (fieldResultType) {\n                case 'date': case 'datetime':\n                    return new Date(a.value).getTime();\n                default:\n                    return a.value;\n                }\n            case 'fncall':\n                {\n                    let argFnInfoTmp = nestedFnInfoCache.get(a);\n                    if (! argFnInfoTmp) {\n                        const argFnNameI = a.fn.toLowerCase();\n                        argFnInfoTmp = ctx.functions.find(x => x.name.toLowerCase() === argFnNameI);\n                    }\n                    const argFnInfo = argFnInfoTmp;\n\n                    switch (argFnInfo?.type) {\n                    case 'aggregate':\n                        if (! groupedRecs) {\n                            throw new Error(`Nested function ${a.fn} is not allowed.`);\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return callAggregateFunction(ctx, a, argFnInfo, 'any', groupedRecs);\n                    case 'scalar':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return callScalarFunction(ctx, a, argFnInfo, 'any', record, groupedRecs);\n                    case 'immediate-scalar':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return callImmediateScalarFunction(ctx, a, argFnInfo, 'any', record, groupedRecs);\n                    default:\n                        throw new Error(`Nested function ${a.fn} is not allowed.`);\n                    }\n                }\n            default:\n                return a;\n            }\n        default:\n            return a;\n        }\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return fnInfo.fn(ctx, args, record);\n}\n\n\nexport function callImmediateScalarFunction(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        field: PreparedFnCall, fnInfo: ImmediateScalarQueryFuncInfo, fieldResultType: FieldResultType,\n        record: any | null, groupedRecs: any[] | null): any {\n\n    const args = field.args.map(a => {\n        switch (typeof a) {\n        case 'object':\n            if (a === null) {\n                return a;\n            }\n            switch (a.type) {\n            case 'field':\n                throw new Error(`Immediate scalar function should not refer the field (${a.name.join('.')}).`);\n            case 'date': case 'datetime':\n                switch (fieldResultType) {\n                case 'date': case 'datetime':\n                    return new Date(a.value).getTime();\n                default:\n                    return a.value;\n                }\n            case 'fncall':\n                {\n                    let argFnInfoTmp = nestedFnInfoCache.get(a);\n                    if (! argFnInfoTmp) {\n                        const argFnNameI = a.fn.toLowerCase();\n                        argFnInfoTmp = ctx.functions.find(x => x.name.toLowerCase() === argFnNameI);\n                    }\n                    const argFnInfo = argFnInfoTmp;\n\n                    switch (argFnInfo?.type) {\n                    case 'aggregate':\n                        if (groupedRecs === null) {\n                            throw new Error(`Nested function ${a.fn} is not allowed.`);\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return callAggregateFunction(ctx, a, argFnInfo, 'any', groupedRecs);\n                    case 'scalar':\n                        if (record === null) {\n                            throw new Error(`Nested function ${a.fn} is not allowed.`);\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return callScalarFunction(ctx, a, argFnInfo, 'any', record, groupedRecs);\n                    case 'immediate-scalar':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return callImmediateScalarFunction(ctx, a, argFnInfo, 'any', record, groupedRecs);\n                    default:\n                        throw new Error(`Nested function ${a.fn} is not allowed.`);\n                    }\n                }\n            default:\n                return a;\n            }\n        default:\n            return a;\n        }\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return fnInfo.fn(ctx, args);\n}\n\n\nexport function callAggregateFunction(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        field: PreparedFnCall, fnInfo: AggregateQueryFuncInfo, fieldResultType: FieldResultType, records: any[]): any {\n\n    const args = field.args.map(a => {\n        switch (typeof a) {\n        case 'object':\n            if (a === null) {\n                return a;\n            }\n            switch (a.type) {\n            case 'field':\n                {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    let z = records.map(w => getObjectValue(w, a.name[a.name.length - 1]));\n                    switch (fieldResultType) {\n                    case 'date': case 'datetime':\n                        z = z.map(w => new Date(w).getTime());\n                        break;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return z;\n                }\n            case 'date': case 'datetime':\n                switch (fieldResultType) {\n                case 'date': case 'datetime':\n                    return new Date(a.value).getTime();\n                default:\n                    return a.value;\n                }\n            case 'fncall':\n                {\n                    let argFnInfoTmp = nestedFnInfoCache.get(a);\n                    if (! argFnInfoTmp) {\n                        const argFnNameI = a.fn.toLowerCase();\n                        argFnInfoTmp = ctx.functions.find(x => x.name.toLowerCase() === argFnNameI);\n                    }\n                    const argFnInfo = argFnInfoTmp;\n\n                    switch (argFnInfo?.type) {\n                    case 'scalar':\n                        {\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                            const z = records.map(w => callScalarFunction(ctx, a, argFnInfo, 'any', w, records));\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                            return z;\n                        }\n                    case 'immediate-scalar':\n                        {\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                            const z = records.map(w => callImmediateScalarFunction(ctx, a, argFnInfo, 'any', w, records));\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                            return z;\n                        }\n                    default:\n                        throw new Error(`Nested function ${a.fn} is not allowed.`);\n                    }\n                }\n            default:\n                return a;\n            }\n        default:\n            return a;\n        }\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return fnInfo.fn(ctx, args, records);\n}\n\n\nexport function getGroupFieldTrueCaseName(groupFields: Map<string, string>, name: string): string | null {\n    if (groupFields.has(name)) {\n        const trueCaseName = groupFields.get(name);\n        if (trueCaseName) {\n            return trueCaseName;\n        }\n    }\n    return null;\n}\n\n\nexport function isScalarFnCallable(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        groupFields: Map<string, string>, args: PreparedFnCall['args']): boolean {\n\n    for (const a of args) {\n        switch (typeof a) {\n        case 'object':\n            switch (a?.type) {\n            case 'field':\n                {\n                    const trueCaseName = getGroupFieldTrueCaseName(groupFields, a.name[a.name.length - 1]);\n                    if (! trueCaseName) {\n                        return false;\n                    }\n                }\n                break;\n            case 'fncall':\n                {\n                    const argFnNameI = a.fn.toLowerCase();\n                    const argFnInfo = ctx.functions.find(x => x.name.toLowerCase() === argFnNameI);\n                    switch (argFnInfo?.type) {\n                    case 'scalar':\n                        if (! isScalarFnCallable(ctx, groupFields, a.args)) {\n                            return false;\n                        }\n                    }\n                }\n                break;\n            }\n            break;\n        }\n    }\n    return true;\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { ParsedQuery,\n         PreparedQuery,\n         PreparedField,\n         PreparedFnCall,\n         PreparedFieldListItem,\n         ParsedResolver,\n         PreparedCondition,\n         PreparedOrderByField,\n         ResolverTreeDirection,\n         ResolverTreeNode,\n         QueryBuilderInfoInternal } from '../types';\nimport { isEqualComplexName,\n         getFullQualifiedName,\n         getTrueCaseFieldName }     from './util';\n\n\n\nfunction makeResolverTree(\n        builder: QueryBuilderInfoInternal,\n        path: ResolverTreeNode[],\n        args: Pick<ResolverTreeNode, 'fieldOrRelName' | 'resolverName' | 'direction'>): ResolverTreeNode {\n\n    const argResolverNameI = args.resolverName.toLowerCase();\n    const argfieldOrRelNameI = args.fieldOrRelName.toLowerCase();\n    const trueCaseArgResolverName = getTrueCaseFieldName(builder.relationships, args.resolverName);\n\n    if (! trueCaseArgResolverName) {\n        throw new Error(`Resolver '${args.resolverName}' is not found.`);\n    }\n\n    const found = path.find(\n        x => x.resolverName.toLowerCase() === argResolverNameI &&\n        x.fieldOrRelName.toLowerCase() === argfieldOrRelNameI);\n\n    if (found) {\n        return found;\n    }\n\n    const children: ResolverTreeNode[] = [];\n    const ret: ResolverTreeNode = {\n        fieldOrRelName: args.fieldOrRelName,\n        resolverName: trueCaseArgResolverName,\n        // fkeyIdName: '', // TODO:\n        direction: args.direction,\n        children: children,\n    };\n\n    const q = builder.relationships[trueCaseArgResolverName];\n    const nextPath = path.concat([ret]);\n\n    for (const k of Object.keys(q)) {\n        const c = q[k];\n        if (Array.isArray(c)) {\n            children.push(makeResolverTree(builder, nextPath, {\n                resolverName: c[0],\n                fieldOrRelName: k,\n                direction: ResolverTreeDirection.MasterToDetail,\n            }));\n        } else if (typeof c === 'string') {\n            children.push(makeResolverTree(builder, nextPath, {\n                resolverName: c,\n                fieldOrRelName: k,\n                direction: ResolverTreeDirection.DetailsToMaster,\n            }));\n        } else {\n            children.push(makeResolverTree(builder, nextPath, {\n                resolverName: c.resolver,\n                fieldOrRelName: k,\n                direction: ResolverTreeDirection.DetailsToMaster,\n            }));\n        }\n    }\n\n    return ret;\n}\n\n\nfunction findResolver(\n    query: ParsedQuery,\n    x: PreparedField | PreparedOrderByField) {\n\n    const rn = x.name.slice(0, x.name.length - 1);\n    return query.from.find(w => isEqualComplexName(w.name, rn));\n}\n\n\nfunction registerFields(\n        query: ParsedQuery,\n        x: PreparedField | PreparedOrderByField,\n        defaultResolver: ParsedResolver | undefined,\n        fn: (rslv: ParsedResolver) => Set<string>) {\n\n    const resolver = findResolver(query, x) ?? defaultResolver;\n    if (resolver) {\n        fn(resolver).add(x.name[x.name.length - 1]);\n    }\n}\n\n\nfunction flatConditions(\n        dest: PreparedCondition[],\n        parentOp: 'and' | 'or' | 'not',\n        cond: PreparedCondition) {\n\n    const recurse = (op: typeof parentOp, x: PreparedCondition) => {\n        const c: PreparedCondition[] = [];\n        flatConditions(c, op, x);\n        x.operands = c;\n        dest.push(x);\n    };\n\n    const pushOperands = () => {\n        for (const x of cond.operands) {\n            switch (typeof x) {\n            case 'object':\n                if (x === null || Array.isArray(x)) {\n                    throw new Error(`Unexpected AST is found.`);\n                } else {\n                    switch (x.type) {\n                    case 'condition':\n                        switch (x.op) {\n                        case 'and': case 'or': case 'not':\n                            if (x.op !== 'not' && x.op === parentOp) {\n                                flatConditions(dest, x.op, x);\n                            } else {\n                                recurse(x.op, x);\n                            }\n                            break;\n                        default:\n                            dest.push(x);\n                            break;\n                        }\n                        break;\n                    default:\n                        throw new Error(`Unexpected AST ${x.type} is found.`);\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unexpected AST is found.`);\n            }\n        }\n    };\n\n    switch (cond.op) {\n    case 'and': case 'or': case 'not':\n        if (cond.op === parentOp) {\n            pushOperands();\n        } else {\n            recurse(cond.op, cond);\n        }\n        break;\n    default:\n        dest.push(cond);\n        break;\n    }\n}\n\n\nfunction recureseForEachConditionFieldsFncall(\n        x: PreparedFnCall,\n        fn: (field: PreparedField | PreparedOrderByField) => void) {\n\n    for (const arg of x.args) {\n        switch (typeof arg) {\n        case 'object':\n            if (arg === null) {\n                // NOTE: Nothing to do.\n            } else {\n                switch (arg.type) {\n                case 'field':\n                    fn(arg);\n                    break;\n                case 'fncall':\n                    recureseForEachConditionFieldsFncall(arg, fn);\n                    break;\n                }\n            }\n            break;\n        }\n    }\n}\n\n\nfunction recureseForEachConditionFields(\n        cond: PreparedCondition,\n        fn: (field: PreparedField | PreparedOrderByField) => void) {\n\n    switch (cond.type) {\n    case 'condition':\n        for (const x of cond.operands) {\n            switch (typeof x) {\n            case 'object':\n                if (x === null) {\n                    // NOTE: never reach here.\n                } else if (Array.isArray(x)) {\n                    // NOTE: Nothing to do. It is data.\n                } else {\n                    switch (x.type) {\n                    case 'condition':\n                        recureseForEachConditionFields(x, fn);\n                        break;\n                    case 'field':\n                        fn(x);\n                        break;\n                    case 'fncall':\n                        for (const arg of x.args) {\n                            switch (typeof arg) {\n                            case 'object':\n                                if (arg === null) {\n                                    // NOTE: Nothing to do.\n                                } else {\n                                    switch (arg.type) {\n                                    case 'field':\n                                        fn(arg);\n                                        break;\n                                    case 'fncall':\n                                        recureseForEachConditionFieldsFncall(arg, fn);\n                                        break;\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n        break;\n    }\n\n    return cond;\n}\n\n\nfunction normalize(\n        builder: QueryBuilderInfoInternal, query: ParsedQuery,\n        parentName: string[], parentAliases: Map<string, string[]> | null): PreparedQuery {\n\n    // Check and normalize `from` resolvers\n    const resolverAliases = new Map<string, string[]>(parentAliases ?? []);\n\n    if (parentName.length === 0 && query.from[0].name.length > 1) {\n        throw new Error('Relationship name is not allowed at first item of root level from clause.');\n    }\n\n    {\n        const x = query.from[0];\n        if (query.from[0].name.length > 1) {\n            while (resolverAliases.has(x.name[0].toLowerCase())) { // TODO: set max loop\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                x.name = resolverAliases.get(x.name[0].toLowerCase())!.concat(x.name.slice(1));\n            }\n        }\n        if (parentName.length > 0) {\n            x.name = getFullQualifiedName(parentName, x.name);\n            if (! isEqualComplexName(x.name.slice(0, parentName.length), parentName)) {\n                throw new Error(`Resolver name ${x.name.join('.')} is not match to parent resolver ${parentName.join('.')}`);\n            }\n        }\n    }\n\n    const primaryResolverName = query.from[0].name;\n\n    if (query.from[0].aliasName) {\n        resolverAliases.set(query.from[0].aliasName.toLowerCase(), primaryResolverName);\n    }\n\n    query.whereSubQueries = [];\n    query.havingSubQueries = [];\n    query.selectSubQueries = [];\n\n    for (const x of query.from.slice(1)) {\n        if (x.name.length === 1) {\n            x.name = primaryResolverName.concat(x.name);\n        } else {\n            let nameI = x.name[0].toLowerCase();\n            while (resolverAliases.has(nameI)) { // TODO: set max loop\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                x.name = resolverAliases.get(nameI)!.concat(x.name.slice(1));\n                nameI = x.name[0].toLowerCase();\n            }\n\n            x.name = getFullQualifiedName(primaryResolverName, x.name);\n        }\n        if (x.aliasName) {\n            resolverAliases.set(x.aliasName.toLowerCase(), x.name);\n        }\n    }\n\n    const fieldAliasNames = new Map<string, string[]>();\n    let normalizeTarget: 'select' | 'where' | 'having' | 'orderby' = 'select';\n\n    const normalizeSelectField = (x: PreparedField | PreparedOrderByField) => {\n        // Resolve field alias names\n        switch (normalizeTarget) {\n        case 'select':\n            if ((x as PreparedField).aliasName) {\n                fieldAliasNames.set(\n                    ((x as PreparedField).aliasName as string).toLowerCase(),\n                    x.name\n                );\n            }\n            break;\n        case 'where': case 'having': case 'orderby':\n            if (x.name.length === 1) {\n                const nameI = x.name[0].toLowerCase();\n                if (fieldAliasNames.has(nameI)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    x.name = fieldAliasNames.get(nameI)!;\n                }\n            }\n            break;\n        }\n\n        // Resolve resolver alias names\n        if (x.name.length === 1) {\n            x.name = primaryResolverName.concat(x.name);\n        } else {\n            let nameI = x.name[0].toLowerCase();\n            while (resolverAliases.has(nameI)) { // TODO: set max loop\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                x.name = resolverAliases.get(nameI)!.concat(x.name.slice(1));\n                nameI = x.name[0].toLowerCase();\n            }\n\n            x.name = getFullQualifiedName(primaryResolverName, x.name);\n\n            const rn = x.name.slice(0, x.name.length - 1);\n            if (! query.from.find(w => isEqualComplexName(w.name, rn))) {\n                query.from.push({\n                    name: rn,\n                    aliasName: null,\n                });\n            }\n        }\n\n        return x;\n    };\n\n    const normalizeFnCall = (x: PreparedFnCall, opIndex: number) => {\n        const fnNameI = x.fn.toLowerCase();\n        const found = builder.functions.find(z => z.name.toLowerCase() === fnNameI);\n        if (! found) {\n            throw new Error(`Function '${x.fn}' is not found.`);\n        }\n\n        switch (normalizeTarget) {\n        case 'select':\n            if (found.type === 'aggregate' && !query.groupBy) {\n                query.groupBy = [];\n            }\n            break;\n        case 'where':\n            if (found.type === 'aggregate') {\n                // NOTE: scalar and immediate-scalar is allowed.\n                throw new Error(`Aggregate function '${x.fn}' is not allowed.`);\n            }\n            if (opIndex !== 0 && found.type !== 'immediate-scalar') {\n                throw new Error(`Function '${x.fn}' is not allowed at operand ${opIndex + 1}.`);\n            }\n            break;\n        case 'having':\n            if (opIndex !== 0 && found.type !== 'immediate-scalar') {\n                throw new Error(`Function '${x.fn}' is not allowed at operand ${opIndex + 1}.`);\n            }\n            break;\n        }\n\n        for (const arg of x.args) {\n            switch (typeof arg) {\n            case 'object':\n                if (arg === null) {\n                    // NOTE: Nothing to do.\n                } else {\n                    switch (arg.type) {\n                    case 'field':\n                        normalizeSelectField(arg);\n                        break;\n                    case 'fncall':\n                        normalizeFnCall(arg, 0); // NOTE: treat as opIndex = 0 (always correct)\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n\n        return x;\n    };\n\n    const normalizeCondition = (cond: PreparedCondition) => {\n        switch (cond.type) {\n        case 'condition':\n            for (let i = 0; i < cond.operands.length; i++) {\n                const x = cond.operands[i];\n                switch (typeof x) {\n                case 'object':\n                    if (x === null) {\n                        // NOTE: never reach here.\n                    } else if (Array.isArray(x)) {\n                        // NOTE: Nothing to do. It is data.\n                    } else {\n                        switch (x.type) {\n                        case 'condition':\n                            normalizeCondition(x);\n                            break;\n                        case 'field':\n                            normalizeSelectField(x);\n                            break;\n                        case 'fncall':\n                            normalizeFnCall(x, i);\n                            break;\n                        case 'subquery':\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            (normalizeTarget === 'where' ?\n                                query.whereSubQueries :\n                                query.havingSubQueries)!.push(x);\n                            x.query = normalize(builder, x.query, [], null);\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            break;\n        }\n        return cond;\n    };\n\n    // Check and normalize `select` fields\n    for (let i = 0; i < query.select.length; i++) {\n        const x = query.select[i];\n        switch (x.type) {\n        case 'field':\n            normalizeSelectField(x);\n            break;\n        case 'fncall':\n            normalizeFnCall(x, i);\n            break;\n        case 'subquery':\n            query.selectSubQueries.push(x);\n            x.query = normalize(builder, x.query, primaryResolverName, resolverAliases);\n            break;\n        }\n    }\n\n    // Check and normalize `where` fields\n    if (query.where) {\n        normalizeTarget = 'where';\n        normalizeCondition(query.where[0]);\n    }\n\n    // Check and normalize `having` fields\n    if (query.having) {\n        normalizeTarget = 'having';\n        normalizeCondition(query.having[0]);\n    }\n\n    // Check and normalize `orderBy` fields\n    if (query.orderBy) {\n        normalizeTarget = 'orderby';\n        for (const x of query.orderBy) {\n            normalizeSelectField(x);\n        }\n    }\n\n    for (const x of query.from) {\n        x.queryFields = new Set<string>();\n        x.queryFieldsMap = new Map<string, PreparedFieldListItem>();\n        x.condFields = new Set<string>();\n        x.condAliasFields = new Set<string>();\n        x.havingCondFields = new Set<string>();\n        // fieldAliasNames\n        // sortFieldNames\n        x.relationshipIdFields = new Set<string>();\n    }\n\n    const registerQueryFields = (x: PreparedField) =>\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        registerFields(query, x, query.from[0], (rslv: ParsedResolver) => rslv.queryFields!);\n\n    const registerCondFields = (x: PreparedField | PreparedOrderByField) =>\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        registerFields(query, x, query.from[0], (rslv: ParsedResolver) => rslv.condFields!);\n\n    const registerHavingCondFields = (x: PreparedField | PreparedOrderByField) =>\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        registerFields(query, x, query.from[0], (rslv: ParsedResolver) => rslv.havingCondFields!);\n\n    let exprCount = 0;\n\n    const collectFncallQueryFields = (x: PreparedFnCall, nested: boolean) => {\n        if (! nested) {\n            if (! x.aliasName) {\n                x.aliasName = `expr${exprCount++}`; // TODO: Check conflict\n            }\n        }\n        let resolver: ParsedResolver | undefined = void 0;\n        for (const arg of x.args) {\n            switch (typeof arg) {\n            case 'object':\n                if (arg === null) {\n                    // NOTE: Nothing to do.\n                } else {\n                    switch (arg.type) {\n                    case 'field':\n                        registerQueryFields(arg);\n                        if (! resolver) {\n                            // BUG: TODO: Check all arguments are same resolver's field.\n                            resolver = findResolver(query, arg);\n                        }\n                        break;\n                    case 'fncall':\n                        {\n                            const resolverTmp = collectFncallQueryFields(arg, true);\n                            if (! resolver) {\n                                resolver = resolverTmp;\n                            }\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n        if (! nested) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (resolver ?? query.from[0]).queryFieldsMap!.set(x.aliasName, x);\n        }\n        return resolver;\n    };\n\n    for (const x of query.select) {\n        switch (x.type) {\n        case 'field':\n            {\n                registerQueryFields(x);\n                const resolver = findResolver(query, x); // TODO: find twice!\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                resolver?.queryFieldsMap!.set(x.name[x.name.length - 1], x);\n            }\n            break;\n        case 'fncall':\n            collectFncallQueryFields(x, false);\n            break;\n        }\n    }\n\n    if (query.where) {\n        recureseForEachConditionFields(query.where[0], registerCondFields);\n    }\n\n    if (query.having) {\n        recureseForEachConditionFields(query.having[0], registerHavingCondFields);\n    }\n\n    if (query.groupBy) {\n        for (const x of query.groupBy) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            query.from[0].havingCondFields!.add(x);\n        }\n    }\n\n    query.from[0].name = primaryResolverName;\n\n    // Check resolvers' paths\n    const primaryResolverRootTrueCaseName = getTrueCaseFieldName(builder.relationships, primaryResolverName[0]);\n    if (! primaryResolverRootTrueCaseName) {\n        throw new Error(`Resolver '${primaryResolverName[0]}' is not found.`);\n    }\n\n    const resolverTree = makeResolverTree(builder, [], {\n        resolverName: primaryResolverRootTrueCaseName,\n        fieldOrRelName: primaryResolverRootTrueCaseName,\n        direction: ResolverTreeDirection.DetailsToMaster,\n    });\n\n    for (const x of query.from) {\n        let rt = [resolverTree];\n        let lastFound: ResolverTreeNode | undefined;\n\n        for (let j = 0; j < x.name.length; j++) {\n            const name = x.name[j];\n            const nameI = name.toLowerCase();\n            const found = rt.find(z => z.fieldOrRelName.toLowerCase() === nameI);\n            if (found) {\n                lastFound = found;\n                rt = found.children;\n                x.name[j] = found.fieldOrRelName; // NOTE: fix case\n            } else {\n                throw new Error(`Resolver '${name}' is not found.`);\n            }\n        }\n\n        if (lastFound) {\n            x.resolver = builder.resolvers.query[lastFound.resolverName];\n            x.resolverName = lastFound.resolverName;\n        }\n    }\n\n    if (query.where) {\n        const c: PreparedCondition[] = [];\n        flatConditions(c, 'and', query.where[0]);\n        query.where = c;\n    }\n    if (query.having) {\n        const c: PreparedCondition[] = [];\n        flatConditions(c, 'and', query.having[0]);\n        query.having = c;\n    }\n\n    // TODO: Error if subquery appears `or`'s 2nd or later operand.\n\n    query.from = query.from.slice(0, 1).concat(\n        query.from.slice(1).sort((a, b) => a.name.length - b.name.length));\n\n    for (let i = 0; i < query.from.length; i++) {\n        const x = query.from[i];\n\n        {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            x.fieldAliasNames = new Set<string>(Array.from(x.queryFieldsMap!.entries()).map(c => {\n                const f = c[1];\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                if (f.aliasName && !x.queryFields!.has(f.aliasName)) {\n                    return f.aliasName.toLowerCase();\n                } else {\n                    return '';\n                }\n            }).filter(c => !!c));\n\n            for (const c of x.fieldAliasNames) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                if (x.condFields!.has(c)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    x.condFields!.delete(c);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    x.condAliasFields!.add(c);\n                }\n            }\n        }\n\n        {\n            x.sortFieldNames = new Set<string>(\n                query.orderBy\n                    ? query.orderBy\n                        .filter(c =>\n                            x.name.length + 1 === c.name.length &&\n                                isEqualComplexName(x.name, c.name.slice(0, x.name.length)))\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        .filter(c => !(x.fieldAliasNames!.has(c.name[c.name.length - 1].toLowerCase())))\n                        .map(c => c.name[c.name.length - 1])\n                    : []);\n        }\n\n        {\n            const resolverName = x.resolverName ?? '';\n\n            for (let j = i + 1; j < query.from.length; j++) {\n                const c = query.from[j];\n\n                if (x.name.length + 1 === c.name.length && isEqualComplexName(x.name, c.name.slice(0, x.name.length))) {\n                    const childResolverName = c.resolverName ?? '';\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion\n                    const childRelationshipInfo = ((builder.relationships[resolverName] ?? {})[childResolverName] as any) ?? {};\n\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    const childIdField = childRelationshipInfo.id\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                        ? childRelationshipInfo.id as string\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        : builder.rules.foreignIdFieldName!(childResolverName);\n\n                    if (childIdField) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        x.relationshipIdFields!.add(childIdField);\n                    }\n                }\n            }\n        }\n    }\n\n    return query as PreparedQuery;\n}\n\n\nexport function compile(\n    builder: QueryBuilderInfoInternal, query: ParsedQuery): PreparedQuery {\n\n    return normalize(builder, query, [], null);\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { parserInput }        from 'fruitsconfits/modules/lib/types';\nimport { formatErrorMessage } from 'fruitsconfits/modules/lib/parser';\nimport { getStringParsers }   from 'fruitsconfits/modules/lib/string-parser';\n\n\n\ntype Ctx = undefined;\ntype Ast = string | number | boolean | null | string[];\n\n\nconst $s = getStringParsers<Ctx, Ast>({\n    rawToToken: rawToken => rawToken,\n    concatTokens: tokens => (tokens.length ?\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        [tokens.reduce((a, b) => a as string + b as string)] : []),\n});\n\nconst {seq, cls, notCls, classes, numbers, cat,\n       repeat, end, first, combine, erase, trans, ahead,\n       makeProgram} = $s;\n\n\nconst decimalIntegerValue =\n    trans(tokens => [Number.parseInt((tokens as string[])[0].replace(/_/g, ''), 10)])\n    (numbers.int);\n\nconst floatingPointNumberValue =\n    trans(tokens => [Number.parseFloat((tokens as string[])[0].replace(/_/g, ''))])\n    (numbers.float);\n\nconst numberValue =\n    first(floatingPointNumberValue,\n          decimalIntegerValue, );\n\nconst trueValue =\n    trans(tokens => [true])(seq('true'));\n\nconst falseValue =\n    trans(tokens => [false])(seq('false'));\n\n\nconst quoted = trans(input => input.length ? input : [''])(\n    erase(repeat(classes.spaceWithinSingleLine), cls('\"')),\n    cat(repeat(first(\n        trans(input => ['\"'])(seq('\"\"')),\n        notCls('\"'), ))),\n    erase(cls('\"'), repeat(erase(classes.spaceWithinSingleLine))), );\n\nconst nakidNum = trans(input => input.length ? input : [null])(\n    erase(repeat(classes.spaceWithinSingleLine)),\n    first(trueValue, falseValue, numberValue),\n    erase(repeat(classes.spaceWithinSingleLine)),\n    ahead(first(cls(',', '\\r\\n', '\\n', '\\r'), end())), );\n\nconst nakid = trans(input => input.length ? ([input[0] ? (input[0] as string).trim() : '']) : [null])(\n    erase(repeat(classes.spaceWithinSingleLine)),\n    cat(repeat(first(\n        erase(classes.spaceWithinSingleLine, ahead(cls(',', '\\r\\n', '\\n', '\\r'))),\n        notCls(',', '\\r\\n', '\\n', '\\r'), ))));\n\nconst cell = first(quoted, nakidNum, nakid);\n\nconst row = trans(input => [input as string[]])(\n    cell,\n    repeat(combine(erase(seq(',')), cell)), );\n\nconst rows = makeProgram(combine(\n    row,\n    repeat(combine(erase(classes.newline), row)),\n    end(), ));\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function parse(s: string) {\n    const z = rows(parserInput(s));\n    if (! z.succeeded) {\n        throw new Error(formatErrorMessage(z));\n    }\n    return z.tokens as string[][];\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getUTCDayInYear(d: Date) {\n    const d0 = Date.UTC(d.getUTCFullYear(), 0, 1);\n    const d1 = Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());\n    return ((d1 - d0) / (1000 * 60 * 60 * 24)) + 1;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getDayInYear(d: Date) {\n    const d0 = Date.UTC(d.getFullYear(), 0, 1);\n    const d1 = Date.UTC(d.getFullYear(), d.getMonth(), d.getDate());\n    return ((d1 - d0) / (1000 * 60 * 60 * 24)) + 1;\n}\n\n\n/*\nexport function getUTCWeekInYearISO(d: Date) {\n    // ISO 8601 week number\n    // Weeks starting on Monday.\n    // The first week of year (W1) contains first Thursday.\n    const dcMon = d.getUTCMonth();\n    const dcDate = d.getUTCDate();\n\n    if (dcMon === 11 && dcDate >= 29) {\n        const d2 = new Date(Date.UTC(d.getUTCFullYear() + 1, 0, 1));\n        const day2 = (d2.getUTCDay() + 6) % 7; // Monday is 0\n        if (day2 <= 3) {\n            // Mon, Tue, Wed, Thu\n            //  29   30   31   01  (day2 === 3)\n            //  30   31   01       (day2 === 2)\n            //  31   01            (day2 === 1)\n            //  01                 (day2 === 0)\n            // Next year's first week is W01.\n            if (day2 + dcDate >= 32) {\n                return 1;\n            }\n        }\n    }\n\n    const d0 = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    const day0 = (d0.getUTCDay() + 6) % 7; // Monday is 0\n\n    const ds = d0.getTime() - ((1000 * 60 * 60 * 24) * day0);\n\n    const dc = Date.UTC(d.getUTCFullYear(), dcMon, dcDate);\n    const diff = Math.floor((dc - ds) / (1000 * 60 * 60 * 24 * 7));\n\n    if (day0 > 3) {\n        // First day of year is: Fri, Sat, Sun\n        // First day of year is last year's final week.\n        if (diff === 0) {\n            // Last year's final week.\n            const d1 = new Date(Date.UTC(d.getUTCFullYear() - 1, 0, 1));\n            const day1 = (d1.getUTCDay() + 6) % 7; // Monday is 0\n\n            const dp = d1.getTime() - ((1000 * 60 * 60 * 24) * day1);\n            const diff1 = Math.floor((dc - dp) / (1000 * 60 * 60 * 24 * 7));\n            if (day1 > 3) {\n                // Fri, Sat, Sun\n                return diff1;\n            } else {\n                // Mon, Tue, Wed, Thu\n                return diff1 + 1;\n            }\n        } else {\n            return diff;\n        }\n    } else {\n        // First day of year is: Mon, Tue, Wed, Thu\n        // First day of year is this year's first week.\n        return diff + 1;\n    }\n}\n*/\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { ScalarQueryFuncInfo,\n         QueryFuncInfo }   from '../types';\nimport { DatePattern,\n         DateTimePattern } from './util';\nimport { getUTCDayInYear,\n         getDayInYear }    from './datetime-util';\n\n\n\nexport const fnInfo_cast_to_string: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'cast_to_string',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            if (args[0] === null) {\n                return null;\n            }\n            return String(args[0]);\n        }\n        throw new Error(`Argument of function \"cast_to_string\" should be field.`);\n    },\n};\n\nexport const fnInfo_cast_to_number: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'cast_to_number',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            if (args[0] === null) {\n                return null;\n            }\n            return Number(args[0]);\n        }\n        throw new Error(`Argument of function \"cast_to_number\" should be field.`);\n    },\n};\n\nexport const fnInfo_cast_to_boolean: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'cast_to_boolean',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            if (args[0] === null) {\n                return null;\n            }\n            return Boolean(args[0]);\n        }\n        throw new Error(`Argument of function \"cast_to_boolean\" should be field.`);\n    },\n};\n\nexport const fnInfo_concat: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'concat',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            const z = args.filter(c => c !== null);\n            if (z.length === 0) {\n                return null;\n            }\n            return z.map(c => String(c)).join('');\n        }\n        throw new Error(`Argument of function \"concat\" should be field.`);\n    },\n};\n\nexport const fnInfo_add: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'add',\n    fn: (ctx, args, records) => {\n        if (args.length > 1) {\n            const z = args.filter(c => c !== null);\n            if (z.length === 0) {\n                return null;\n            }\n            return z.map(c => Number(c)).reduce((a, b) => a + b);\n        }\n        throw new Error(`Argument of function \"add\" should be field.`);\n    },\n};\n\nexport const fnInfo_sub: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'sub',\n    fn: (ctx, args, records) => {\n        if (args.length > 1) {\n            if (args[0] === null) {\n                return null;\n            }\n            return args.filter(c => c !== null).map(c => Number(c)).reduce((a, b) => a - b);\n        }\n        throw new Error(`Argument of function \"sub\" should be field.`);\n    },\n};\n\nexport const fnInfo_mul: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'mul',\n    fn: (ctx, args, records) => {\n        if (args.length > 1) {\n            const z = args.filter(c => c !== null);\n            if (z.length === 0) {\n                return null;\n            }\n            return z.map(c => Number(c)).reduce((a, b) => a * b);\n        }\n        throw new Error(`Argument of function \"mul\" should be field.`);\n    },\n};\n\nexport const fnInfo_div: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'div',\n    fn: (ctx, args, records) => {\n        if (args.length > 1) {\n            if (args[0] === null) {\n                return null;\n            }\n            return args.filter(c => c !== null).map(c => Number(c)).reduce((a, b) => a / b);\n        }\n        throw new Error(`Argument of function \"div\" should be field.`);\n    },\n};\n\nexport const fnInfo_mod: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'mod',\n    fn: (ctx, args, records) => {\n        if (args.length > 1) {\n            if (args[0] === null) {\n                return null;\n            }\n            return args.filter(c => c !== null).map(c => Number(c)).reduce((a, b) => a % b);\n        }\n        throw new Error(`Argument of function \"div\" should be field.`);\n    },\n};\n\n\nexport const fnInfo_count: QueryFuncInfo = {\n    type: 'aggregate',\n    name: 'count',\n    fn: (ctx, args, records) => {\n        if (args.length === 0) {\n            return records.length;\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const arg = args[0];\n            if (Array.isArray(arg)) {\n                return arg.filter(r => (r === null || r === void 0) ? false : true).length;\n            }\n            throw new Error(`Argument of function \"count\" should be field.`);\n        }\n    },\n};\n\n\nexport const fnInfo_count_distinct: QueryFuncInfo = {\n    type: 'aggregate',\n    name: 'count_distinct',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const arg = args[0];\n            if (Array.isArray(arg)) {\n                const w = arg\n                    .filter(r => (r === null || r === void 0) ? false : true)\n                    .map(x => JSON.stringify(x));\n                return new Set<string>(w).size;\n            }\n        }\n        throw new Error(`Argument of function \"count_distinct\" should be field.`);\n    },\n};\n\n\nexport const fnInfo_sum: QueryFuncInfo = {\n    type: 'aggregate',\n    name: 'sum',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const arg = args[0];\n            if (Array.isArray(arg)) {\n                const w = arg\n                    .filter(r => (typeof r === 'number' && !Number.isNaN(r)) ? true : false);\n                if (w.length) {\n                    return w.reduce((a, b) => (a as number) + (b as number));\n                } else {\n                    return null;\n                }\n            }\n        }\n        throw new Error(`Argument of function \"sum\" should be field.`);\n    },\n};\n\n\nexport const fnInfo_avg: QueryFuncInfo = {\n    type: 'aggregate',\n    name: 'avg',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const arg = args[0];\n            if (Array.isArray(arg)) {\n                const w = arg\n                    .filter(r => (typeof r === 'number' && !Number.isNaN(r)) ? true : false);\n                if (w.length) {\n                    return (w.reduce((a, b) => (a as number) + (b as number)) as number) / w.length;\n                } else {\n                    return null;\n                }\n            }\n        }\n        throw new Error(`Argument of function \"avg\" should be field.`);\n    },\n};\n\n\nexport const fnInfo_max: QueryFuncInfo = {\n    type: 'aggregate',\n    name: 'max',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const arg = args[0];\n            if (Array.isArray(arg)) {\n                const w = arg\n                    .filter(r => ((typeof r === 'number' && !Number.isNaN(r)) || typeof r === 'string') ? true : false);\n                if (w.length) {\n                    return w.reduce((a, b) => (a as number | string) > (b as number | string) ? a : b);\n                } else {\n                    return null;\n                }\n            }\n        }\n        throw new Error(`Argument of function \"max\" should be field.`);\n    },\n};\n\n\nexport const fnInfo_min: QueryFuncInfo = {\n    type: 'aggregate',\n    name: 'min',\n    fn: (ctx, args, records) => {\n        if (args.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const arg = args[0];\n            if (Array.isArray(arg)) {\n                const w = arg\n                    .filter(r => ((typeof r === 'number' && !Number.isNaN(r)) || typeof r === 'string') ? true : false);\n                if (w.length) {\n                    return w.reduce((a, b) => (a as number | string) < (b as number | string) ? a : b);\n                } else {\n                    return null;\n                }\n            }\n        }\n        throw new Error(`Argument of function \"min\" should be field.`);\n    },\n};\n\n\nfunction dateScalarFunctionGen(fnName: string, fn: (dateStr: string) => any): ScalarQueryFuncInfo['fn'] {\n    return (ctx, args, record) => {\n        if (args.length > 0) {\n            const arg = args[0];\n            switch (typeof arg) {\n            case 'object':\n                if (arg === null) {\n                    return null;\n                } else {\n                    switch (arg.type) {\n                    case 'date': case 'datetime':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return fn(arg.value);\n                    default:\n                        return null;\n                    }\n                }\n            case 'string':\n                if (DatePattern.test(arg) || DateTimePattern.test(arg)) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return fn(arg);\n                } else {\n                    return null;\n                }\n            }\n        }\n        throw new Error(`Argument of function \"${fnName}\" should be field.`);\n    };\n}\n\n\nexport const fnInfo_calendar_month: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'calendar_month',\n    fn: dateScalarFunctionGen('calendar_month', (dateStr) => new Date(dateStr).getUTCMonth() + 1), // 1, ... , 12\n};\n\n\nexport const fnInfo_calendar_month_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'calendar_month_lc',\n    fn: dateScalarFunctionGen('calendar_month_lc', (dateStr) => new Date(dateStr).getMonth() + 1), // 1, ... , 12\n};\n\n\nexport const fnInfo_calendar_quarter: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'calendar_quarter',\n    fn: dateScalarFunctionGen('calendar_quarter', (dateStr) => Math.floor(new Date(dateStr).getUTCMonth() / 3) + 1), // 1, ... , 4\n};\n\n\nexport const fnInfo_calendar_quarter_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'calendar_quarter_lc',\n    fn: dateScalarFunctionGen('calendar_quarter_lc', (dateStr) => Math.floor(new Date(dateStr).getMonth() / 3) + 1), // 1, ... , 4\n};\n\n\nexport const fnInfo_calendar_year: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'calendar_year',\n    fn: dateScalarFunctionGen('calendar_year', (dateStr) => new Date(dateStr).getUTCFullYear()),\n};\n\n\nexport const fnInfo_calendar_year_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'calendar_year_lc',\n    fn: dateScalarFunctionGen('calendar_year_lc', (dateStr) => new Date(dateStr).getFullYear()),\n};\n\n\nexport const fnInfo_day_in_month: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_in_month',\n    fn: dateScalarFunctionGen('day_in_month', (dateStr) => new Date(dateStr).getUTCDate()), // 1 , ... , 31\n};\n\n\nexport const fnInfo_day_in_month_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_in_month_lc',\n    fn: dateScalarFunctionGen('day_in_month_lc', (dateStr) => new Date(dateStr).getDate()), // 1 , ... , 31\n};\n\n\nexport const fnInfo_day_in_week: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_in_week',\n    fn: dateScalarFunctionGen('day_in_week', (dateStr) => new Date(dateStr).getUTCDay() + 1), // Sun:1 , ... , Sat:7\n};\n\n\nexport const fnInfo_day_in_week_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_in_week_lc',\n    fn: dateScalarFunctionGen('day_in_week_lc', (dateStr) => new Date(dateStr).getDay() + 1), // Sun:1 , ... , Sat:7\n};\n\n\nexport const fnInfo_day_in_year: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_in_year',\n    fn: dateScalarFunctionGen('day_in_year', (dateStr) => getUTCDayInYear(new Date(dateStr))), // 1 , ... , 366\n};\n\n\nexport const fnInfo_day_in_year_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_in_year_lc',\n    fn: dateScalarFunctionGen('day_in_year_lc', (dateStr) => getDayInYear(new Date(dateStr))), // 1 , ... , 366\n};\n\n\nexport const fnInfo_day_only: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_only',\n    fn: dateScalarFunctionGen('day_only', (dateStr) => new Date(dateStr).toISOString().split('T')[0]),\n};\n\n\nexport const fnInfo_day_only_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'day_only_lc',\n    fn: dateScalarFunctionGen('day_only_lc', (dateStr) => {\n        const d = new Date(dateStr);\n        return new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate())).toISOString().split('T')[0];\n    }),\n};\n\n\nexport const fnInfo_hour_in_day: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'hour_in_day',\n    fn: dateScalarFunctionGen('hour_in_day', (dateStr) => new Date(dateStr).getUTCHours()), // 0 , ... , 23\n};\n\n\nexport const fnInfo_hour_in_day_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'hour_in_day_lc',\n    fn: dateScalarFunctionGen('hour_in_day_lc', (dateStr) => new Date(dateStr).getHours()), // 0 , ... , 23\n};\n\n\nexport const fnInfo_week_in_month: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'week_in_month',\n    fn: dateScalarFunctionGen('week_in_month', (dateStr) => Math.floor((new Date(dateStr).getUTCDate() - 1) / 7) + 1), // 1(day 1~7) , ... , 5(day 29~31)\n};\n\n\nexport const fnInfo_week_in_month_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'week_in_month_lc',\n    fn: dateScalarFunctionGen('week_in_month_lc', (dateStr) => Math.floor((new Date(dateStr).getDate() - 1) / 7) + 1), // 1(day 1~7) , ... , 5(day 29~31)\n};\n\n\nexport const fnInfo_week_in_year: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'week_in_year',\n    fn: dateScalarFunctionGen('week_in_year', (dateStr) => Math.floor((getUTCDayInYear(new Date(dateStr)) - 1) / 7) + 1),\n};\n\n\nexport const fnInfo_week_in_year_lc: QueryFuncInfo = {\n    type: 'scalar',\n    name: 'week_in_year_lc',\n    fn: dateScalarFunctionGen('week_in_year_lc', (dateStr) => Math.floor((getDayInYear(new Date(dateStr)) - 1) / 7) + 1),\n};\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { parserInput,\n         templateStringsParserInput } from 'fruitsconfits/modules/lib/types';\nimport { formatErrorMessage }         from 'fruitsconfits/modules/lib/parser';\nimport { getStringParsers }           from 'fruitsconfits/modules/lib/string-parser';\nimport { getObjectParsers }           from 'fruitsconfits/modules/lib/object-parser';\nimport { PreparedValue,\n         PreparedFieldListItem,\n         PreparedResolver,\n         PreparedCondition,\n         PreparedOrderByField,\n         ParsedQuery }                from '../types';\nimport { DatePattern,\n         DateTimePattern,\n         dummyTargetObject,\n         isUnsafeVarNames }           from './util';\n\n\n\ninterface SxOp {\n    'op': string;\n}\n\ninterface SxSymbol {\n    'symbol': string;\n}\n\ninterface SxObject {\n    'type': /* string */ any;\n}\n\ninterface SxName {\n    'name': /* string */ any[];\n}\n\ntype SxToken =\n    SxSymbol | SxObject | SxName |\n    PreparedValue | PreparedFieldListItem | PreparedResolver |\n    PreparedCondition | PreparedOrderByField | Partial<ParsedQuery> |\n    string | number | boolean | null | SxToken[];\n\ntype Ast = SxToken | SxOp | undefined | Ast[];\n\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface Ctx {}\n\n\nconst $s = getStringParsers<Ctx, Ast>({\n    rawToToken: rawToken => rawToken,\n    concatTokens: tokens => (tokens.length ?\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        [tokens.reduce((a, b) => String(a) + b)] : []),\n});\n\nconst $o = getObjectParsers<Ast[], Ctx, Ast>({\n    rawToToken: rawToken => rawToken,\n    concatTokens: tokens => (tokens.length ?\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        [tokens.reduce((a, b) => String(a) + b)] : []),\n    comparator: (a, b) => a === b,\n});\n\nconst {seq, cls, notCls, clsFn, classes, numbers, isParam, cat,\n       once, repeat, qty, zeroWidth, err, beginning, end,\n       first, or, combine, erase, trans, ahead, rules,\n       makeProgram} = $s;\n\nconst seqI = (x: string) => clsFn(c => c.slice(0, x.length).toLocaleLowerCase() === x ? x.length : -1);\n\n\nconst unaryOp = (op: string, op1: any) => {\n    return {type: 'condition', op, operands: [op1]};\n};\n\nconst binaryOp = (op: string, op1: any, op2: any) => {\n    return {type: 'condition', op, operands: [op1, op2]};\n};\n\nconst isOperator = (v: any, op: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (typeof v === 'object' && v.type === 'rawop' && v.op === op) {\n        return true;\n    }\n    return false;\n};\n\nconst isValue = (v: any) => {\n    // TODO: check type\n    return true;\n};\n\n\nconst lineComment =\n    combine(\n        erase(qty(2)(cls('-'))),\n        first(\n            combine(\n                repeat(notCls('\\r\\n', '\\n', '\\r')),\n                first(classes.newline, ahead(end())), ),\n            first(classes.newline, ahead(end())), ));\n\nconst blockComment =\n    combine(\n        seq('/*'),\n            repeat(notCls('*/')),\n            seq('*/'), );\n\nconst commentOrSpace =\n    first(classes.space, lineComment, blockComment);\n\n\nconst reservedKeywords =\n    first(\n        combine(seqI('select'), input => wordBoundary(input)),\n        combine(seqI('from'), input => wordBoundary(input)),\n        combine(seqI('where'), input => wordBoundary(input)),\n        cat(combine(seqI('order'), erase(qty(1)(commentOrSpace)), seqI('by'))),\n        cat(combine(seqI('group'), erase(qty(1)(commentOrSpace)), seqI('by'))),\n        combine(seqI('having'), input => wordBoundary(input)),\n        combine(seqI('offset'), input => wordBoundary(input)),\n        combine(seqI('limit'), input => wordBoundary(input)), );\n\nconst notAheadReservedKeywords =\n    ahead(input => {\n        const result = combine(\n            reservedKeywords,\n            first(\n                qty(1)(commentOrSpace),\n                cls('(', ')', \"'\", '\"', '=', '!', '<', '>'),\n                end(), ))(input);\n        if (result.succeeded) {\n            return ({\n                succeeded: false,\n                error: false,\n                src: input.src,\n                pos: input.start,\n                message: 'Unexpected reserved keyword aheads',\n            });\n        } else {\n            return ({\n                succeeded: true,\n                next: {\n                    src: input.src,\n                    start: input.start,\n                    end: input.end,\n                    context: input.context,\n                },\n                tokens: [],\n            });\n        }\n    });\n\n\nconst isWord = (s: string) => {\n    if (typeof s !== 'string') {\n        return false;\n    }\n    return /^[A-Za-z0-9$_\"]$/.test(s);\n}\n\n\nconst wordBoundary =\n    ahead(input => {\n        let w = false;\n        if (input.src.length === 0) {\n            w = true;\n        } else if (input.start === input.end) {\n            w = isWord(input.src[input.start - 1]);\n        } else if (input.start === 0) {\n            w = isWord(input.src[input.start]);\n        } else {\n            w = (!isWord(input.src[input.start - 1]) && isWord(input.src[input.start])) ||\n                (isWord(input.src[input.start - 1]) && !isWord(input.src[input.start]));\n        }\n        if (w) {\n            return ({\n                succeeded: true,\n                next: {\n                    src: input.src,\n                    start: input.start,\n                    end: input.end,\n                    context: input.context,\n                },\n                tokens: [],\n            });\n        } else {\n            return ({\n                succeeded: false,\n                error: false,\n                src: input.src,\n                pos: input.start,\n                message: 'Expect word break',\n            });\n        }\n    });\n\n\nconst trueValue =\n    trans(tokens => [true])\n    (seqI('true'), wordBoundary);\n\nconst falseValue =\n    trans(tokens => [false])\n    (seqI('false'), wordBoundary);\n\nconst nullValue =\n    trans(tokens => [null])\n    (seqI('null'), wordBoundary);\n\nconst positiveInfinityValue =\n    trans(tokens => [Number.POSITIVE_INFINITY])\n    (qty(0, 1)(seq('+')), seq('Infinity'), wordBoundary);\n\nconst negativeInfinityValue =\n    trans(tokens => [Number.NEGATIVE_INFINITY])\n    (seq('-Infinity'), wordBoundary);\n\nconst nanValue =\n    trans(tokens => [Number.NaN])\n    (seq('NaN'), wordBoundary);\n\n\nconst binaryIntegerValue =\n    trans(tokens => [Number.parseInt((tokens as string[])[0].replace(/_/g, ''), 2)])\n    (numbers.bin(seq('0b')));\n\nconst octalIntegerValue =\n    trans(tokens => [Number.parseInt((tokens as string[])[0].replace(/_/g, ''), 8)])\n    (numbers.oct(seq('0o'), seq('0')));\n\nconst hexIntegerValue =\n    trans(tokens => [Number.parseInt((tokens as string[])[0].replace(/_/g, ''), 16)])\n    (numbers.hex(seq('0x'), seq('0X')));\n\nconst decimalIntegerValue =\n    trans(tokens => [Number.parseInt((tokens as string[])[0].replace(/_/g, ''), 10)])\n    (numbers.int);\n\nconst floatingPointNumberValue =\n    trans(tokens => [Number.parseFloat((tokens as string[])[0].replace(/_/g, ''))])\n    (numbers.float);\n\nconst numberValue =\n    first(octalIntegerValue,\n          hexIntegerValue,\n          binaryIntegerValue,\n          floatingPointNumberValue,\n          decimalIntegerValue,\n          positiveInfinityValue,\n          negativeInfinityValue,\n          nanValue, );\n\n\nconst stringEscapeSeq = first(\n    trans(t => ['\\''])(seq('\\\\\\'')),\n    trans(t => ['\\\"'])(seq('\\\\\"')),\n    trans(t => ['\\`'])(seq('\\\\`')),\n    trans(t => ['/'])(seq('\\\\/')),\n    trans(t => ['\\\\'])(seq('\\\\\\\\')),\n    trans(t => [''])(seq('\\\\\\r\\n')),\n    trans(t => [''])(seq('\\\\\\r')),\n    trans(t => [''])(seq('\\\\\\n')),\n    trans(t => ['\\n'])(seq('\\\\n')),\n    trans(t => ['\\n'])(seq('\\\\N')),\n    trans(t => ['\\r'])(seq('\\\\r')),\n    trans(t => ['\\r'])(seq('\\\\R')),\n    trans(t => ['\\v'])(seq('\\\\v')),\n    trans(t => ['\\t'])(seq('\\\\t')),\n    trans(t => ['\\t'])(seq('\\\\T')),\n    trans(t => ['\\b'])(seq('\\\\b')),\n    trans(t => ['\\b'])(seq('\\\\B')),\n    trans(t => ['\\f'])(seq('\\\\f')),\n    trans(t => ['\\f'])(seq('\\\\F')),\n    trans(t => [String.fromCodePoint(Number.parseInt((t as string[])[0], 16))])(\n        cat(erase(seq('\\\\u')),\n                qty(4, 4)(classes.hex), )),\n    trans(t => [String.fromCodePoint(Number.parseInt((t as string[])[0], 16))])(\n        cat(erase(seq('\\\\u{')),\n                qty(1, 6)(classes.hex),\n                erase(seq('}')), )),\n    trans(t => [String.fromCodePoint(Number.parseInt((t as string[])[0], 16))])(\n        cat(erase(seq('\\\\x')),\n                qty(2, 2)(classes.hex), )),\n    trans(t => [String.fromCodePoint(Number.parseInt((t as string[])[0], 8))])(\n        cat(erase(seq('\\\\')),\n                qty(3, 3)(classes.oct), )));\n\nconst stringValue =\n    trans(tokens => [tokens[0] ?? ''])(\n        erase(seq(\"'\")),\n            cat(repeat(first(\n                stringEscapeSeq,\n                combine(cls('\\r', '\\n'), err('Line breaks within strings are not allowed.')),\n                notCls(\"'\"),\n            ))),\n        erase(seq(\"'\")), );\n\n\nconst dateValue =\n    trans(tokens => [{type: 'date', value: tokens[0]}])(cat(\n        qty(4, 4)(classes.num),\n        cls('-'),\n        qty(2, 2)(classes.num),\n        cls('-'),\n        qty(2, 2)(classes.num),\n        wordBoundary, ));\n\n\nconst dateTimeValue =\n    trans(tokens => [{type: 'datetime', value: tokens[0]}])(cat(\n        qty(4, 4)(classes.num),\n        cls('-'),\n        qty(2, 2)(classes.num),\n        cls('-'),\n        qty(2, 2)(classes.num),\n        cls('T'),\n        qty(2, 2)(classes.num),\n        cls(':'),\n        qty(2, 2)(classes.num),\n        qty(0, 1)(combine(\n            cls(':'),\n            qty(2, 2)(classes.num), )),\n        first(\n            cls('Z'),\n            combine(\n                first(cls('+'), cls('-')),\n                qty(2, 2)(classes.num),\n                cls(':'),\n                qty(2, 2)(classes.num), )),\n        wordBoundary, ));\n\n\nconst literalValue =\n    first(\n        isParam(o => {\n            switch (typeof o) {\n            case 'number': case 'string': case 'boolean':\n                return true;\n            case 'object':\n                if (o === null) {\n                    return true;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if ((o as any).type) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    switch ((o as any).type) {\n                    case 'date':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                        if (typeof (o as any).value === 'string') {\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                            return DatePattern.test((o as any).value);\n                        }\n                        break;\n                    case 'datetime':\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                        if (typeof (o as any).value === 'string') {\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                            return DateTimePattern.test((o as any).value);\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n            return false;\n        }),\n        dateTimeValue,\n        dateValue,\n        numberValue,\n        stringValue,\n        trueValue,\n        falseValue,\n        nullValue, );\n\n\nconst symbolStringValue =\n    trans(tokens => {\n        const sym = tokens[0] ?? '';\n        if (isUnsafeVarNames(dummyTargetObject, sym as string)) {\n            throw new Error(`Unsafe symbol name is appeared: ${sym as string}`);\n        }\n        return [sym];\n    })(\n        erase(seq('\"')),\n            cat(repeat(first(\n                stringEscapeSeq,\n                combine(cls('\\r', '\\n'), err('Line breaks within strings are not allowed.')),\n                notCls('\"'),\n            ))),\n        erase(seq('\"')), );\n\n\nconst symbolName =\n    trans(tokens => {\n        if (isUnsafeVarNames(dummyTargetObject, tokens[0] as string)) {\n            throw new Error(`Unsafe symbol name is appeared: ${tokens[0] as string}`);\n        }\n        return tokens;\n    })(cat(combine(\n        first(classes.alpha, cls('$', '_')),\n        repeat(first(classes.alnum, cls('$', '_'))), )));\n\n\nconst complexSymbolName =\n    trans(tokens => [{name: tokens}])(\n        first(symbolName, symbolStringValue),\n        repeat(combine(\n            erase(repeat(commentOrSpace),\n                  cls('.'),\n                  repeat(commentOrSpace), ),\n            first(symbolName, symbolStringValue), )));\n\n\nconst selectFieldFunctionCall =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{fn: tokens[0], args: tokens.slice(1)} as any])(\n        symbolName,\n        erase(repeat(commentOrSpace)),\n        erase(cls('(')),\n        erase(repeat(commentOrSpace)),\n        repeat(first(\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n                input => selectFieldFunctionCall(input), ),\n            literalValue,\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'field', ...(tokens[0] as object)}])(\n                complexSymbolName, ))),\n        repeat(combine(\n            erase(repeat(commentOrSpace)),\n            erase(cls(',')),\n            erase(repeat(commentOrSpace)),\n            first(\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n                    input => selectFieldFunctionCall(input), ),\n                literalValue,\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                trans(tokens => [{type: 'field', ...(tokens[0] as object)}])(\n                    complexSymbolName, )))),\n        erase(repeat(commentOrSpace)),\n        erase(cls(')')), );\n\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-return\nconst subQuery = trans(tokens => [{query: tokens[0]} as any])(\n    erase(cls('('),\n          repeat(commentOrSpace), ),\n    input => selectStatement(input),\n    erase(repeat(commentOrSpace),\n          cls(')'), ));\n\n\nconst listValue = trans(tokens => [tokens])(\n    erase(cls('('),\n          repeat(commentOrSpace), ),\n    literalValue,\n    erase(repeat(commentOrSpace)),\n    repeat(combine(\n        erase(cls(','),\n              repeat(commentOrSpace), ),\n        literalValue,\n    )),\n    erase(repeat(commentOrSpace),\n          cls(')'), ));\n\n\nconst complexSelectFieldName =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            ...(tokens[0] as object),\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            ...{aliasName: (tokens.length > 1 ? tokens[1] as object : null)}} as any])(\n        notAheadReservedKeywords,\n        first(\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n                selectFieldFunctionCall, ),\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'field', ...(tokens[0] as object)}])(\n                complexSymbolName, ),\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'subquery', ...(tokens[0] as object)}])(\n                subQuery, )),\n        first(\n            combine(\n                erase(repeat(commentOrSpace)), // TODO:\n                notAheadReservedKeywords,\n                symbolName, ),\n            zeroWidth(() => null), ));\n\n\nconst selectFieldList =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{select: tokens} as any])(\n        complexSelectFieldName,\n        erase(repeat(commentOrSpace)),\n        repeat(combine(\n            erase(cls(',')),\n            erase(repeat(commentOrSpace)),\n            complexSelectFieldName,\n            erase(repeat(commentOrSpace)), )));\n\n\nconst fromClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{from: tokens} as any])(\n        erase(seqI('from')),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/ban-types\n        trans(tokens => [{...(tokens[0] as object), aliasName: tokens[1] ?? null} as any])(\n            erase(qty(1)(commentOrSpace)),\n            notAheadReservedKeywords,\n            complexSymbolName,\n            qty(0, 1)(combine(\n                erase(qty(1)(commentOrSpace)),\n                notAheadReservedKeywords,\n                symbolName, ))),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/ban-types\n        repeat(trans(tokens => [{...(tokens[0] as object), aliasName: tokens[1] ?? null} as any])(\n            erase(repeat(commentOrSpace),\n                  cls(','),\n                  repeat(commentOrSpace), ),\n            notAheadReservedKeywords,\n            complexSymbolName,\n            first(\n                combine(\n                    erase(qty(1)(commentOrSpace)),\n                    notAheadReservedKeywords,\n                    symbolName, ),\n                zeroWidth(() => null), ))));\n\n\nconst conditionalOperator =\n    first(seq('!='),\n          seq('<='),\n          seq('>='),\n          seq('='),\n          seq('<'),\n          seq('>'),\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          trans(tokens => [`${tokens[0]}_${tokens[1]}`])(\n              seqI('not'),\n                  erase(qty(1)(commentOrSpace)),\n                  first(seqI('like'), seqI('in')),\n                  erase(wordBoundary, repeat(commentOrSpace)), ),\n          combine(seqI('like'),\n                  erase(wordBoundary, repeat(commentOrSpace)), ),\n          combine(seqI('in'),\n                  erase(wordBoundary, repeat(commentOrSpace)), ),\n          combine(seqI('includes'),\n                  erase(wordBoundary, repeat(commentOrSpace)), ),\n          combine(seqI('excludes'),\n                  erase(wordBoundary, repeat(commentOrSpace)), ));\n\n\n// production rules:\n//   S -> S \"not\" S\nconst conditionExpressionExprRule3 = $o.trans(tokens => [unaryOp('not', tokens[1])])(\n    $o.clsFn(t => isOperator(t, 'not')),\n    $o.clsFn(t => isValue(t)),\n);\n\n// production rules:\n//   S -> S \"and\" S\nconst conditionExpressionExprRule2 = $o.trans(tokens => [binaryOp('and', tokens[0], tokens[2])])(\n    $o.clsFn(t => isValue(t)),\n    $o.clsFn(t => isOperator(t, 'and')),\n    $o.clsFn(t => isValue(t)),\n);\n\n// production rules:\n//   S -> S \"or\" S\nconst conditionExpressionExprRule1 = $o.trans(tokens => [binaryOp('or', tokens[0], tokens[2])])(\n    $o.clsFn(t => isValue(t)),\n    $o.clsFn(t => isOperator(t, 'or')),\n    $o.clsFn(t => isValue(t)),\n);\n\n\nconst whereFieldExpression =\n    trans(tokens => [{\n            type: 'condition',\n            op: tokens[1],\n            operands: tokens.slice(0, 1).concat(tokens.slice(2))}])(\n        notAheadReservedKeywords,\n        first(\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n                selectFieldFunctionCall, ),\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            trans(tokens => [{type: 'field', ...(tokens[0] as object)}])(\n                complexSymbolName, )),\n        erase(repeat(commentOrSpace)),\n        conditionalOperator,\n        erase(repeat(commentOrSpace)),\n        first(literalValue,\n              // eslint-disable-next-line @typescript-eslint/ban-types\n              trans(tokens => [{type: 'subquery', ...(tokens[0] as object)}])(\n                  subQuery, ),\n              // eslint-disable-next-line @typescript-eslint/ban-types\n              trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n                  selectFieldFunctionCall, ),\n              listValue, ));\n\n\nconst whereConditionExpressionInnerRoot =\n    trans(tokens => tokens)(\n        qty(0, 1)(combine(\n            trans(tokens => [{type: 'rawop', op: tokens[0]} as Ast])(seqI('not')),\n            erase(wordBoundary, repeat(commentOrSpace)), )),\n        first(\n            trans(tokens => tokens)(\n                erase(repeat(commentOrSpace)),\n                erase(cls('(')),\n                erase(repeat(commentOrSpace)),\n                input => whereConditionExpression(input),\n                erase(repeat(commentOrSpace)),\n                erase(cls(')')), ),\n            whereFieldExpression, ),\n        repeat(combine(\n            erase(repeat(commentOrSpace)),\n            trans(tokens => [{type: 'rawop', op: tokens[0]} as Ast])(first(seqI('and'), seqI('or'))),\n            erase(wordBoundary, repeat(commentOrSpace)),\n            input => whereConditionExpression(input), )));\n\n\nconst whereConditionExpression = rules({\n    rules: [\n        conditionExpressionExprRule3,\n        conditionExpressionExprRule2,\n        conditionExpressionExprRule1,\n    ],\n    check: $o.combine($o.classes.any, $o.end()),\n})(trans(tokens => tokens)(whereConditionExpressionInnerRoot));\n\n\nconst whereClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{where: [tokens[0]]} as any])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('where')),\n        erase(first(ahead(cls('(')),\n                    qty(1)(commentOrSpace),\n                    combine(repeat(commentOrSpace), wordBoundary), )),\n        whereConditionExpression, );\n\n\nconst groupByClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{groupBy: tokens} as any])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('group'),\n              qty(1)(commentOrSpace),\n              seqI('by'),\n              qty(1)(commentOrSpace), ),\n        symbolName,\n        repeat(combine(\n            erase(repeat(commentOrSpace),\n                  cls(','),\n                  repeat(commentOrSpace), ),\n            symbolName, )));\n\n\nconst havingFieldExpression =\n    trans(tokens => [{\n            type: 'condition',\n            op: tokens[1],\n            operands: tokens.slice(0, 1).concat(tokens.slice(2))}])(\n        notAheadReservedKeywords,\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n            selectFieldFunctionCall, ),\n        erase(repeat(commentOrSpace)),\n        conditionalOperator,\n        erase(repeat(commentOrSpace)),\n        first(literalValue,\n              // eslint-disable-next-line @typescript-eslint/ban-types\n              trans(tokens => [{type: 'subquery', ...(tokens[0] as object)}])(\n                  subQuery,\n              // eslint-disable-next-line @typescript-eslint/ban-types\n              trans(tokens => [{type: 'fncall', ...(tokens[0] as object)}])(\n                  selectFieldFunctionCall, ),\n              listValue, )));\n\n\nconst havingConditionExpressionInnerRoot =\n    trans(tokens => tokens)(\n        qty(0, 1)(combine(\n            trans(tokens => [{type: 'rawop', op: tokens[0]} as Ast])(seqI('not')),\n            erase(wordBoundary, repeat(commentOrSpace)), )),\n        first(\n            trans(tokens => tokens)(\n                erase(repeat(commentOrSpace)),\n                erase(cls('(')),\n                erase(repeat(commentOrSpace)),\n                input => havingConditionExpression(input),\n                erase(repeat(commentOrSpace)),\n                erase(cls(')')), ),\n            havingFieldExpression, ),\n        repeat(combine(\n            erase(repeat(commentOrSpace)),\n            trans(tokens => [{type: 'rawop', op: tokens[0]} as Ast])(first(seqI('and'), seqI('or'))),\n            erase(wordBoundary, repeat(commentOrSpace)),\n            input => havingConditionExpression(input), )));\n\n\nconst havingConditionExpression = rules({\n    rules: [\n        conditionExpressionExprRule3,\n        conditionExpressionExprRule2,\n        conditionExpressionExprRule1,\n    ],\n    check: $o.combine($o.classes.any, $o.end()),\n})(trans(tokens => tokens)(havingConditionExpressionInnerRoot));\n\n\nconst havingClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{having: [tokens[0]]} as any])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('having')),\n        erase(first(ahead(cls('(')),\n                    qty(1)(commentOrSpace),\n                    combine(repeat(commentOrSpace), wordBoundary), )),\n        havingConditionExpression, );\n\n\nconst orderByDirection =\n    first(\n        qty(1, 1)(combine(\n            erase(qty(1)(commentOrSpace)),\n            trans(tokens => [(tokens[0] as string).toLowerCase()])(first(seqI('asc'), seqI('desc'))),\n            erase(wordBoundary), )),\n        zeroWidth(() => 'asc'), );\n\n\nconst orderByNulls =\n    first(\n        qty(1, 1)(combine(\n            erase(qty(1)(commentOrSpace),\n                seqI('nulls'),\n                qty(1)(commentOrSpace), ),\n            trans(tokens => [(tokens[0] as string).toLowerCase()])(first(seqI('first'), seqI('last'))),\n            erase(wordBoundary), )),\n        zeroWidth(() => 'first'), );\n\n\nconst orderByClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{orderBy: tokens} as any])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('order'),\n              qty(1)(commentOrSpace),\n              seqI('by'),\n              qty(1)(commentOrSpace), ),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/ban-types\n        trans(tokens => [{...(tokens[0] as object), direction: tokens[1], nulls: tokens[2]} as any])(\n            complexSymbolName,\n            orderByDirection,\n            orderByNulls, ),\n        repeat(combine(\n            erase(repeat(commentOrSpace),\n                  cls(','),\n                  repeat(commentOrSpace), ),\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/ban-types\n            trans(tokens => [{...(tokens[0] as object), direction: tokens[1], nulls: tokens[2]} as any])(\n                complexSymbolName,\n                orderByDirection,\n                orderByNulls, ))));\n\n\nconst offsetClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{offset: tokens[0]} as any])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('offset'),\n              qty(1)(commentOrSpace), ),\n        decimalIntegerValue, );\n\n\nconst limitClause =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    trans(tokens => [{limit: tokens[0]} as any])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('limit'),\n              qty(1)(commentOrSpace), ),\n        decimalIntegerValue, );\n\n\nconst forViewClause =\n    trans(tokens => [{for: (tokens as string[]).map(x => x.toLowerCase())}])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('for'),\n              qty(1)(commentOrSpace), ),\n        first(\n            combine(seqI('view'),\n                    qty(0, 1)(combine(\n                        erase(repeat(commentOrSpace),\n                              cls(','),\n                              repeat(commentOrSpace), ),\n                        seqI('reference'), ))),\n            combine(seqI('reference'),\n                    qty(0, 1)(combine(\n                        erase(repeat(commentOrSpace),\n                              cls(','),\n                              repeat(commentOrSpace), ),\n                        seqI('view'), )))),\n        erase(wordBoundary), );\n\n\nconst forUpdateClause =\n    trans(tokens => [{for: (tokens as string[]).map(x => x.toLowerCase())}])(\n        erase(repeat(commentOrSpace), wordBoundary),\n        erase(seqI('for'),\n              qty(1)(commentOrSpace), ),\n        seqI('update'),\n        first(\n            combine(erase(qty(1)(commentOrSpace)),\n                    seqI('tracking'),\n                    qty(0, 1)(combine(\n                        erase(repeat(commentOrSpace),\n                              cls(','),\n                              repeat(commentOrSpace), ),\n                        seqI('viewstat'), ))),\n            combine(erase(qty(1)(commentOrSpace)),\n                    seqI('viewstat'),\n                    qty(0, 1)(combine(\n                        erase(repeat(commentOrSpace),\n                              cls(','),\n                              repeat(commentOrSpace), ),\n                        seqI('tracking'), ))),\n            zeroWidth(() => void 0), ),\n        erase(wordBoundary), );\n\n\nconst selectStatement =\n    trans(tokens => {\n        let z = {};\n        for (const t of tokens) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            z = {...z, ...(t as object)};\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return [z] as any;\n    })(\n        erase(seqI('select')),\n        erase(qty(1)(commentOrSpace)),\n        selectFieldList,\n        fromClause,\n        // TODO: using scope\n        qty(0, 1)(whereClause),\n        // TODO: with\n        qty(0, 1)(combine(\n            groupByClause,  // TODO: rollup, cube\n            qty(0, 1)(havingClause), )),\n        qty(0, 1)(orderByClause),\n        qty(0, 1)(first(\n            combine(\n                offsetClause,\n                qty(0, 1)(limitClause), ),\n            combine(\n                limitClause,\n                qty(0, 1)(offsetClause), ))),\n        qty(0, 1)(first(forViewClause,\n                        forUpdateClause, )),\n        erase(repeat(commentOrSpace)), );\n\n\nconst program =\n    makeProgram(combine(\n        beginning(),\n        erase(repeat(commentOrSpace)),\n        selectStatement,\n        erase(repeat(commentOrSpace)),\n        end(), ));\n\n\nexport function parse(strings: TemplateStringsArray | string, ...values: any[]): ParsedQuery {\n    // TODO: deny dangerous names\n    const z = program(\n        typeof strings === 'string'\n            ? parserInput(strings, {})\n            : templateStringsParserInput(strings, values, {})\n        );\n\n    if (! z.succeeded) {\n        throw new Error(formatErrorMessage(z));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return z.tokens[0] as any;\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { PreparedQuery,\n         QueryFuncInfo,\n         QueryBuilderInfo,\n         QueryBuilderInfoInternal } from '../types';\nimport { parse }                    from './parser';\nimport { compile }                  from './compiler';\nimport { fnInfo_cast_to_string,\n         fnInfo_cast_to_number,\n         fnInfo_cast_to_boolean,\n         fnInfo_concat,\n         fnInfo_add,\n         fnInfo_sub,\n         fnInfo_mul,\n         fnInfo_div,\n         fnInfo_mod,\n         fnInfo_count,\n         fnInfo_count_distinct,\n         fnInfo_sum,\n         fnInfo_avg,\n         fnInfo_max,\n         fnInfo_min,\n         fnInfo_calendar_month,\n         fnInfo_calendar_quarter,\n         fnInfo_calendar_year,\n         fnInfo_day_in_month,\n         fnInfo_day_in_week,\n         fnInfo_day_in_year,\n         fnInfo_day_only,\n         fnInfo_hour_in_day,\n         fnInfo_week_in_month,\n         fnInfo_week_in_year,\n         fnInfo_calendar_month_lc,\n         fnInfo_calendar_quarter_lc,\n         fnInfo_calendar_year_lc,\n         fnInfo_day_in_month_lc,\n         fnInfo_day_in_week_lc,\n         fnInfo_day_in_year_lc,\n         fnInfo_day_only_lc,\n         fnInfo_hour_in_day_lc,\n         fnInfo_week_in_month_lc,\n         fnInfo_week_in_year_lc }   from './functions';\n\n\n\nconst builtinFunctions: QueryFuncInfo[] = [\n    fnInfo_cast_to_string,\n    fnInfo_cast_to_number,\n    fnInfo_cast_to_boolean,\n    fnInfo_concat,\n    fnInfo_add,\n    fnInfo_sub,\n    fnInfo_mul,\n    fnInfo_div,\n    fnInfo_mod,\n    fnInfo_count,\n    fnInfo_count_distinct,\n    fnInfo_sum,\n    fnInfo_avg,\n    fnInfo_max,\n    fnInfo_min,\n    fnInfo_calendar_month,\n    fnInfo_calendar_quarter,\n    fnInfo_calendar_year,\n    fnInfo_day_in_month,\n    fnInfo_day_in_week,\n    fnInfo_day_in_year,\n    fnInfo_day_only,\n    fnInfo_hour_in_day,\n    fnInfo_week_in_month,\n    fnInfo_week_in_year,\n    fnInfo_calendar_month_lc,\n    fnInfo_calendar_quarter_lc,\n    fnInfo_calendar_year_lc,\n    fnInfo_day_in_month_lc,\n    fnInfo_day_in_week_lc,\n    fnInfo_day_in_year_lc,\n    fnInfo_day_only_lc,\n    fnInfo_hour_in_day_lc,\n    fnInfo_week_in_month_lc,\n    fnInfo_week_in_year_lc,\n];\n\n\nconst builtinRules: QueryBuilderInfo['rules'] = {\n    idFieldName: () => 'Id',\n    foreignIdFieldName: (masterResolverName) => masterResolverName ? `${masterResolverName}Id` : void 0,\n};\n\n\nexport function prepareBuilderInfo(builder: QueryBuilderInfo): QueryBuilderInfoInternal {\n    const ret = {...builder};\n\n    if (! ret.relationships) {\n        ret.relationships = {};\n    }\n\n    for (const k of Object.keys(ret.resolvers.query)) {\n        if (! ret.relationships[k]) {\n            ret.relationships[k] = {};\n        }\n    }\n\n    if (! ret.resolvers.insert) {\n        ret.resolvers.insert = {};\n    }\n    if (! ret.resolvers.update) {\n        ret.resolvers.update = {};\n    }\n    if (! ret.resolvers.remove) {\n        ret.resolvers.remove = {};\n    }\n\n    if (! ret.functions) {\n        ret.functions = [];\n    }\n    ret.functions = ret.functions.concat(builtinFunctions);\n\n    if (! ret.rules) {\n        ret.rules = {};\n    }\n    ret.rules = {...builtinRules, ...ret.rules};\n\n    if (! ret.events) {\n        ret.events = {};\n    }\n\n    return ret as QueryBuilderInfoInternal;\n}\n\n\nexport function prepareQuery(\n        builder: QueryBuilderInfoInternal,\n        strings: TemplateStringsArray | string,\n        ...values: any[]): PreparedQuery {\n\n    return compile(builder, parse(strings, ...values));\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { ResolverEvent,\n         InsertResolverFn,\n         UpdateResolverFn,\n         RemoveResolverFn,\n         QueryBuilderInfoInternal } from '../types';\n\n\n\nexport async function executeInsertDML(\n        builder: QueryBuilderInfoInternal,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        tr: any,\n        trOptions: any | undefined,\n        resolverName: string,\n        records: any[]\n        ): Promise<any[]> {\n\n    const resolvers = builder.resolvers.insert;\n    let resolverInfo: InsertResolverFn | null = null;\n    for (const key of Object.keys(resolvers)) {\n        if (key.toLowerCase() === resolverName.toLowerCase()) {\n            resolverInfo = resolvers[key];\n        }\n    }\n    if (! resolverInfo) {\n        throw new Error(`Resolver name ${resolverName} is not resolved.`);\n    }\n\n    const evt: ResolverEvent = {\n        resolverData: {},\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        transactionData: tr,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        transactionOptions: trOptions,\n    };\n\n    if (builder.events.beginExecute) {\n        await builder.events.beginExecute(evt);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let ret: any [] = null as any;\n\n    try {\n        const ctx = {\n            functions: builder.functions,\n            graphPath: [],\n            resolverName: resolverName,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            resolverData: evt.resolverData,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionData: tr,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionOptions: trOptions,\n            resolverCapabilities: {\n                filtering: false,\n                sorting: false,\n                limit: false,\n                offset: false,\n            },\n        };\n\n        ret = await resolverInfo(records, ctx);\n\n        if (builder.events.endExecute) {\n            await builder.events.endExecute(evt, null);\n        }\n    } catch(e) {\n        if (builder.events.endExecute) {\n            await builder.events.endExecute(evt, e);\n        }\n\n        throw e;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return ret;\n}\n\n\nexport async function executeUpdateDML(\n        builder: QueryBuilderInfoInternal,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        tr: any,\n        trOptions: any | undefined,\n        resolverName: string,\n        records: any[]\n        ): Promise<any[]> {\n\n    const resolvers = builder.resolvers.update;\n    let resolverInfo: UpdateResolverFn | null = null;\n    for (const key of Object.keys(resolvers)) {\n        if (key.toLowerCase() === resolverName.toLowerCase()) {\n            resolverInfo = resolvers[key];\n        }\n    }\n    if (! resolverInfo) {\n        throw new Error(`Resolver name ${resolverName} is not resolved.`);\n    }\n\n    const evt: ResolverEvent = {\n        resolverData: {},\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        transactionData: tr,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        transactionOptions: trOptions,\n    };\n\n    if (builder.events.beginExecute) {\n        await builder.events.beginExecute(evt);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let ret: any [] = null as any;\n\n    try {\n        const ctx = {\n            functions: builder.functions,\n            graphPath: [],\n            resolverName: resolverName,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            resolverData: evt.resolverData,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionData: tr,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionOptions: trOptions,\n            resolverCapabilities: {\n                filtering: false,\n                sorting: false,\n                limit: false,\n                offset: false,\n            },\n        };\n\n        ret = await resolverInfo(records, ctx);\n\n        if (builder.events.endExecute) {\n            await builder.events.endExecute(evt, null);\n        }\n    } catch(e) {\n        if (builder.events.endExecute) {\n            await builder.events.endExecute(evt, e);\n        }\n\n        throw e;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return ret;\n}\n\n\nexport async function executeRemoveDML(\n        builder: QueryBuilderInfoInternal,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        tr: any,\n        trOptions: any | undefined,\n        resolverName: string,\n        records: any[]\n        ): Promise<void> {\n\n    const resolvers = builder.resolvers.remove;\n    let resolverInfo: RemoveResolverFn | null = null;\n    for (const key of Object.keys(resolvers)) {\n        if (key.toLowerCase() === resolverName.toLowerCase()) {\n            resolverInfo = resolvers[key];\n        }\n    }\n    if (! resolverInfo) {\n        throw new Error(`Resolver name ${resolverName} is not resolved.`);\n    }\n\n    const evt: ResolverEvent = {\n        resolverData: {},\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        transactionData: tr,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        transactionOptions: trOptions,\n    };\n\n    if (builder.events.beginExecute) {\n        await builder.events.beginExecute(evt);\n    }\n\n    try {\n        const ctx = {\n            functions: builder.functions,\n            graphPath: [],\n            resolverName: resolverName,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            resolverData: evt.resolverData,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionData: tr,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionOptions: trOptions,\n            resolverCapabilities: {\n                filtering: false,\n                sorting: false,\n                limit: false,\n                offset: false,\n            },\n        };\n\n        await resolverInfo(records, ctx);\n\n        if (builder.events.endExecute) {\n            await builder.events.endExecute(evt, null);\n        }\n    } catch(e) {\n        if (builder.events.endExecute) {\n            await builder.events.endExecute(evt, e);\n        }\n\n        throw e;\n    }\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { PreparedQuery,\n         PreparedResolver,\n         PreparedFnCall,\n         PreparedSubQuery,\n         PreparedFieldListItem,\n         PreparedCondition,\n         ResolverCapabilities,\n         ResolverContext,\n         AggregateQueryFuncInfo,\n         ScalarQueryFuncInfo,\n         ImmediateScalarQueryFuncInfo,\n         QueryFuncInfo,\n         QueryBuilderInfoInternal }       from '../types';\nimport { deepCloneObject,\n         isEqualComplexName,\n         getTrueCaseFieldName,\n         getObjectValueWithFieldNameMap } from './util';\nimport { callAggregateFunction,\n         callScalarFunction,\n         callImmediateScalarFunction,\n         getGroupFieldTrueCaseName,\n         isScalarFnCallable }             from './call';\nimport { sortRecords }                    from '../sort';\nimport { applyWhereConditions,\n         applyHavingConditions }          from '../filters';\n\n\n\nfunction filterZeroLengthCondFn(cond: PreparedCondition) {\n    switch (cond.op) {\n    case 'true':\n        return false;\n    case 'not': case 'and': case 'or':\n        if (cond.operands.length === 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n\nfunction filterCondOperands(name: string[], cond: PreparedCondition) {\n    cond.operands = cond.operands\n    .map(x => {\n        switch (typeof x) {\n        case 'object':\n            if (Array.isArray(x)) {\n                return x;\n            } else {\n                if (x === null) {\n                    // NOTE: never reach here.\n                    return x;\n                }\n                switch (x.type) {\n                case 'condition':\n                    return pruneCondition(name, x);\n                default:\n                    return x;\n                }\n            }\n        default:\n            return x;\n        }\n    })\n    .filter(x => {\n        switch (typeof x) {\n        case 'object':\n            if (x !== null && !Array.isArray(x) && x.type === 'condition') {\n                return filterZeroLengthCondFn(x);\n            }\n        }\n        return true;\n    });\n\n    return cond;\n}\n\n\nfunction pruneConditionCheckFncall(name: string[], x: PreparedFnCall): PreparedCondition | null {\n    for (const arg of x.args) {\n        switch (typeof arg) {\n        case 'object':\n            if (arg === null) {\n                // NOTE: Nothing to do.\n            } else {\n                switch (arg.type) {\n                case 'field':\n                    // TODO: Check all arguments' resolver are equal\n                    if (! isEqualComplexName(name, arg.name.slice(0, arg.name.length - 1))) {\n                        return ({\n                            type: 'condition',\n                            op: 'true',\n                            operands: [],\n                        });\n                    } else {\n                        arg.name = arg.name.slice(arg.name.length - 1);\n                    }\n                    break;\n                case 'fncall':\n                    {\n                        const tmp = pruneConditionCheckFncall(name, arg);\n                        if (tmp) {\n                            return tmp;\n                        }\n                    }\n                    break;\n                }\n            }\n            break;\n        }\n    }\n    return null;\n}\n\n\nfunction pruneCondition(name: string[], cond: PreparedCondition): PreparedCondition {\n    if (cond.operands.length) {\n        const x = cond.operands[0];\n\n        switch (typeof x) {\n        case 'object':\n            if (x === null) {\n                // NOTE: never reach here.\n                // NOTE: Nothing to do.\n            } else if (Array.isArray(x)) {\n                // NOTE: Nothing to do. It is data.\n            } else {\n                switch (x.type) {\n                case 'field':\n                    if (! isEqualComplexName(name, x.name.slice(0, x.name.length - 1))) {\n                        return ({\n                            type: 'condition',\n                            op: 'true',\n                            operands: [],\n                        });\n                    } else {\n                        x.name = x.name.slice(x.name.length - 1);\n                    }\n                    break;\n                case 'fncall':\n                    {\n                        const tmp = pruneConditionCheckFncall(name, x);\n                        if (tmp) {\n                            return tmp;\n                        }\n                    }\n                }\n            }\n            break;\n        }\n    }\n\n    return filterCondOperands(name, cond);\n}\n\n\nfunction collectSubQueriesFromCondition(\n        subQueries: Array<{ cond: PreparedCondition, index: number, subQuery: PreparedSubQuery }>,\n        cond: PreparedCondition) {\n\n    switch (cond.type) {\n    case 'condition':\n        for (let i = 0; i < cond.operands.length; i++) {\n            const x = cond.operands[i];\n\n            switch (typeof x) {\n            case 'object':\n                if (x === null) {\n                    // NOTE: never reach here.\n                    // NOTE: Nothing to do.\n                } else if (Array.isArray(x)) {\n                    // NOTE: Nothing to do. It is data.\n                } else {\n                    switch (x.type) {\n                    case 'condition':\n                        collectSubQueriesFromCondition(subQueries, x);\n                        break;\n                    case 'subquery':\n                        subQueries.push({cond, index: i, subQuery: x});\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n        break;\n    }\n\n    return cond;\n}\n\n\nasync function execCondSubQueries(\n        builder: QueryBuilderInfoInternal,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        tr: any,\n        trOptions: any | undefined,\n        condTemplate: PreparedCondition[],\n        resolverData: any | null) {\n\n    const condSubQueries: Array<{ cond: PreparedCondition, index: number, subQuery: PreparedSubQuery }> = [];\n\n    condTemplate.forEach(x => collectSubQueriesFromCondition(condSubQueries, x));\n\n    const condSubQueryResults =\n        condSubQueries\n            .map(x =>\n                executeCompiledQuery(\n                    builder, tr, trOptions,\n                    x.subQuery.query, null, null, null, resolverData)\n                .then(r => ({ cond: x.cond, index: x.index, subQuery: x.subQuery, result: r })));\n\n    (await Promise.all(condSubQueryResults)).map(x => {\n        const field = x.subQuery.query.select[0];\n        let fieldName = '';\n\n        switch (field.type) {\n        case 'field':\n            fieldName = field.name[field.name.length - 1];\n            break;\n        default:\n            fieldName = field.aliasName ?? '';\n            break;\n        }\n\n        if (x.result.length) {\n            const fieldNameMap = new Map<string, string>(Object.keys(x.result[0]).map(x => [x.toLowerCase(), x]));\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            x.cond.operands[x.index] = x.result.map(w => getObjectValueWithFieldNameMap(fieldNameMap, w, fieldName));\n        } else {\n            x.cond.operands[x.index] = [];\n        }\n    });\n}\n\n\nfunction mapSelectFields(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        x: PreparedResolver, records: any[], isAggregation: boolean) {\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const queryFieldsMapEntries:\n        Array<{\n            isField: boolean,\n            fieldName: string,\n            field: PreparedFieldListItem,\n            fn: (i: number, fieldName: string, field: PreparedFieldListItem, record: any) => void,\n        }> = new Array(x.queryFieldsMap.size);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const fnInfos: QueryFuncInfo[] = new Array(x.queryFieldsMap.size);\n\n    const fnScaler = (i: number, fieldName: string, field: PreparedFieldListItem, record: any) => {\n        const fnInfo: ScalarQueryFuncInfo = fnInfos[i] as ScalarQueryFuncInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        record[(field as PreparedFnCall).aliasName] = callScalarFunction(ctx, field as PreparedFnCall, fnInfo, 'any', record, null);\n    };\n\n    const fnImmediateScaler = (i: number, fieldName: string, field: PreparedFieldListItem, record: any) => {\n        const fnInfo: ImmediateScalarQueryFuncInfo = fnInfos[i] as ImmediateScalarQueryFuncInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        record[(field as PreparedFnCall).aliasName] = callImmediateScalarFunction(ctx, field as PreparedFnCall, fnInfo, 'any', record, null);\n    };\n\n    const fnNoop = (i: number, fieldName: string, field: PreparedFieldListItem, record: any) => void 0;\n\n    {\n        let i = 0;\n        for (const ent of x.queryFieldsMap.entries()) {\n            const [fieldName, field] = ent;\n            switch (field.type) {\n            case 'field':\n                queryFieldsMapEntries[i] = { isField: true, fieldName, field, fn: fnNoop };\n                break;\n            case 'fncall':\n                // NOTE: If aggregation, function will be called at `aggregateFields()`.\n                if (isAggregation) {\n                    queryFieldsMapEntries[i] = { isField: false, fieldName, field, fn: fnNoop };\n                } else {\n                    const fnNameI = field.fn.toLowerCase();\n                    const fnInfo = ctx.functions.find(x => x.name.toLowerCase() === fnNameI);\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    fnInfos[i] = fnInfo!;\n\n                    switch (fnInfo?.type) {\n                    case 'scalar':\n                        queryFieldsMapEntries[i] = { isField: false, fieldName, field, fn: fnScaler };\n                        break;\n                    case 'immediate-scalar':\n                        queryFieldsMapEntries[i] = { isField: false, fieldName, field, fn: fnImmediateScaler };\n                        break;\n                    default:\n                        queryFieldsMapEntries[i] = { isField: false, fieldName, field, fn: fnNoop };\n                        break;\n                    }\n                }\n                break;\n            default:\n                queryFieldsMapEntries[i] = { isField: false, fieldName, field, fn: fnNoop };\n                break;\n            }\n            i++;\n        }\n    }\n\n    for (const record of records) {\n        for (let i = 0; i < queryFieldsMapEntries.length; i++) {\n            const { isField, fieldName, field, fn } = queryFieldsMapEntries[i];\n\n            if (isField) {\n                // NOTE: Inline expansion\n\n                if(field.aliasName) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-non-null-assertion\n                    record[field.aliasName!] = record[fieldName];\n                }\n            } else {\n                fn(i, fieldName, field, record);\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return records;\n}\n\n\nfunction groupRecords(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>, groupBy: string[],\n        x: PreparedResolver, records: any[]) {\n\n    if (records.length === 0) {\n        return [];\n    }\n    if (records.length === 1 || groupBy.length === 0) {\n        return [records];\n    }\n\n    const result = new Map<string, any[]>();\n\n    if (records.length) {\n        let i = 0;\n        const fieldNameMap = new Map<string, string>(Object.keys(records[0]).map(x => [x.toLowerCase(), x]));\n\n        for (const record of records) {\n            const key: any[] = [];\n            for (const k of groupBy) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                let v = getObjectValueWithFieldNameMap(fieldNameMap, record, k);\n                if (v === null || v === void 0) {\n                    v = `__$$GENSYM_VT4iHbNbZW3C7taC7J6bx8pruw40cX5X$$_${i++}`;\n                }\n                key.push(v);\n            }\n\n            const keystr = JSON.stringify(key);\n            if (result.has(keystr)) {\n                const a = result.get(keystr);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                a!.push(record);\n            } else {\n                result.set(keystr, [record]);\n            }\n        }\n    }\n\n    return Array.from(result.values());\n}\n\n\nfunction aggregateFields(\n        ctx: Omit<ResolverContext, 'resolverCapabilities'>, groupBy: string[],\n        x: PreparedResolver, records: any[][]) {\n\n    const result: any[] = [];\n    if (! records.length) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return result;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const firstRec = records[0][0];\n    const groupFields = new Map<string, string>(\n        groupBy.map(w => [w.toLowerCase(), getTrueCaseFieldName(firstRec, w) ?? '']));\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const queryFieldsMapEntries:\n        Array<{\n            isField: boolean,\n            field: PreparedFieldListItem,\n            trueCaseName: string,\n            fn: (i: number, field: PreparedFieldListItem, g: any[], agg: any) => void,\n        }> = new Array(x.queryFieldsMap.size);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const fnInfos: QueryFuncInfo[] = new Array(x.queryFieldsMap.size);\n\n    const fnAggregate = (i: number, field: PreparedFieldListItem, g: any[], agg: any) => {\n        const fnInfo: AggregateQueryFuncInfo = fnInfos[i] as AggregateQueryFuncInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        agg[(field as PreparedFnCall).aliasName] = callAggregateFunction(ctx, field as PreparedFnCall, fnInfo, 'any', g);\n    };\n\n    const fnImmediateScalar = (i: number, field: PreparedFieldListItem, g: any[], agg: any) => {\n        const fnInfo: ImmediateScalarQueryFuncInfo = fnInfos[i] as ImmediateScalarQueryFuncInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        agg[(field as PreparedFnCall).aliasName] = callImmediateScalarFunction(ctx, field as PreparedFnCall, fnInfo, 'any', null, g);\n    };\n\n    const fnScalar = (i: number, field: PreparedFieldListItem, g: any[], agg: any) => {\n        const fnInfo: ScalarQueryFuncInfo = fnInfos[i] as ScalarQueryFuncInfo;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        agg[(field as PreparedFnCall).aliasName] = callScalarFunction(ctx, field as PreparedFnCall, fnInfo, 'any', g[0], g);\n    };\n\n    const fnNoop = (i: number, field: PreparedFieldListItem, g: any[], agg: any) => void 0;\n\n    {\n        let i = 0;\n        for (const ent of x.queryFieldsMap.entries()) {\n            const [, field] = ent;\n            switch (field.type) {\n            case 'field':\n                {\n                    const trueCaseName = getGroupFieldTrueCaseName(groupFields, field.name[field.name.length - 1]);\n                    if (! trueCaseName) {\n                        throw new Error(`${field.name.join('.')} is not allowed. Aggregate function is needed.`);\n                    }\n                    queryFieldsMapEntries[i] = {\n                        isField: true,\n                        field,\n                        trueCaseName,\n                        fn: fnNoop,\n                    };\n                }\n                break;\n            case 'fncall':\n                {\n                    const fnNameI = field.fn.toLowerCase();\n                    const fnInfo = ctx.functions.find(x => x.name.toLowerCase() === fnNameI);\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    fnInfos[i] = fnInfo!;\n\n                    switch (fnInfo?.type) {\n                    case 'aggregate':\n                        queryFieldsMapEntries[i] = {\n                            isField: false,\n                            field,\n                            trueCaseName: '',\n                            fn: fnAggregate,\n                        };\n                        break;\n                    case 'immediate-scalar':\n                        queryFieldsMapEntries[i] = {\n                            isField: false,\n                            field,\n                            trueCaseName: '',\n                            fn: fnImmediateScalar,\n                        };\n                        break;\n                    case 'scalar':\n                        if (! isScalarFnCallable(ctx, groupFields, field.args)) {\n                            throw new Error(`${field.aliasName ?? '(unnamed)'} is not allowed. Aggregate function is needed.`);\n                        }\n                        queryFieldsMapEntries[i] = {\n                            isField: false,\n                            field,\n                            trueCaseName: '',\n                            fn: fnScalar,\n                        };\n                        break;\n                    default:\n                        throw new Error(`${field.aliasName ?? '(unnamed)'} is not allowed. Aggregate function is needed.`);\n                    }\n                }\n                break;\n            default:\n                queryFieldsMapEntries[i] = {\n                    isField: false,\n                    field,\n                    trueCaseName: '',\n                    fn: fnNoop,\n                };\n                break;\n            }\n            i++;\n        }\n    }\n\n    for (const g of records) {\n        const agg = {};\n        for (let i = 0; i < queryFieldsMapEntries.length; i++) {\n            const { isField, field, trueCaseName, fn } = queryFieldsMapEntries[i];\n\n            if (isField) {\n                // NOTE: Inline expansion\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                agg[trueCaseName] = g[0][trueCaseName];\n\n                if (field.aliasName) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    agg[field.aliasName] = g[0][trueCaseName];\n                }\n            } else {\n                fn(i, field, g, agg);\n            }\n        }\n        result.push(agg);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return result;\n}\n\n\nfunction getRemovingFields(x: PreparedResolver, records: any[], isAggregation: boolean) {\n    const removingFields = new Set<string>();\n    if (records.length) {\n        const requestedFields = new Set<string>();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const rec = records[0];\n        for (const ent of x.queryFieldsMap.entries()) {\n            const f = ent[1];\n            if (isAggregation && f.type === 'field' && f.aliasName) {\n                requestedFields.add(f.aliasName);\n            } else {\n                const name = getTrueCaseFieldName(rec, ent[0]);\n                if (name) {\n                    requestedFields.add(name);\n                }\n            }\n        }\n        for (const k of Object.keys(rec)) {\n            if (! requestedFields.has(k)) {\n                removingFields.add(k);\n            }\n        }\n    }\n    return removingFields;\n}\n\n\nfunction getResolversInfo(builder: QueryBuilderInfoInternal, resolverNames: Map<string, string>, x: PreparedResolver, i: number) {\n    const parentType: ('master' | 'detail') = i === 0 ? 'master' : 'detail';\n    const parentKey = JSON.stringify(x.name.slice(0, x.name.length - 1));\n    const currentKey = JSON.stringify(x.name);\n    const resolverName = x.resolverName ?? '';\n    const parentResolverName = resolverNames.get(parentKey);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const masterRelationshipInfo = (\n        (i === 0 ?\n            (\n                // for subquery's primary resolver\n\n                (builder.relationships[resolverName] ?? {})\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                [parentResolverName!] as any\n            ) : (\n                // for detail->master relationship\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                (builder.relationships[parentResolverName!] ?? {})\n                [resolverName] as any\n            )\n        ) ?? {});\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const foreignIdField = (typeof masterRelationshipInfo === 'object' && masterRelationshipInfo.id)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        ? masterRelationshipInfo.id as string\n        : i === 0\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            ? builder.rules.foreignIdFieldName(parentResolverName!)\n            : builder.rules.foreignIdFieldName(resolverName) ;\n\n    const parentIdFieldName = parentResolverName ? builder.rules.idFieldName(parentResolverName) : void 0;\n    const currentIdFieldName = builder.rules.idFieldName(resolverName);\n\n    return ({\n        parentType,\n        parentKey,\n        currentKey,\n        resolverName,\n        parentResolverName,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        masterRelationshipInfo,\n        foreignIdField,\n        parentIdFieldName,\n        currentIdFieldName,\n    });\n}\n\n\nexport async function executeCompiledQuery(\n        builder: QueryBuilderInfoInternal,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        tr: any,\n        trOptions: any | undefined,\n        query: PreparedQuery,\n        parent: any | null,\n        parentQueriedRecords: Map<string, any[]> | null,\n        parentResolverNames: Map<string, string> | null,\n        parentResolverData: any | null\n        ): Promise<any[]> {\n\n    let primaryRecords: any[] | undefined;\n    let primaryCapabilities: ResolverCapabilities | undefined;\n\n    const queriedRecords = parentQueriedRecords ?? new Map<string, any[]>();\n    const resolverNames = parentResolverNames ?? new Map<string, string>();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const resolverData = parentResolverData ?? {};\n\n    if (!parent && builder.events.beginExecute) {\n        await builder.events.beginExecute({\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            resolverData,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionData: tr,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            transactionOptions: trOptions,\n        });\n    }\n\n    try {\n        const condWhereTemplate = query.where ?\n            deepCloneObject(query.where) : [];\n        const condHavingTemplate = query.having ?\n            deepCloneObject(query.having) : [];\n\n        await execCondSubQueries(builder, tr, trOptions, condWhereTemplate, resolverData);\n        await execCondSubQueries(builder, tr, trOptions, condHavingTemplate, resolverData);\n\n        const removingFieldsAndRecords: Array<[Set<string>, any[]]> = [];\n        const removingFieldsMap = new Map<string, Set<string>>();\n\n        for (let i = 0; i < query.from.length; i++) {\n            const x = query.from[i];\n\n            const {\n                parentType,\n                parentKey,\n                currentKey,\n                resolverName,\n                parentResolverName,\n                foreignIdField,\n                parentIdFieldName,\n                currentIdFieldName,\n            } = getResolversInfo(builder, resolverNames, x, i);\n\n            if (! x.resolver) {\n                throw new Error(`Resolver name ${x.name.join('.')} is not resolved.`);\n            }\n\n            let records: any[] = [];\n            const parentRecords = queriedRecords.get(parentKey);\n\n            const hasAliasNameCond = (x.condAliasFields.size > 0) ? true : false;\n            const isAggregation = (i === 0 && query.groupBy) ? true : false;\n\n            const queryFields =\n                Array.from(x.queryFields.values());\n            const condFields =\n                Array.from(x.condFields.values());\n            const havingCondFields =\n                Array.from(x.havingCondFields.values());\n            const groupFields: string[] =\n                (i === 0 && query.groupBy) ? query.groupBy : []; // NOTE: condition is same as `isAggregation`\n            const sortFields =\n                Array.from(x.sortFieldNames.values());\n            const relationshipIdFields =\n                Array.from(x.relationshipIdFields.values());\n\n            const resolvingFields =\n                Array.from(\n                    new Set<string>(queryFields\n                        .concat(condFields)\n                        .concat(havingCondFields)\n                        .concat(builder.rules.idFieldName ? [builder.rules.idFieldName(resolverName)] : [])\n                        .concat(groupFields)\n                        .concat(sortFields)\n                        .concat(relationshipIdFields)\n                    ).values());\n\n            const condWhere = deepCloneObject(condWhereTemplate)\n                .map(cond => pruneCondition(x.name, cond))\n                .filter(filterZeroLengthCondFn);\n            const condHaving = deepCloneObject(condHavingTemplate)\n                .map(cond => pruneCondition(x.name, cond))\n                .filter(filterZeroLengthCondFn);\n\n            const ctxGen: Omit<ResolverContext, 'resolverCapabilities'> = {\n                functions: builder.functions,\n                query,\n                graphPath: x.name,\n                resolverName,\n                parentResolverName,\n                parentType,\n                foreignIdField,\n                masterIdField: i === 0 ? parentIdFieldName : currentIdFieldName,\n                detailIdField: i === 0 ? currentIdFieldName : parentIdFieldName,\n                parentRecords,\n                conditions: condWhere,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                resolverData,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                transactionData: tr,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                transactionOptions: trOptions,\n            };\n\n            if (i === 0) {\n                const ctx: ResolverContext = {\n                    ...ctxGen,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    parent,\n                    resolverCapabilities: {\n                        filtering: false,\n                        sorting: false,\n                        limit: false,\n                        offset: false,\n                    },\n                };\n\n                records = await x.resolver(\n                    resolvingFields,\n                    hasAliasNameCond ? [] : condWhere,\n                    (isAggregation || hasAliasNameCond) ? null : (query.limit ?? null),\n                    (isAggregation || hasAliasNameCond) ? null : (query.offset ?? null),\n                    ctx,\n                );\n                primaryCapabilities = ctx.resolverCapabilities;\n\n                if (hasAliasNameCond) {\n                    primaryCapabilities.filtering = false;\n                    primaryCapabilities.limit = false;\n                    primaryCapabilities.offset = false;\n                    primaryCapabilities.sorting = false;\n                }\n\n                if (hasAliasNameCond) {\n                    records = mapSelectFields(ctxGen, x, records, isAggregation);\n                }\n\n                if (! ctx.resolverCapabilities.filtering) {\n                    records = applyWhereConditions(ctxGen, condWhere, records);\n                }\n\n                if (! hasAliasNameCond) {\n                    records = mapSelectFields(ctxGen, x, records, isAggregation);\n                }\n\n                if (isAggregation) {\n                    // TODO: `count()` on non-aggregation query\n\n                    primaryCapabilities.limit = false;\n                    primaryCapabilities.offset = false;\n                    primaryCapabilities.sorting = false;\n\n                    const grouped = groupRecords(ctxGen, groupFields, x, records);\n                    const filteredGrouped = applyHavingConditions(ctxGen, condHaving, grouped);\n                    records = aggregateFields(ctxGen, groupFields, x, filteredGrouped);\n                }\n\n                primaryRecords = records;\n            } else if (parentRecords && parentRecords.length) {\n                // Get master relationships.\n\n                // For N+1 Query problem\n                if (builder.events.beforeMasterSubQueries) {\n                    await builder.events.beforeMasterSubQueries(ctxGen);\n                }\n\n                const parentFieldName = x.name[x.name.length - 1];\n                for (const p of parentRecords) {\n                    const ctx: ResolverContext = {\n                        ...ctxGen,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        parent: p,\n                        resolverCapabilities: {\n                            filtering: false,\n                            sorting: false,\n                            limit: false,\n                            offset: false,\n                        },\n                    };\n\n                    let recs = (await x.resolver(\n                        resolvingFields,\n                        hasAliasNameCond ? [] : condWhere,\n                        1, 0, ctx)).slice(0, 1);\n\n                    if (hasAliasNameCond) {\n                        ctx.resolverCapabilities.filtering = false;\n                        ctx.resolverCapabilities.limit = false;\n                        ctx.resolverCapabilities.offset = false;\n                        ctx.resolverCapabilities.sorting = false;\n                    }\n\n                    if (hasAliasNameCond) {\n                        recs = mapSelectFields(ctxGen, x, recs, isAggregation);\n                    }\n\n                    if (! ctx.resolverCapabilities.filtering) {\n                        recs = applyWhereConditions(ctxGen, condWhere, recs);\n                    }\n\n                    if (! hasAliasNameCond) {\n                        recs = mapSelectFields(ctxGen, x, recs, isAggregation);\n                    }\n\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    p[parentFieldName] = recs.length > 0 ? recs[0] : null;\n\n                    records = records.concat(recs);\n                }\n\n                if (builder.events.afterMasterSubQueries) {\n                    await builder.events.afterMasterSubQueries(ctxGen);\n                }\n\n                const parentRemovingFields = removingFieldsMap.get(parentKey);\n                if (parentRemovingFields) {\n                    parentRemovingFields.delete(parentFieldName);\n                }\n            }\n\n            const removingFields = getRemovingFields(x, records, isAggregation);\n            removingFieldsAndRecords.push([removingFields, records]);\n            removingFieldsMap.set(currentKey, removingFields);\n\n            queriedRecords.set(currentKey, records);\n            resolverNames.set(currentKey, resolverName);\n        }\n\n        if (query.selectSubQueries && primaryRecords) {\n            const promises: Promise<{ name: string[], parent: any, result: any[] }>[] = [];\n            for (const x of query.selectSubQueries) {\n                const subQueryName = x.query.from[0].name;\n                const parentKey = JSON.stringify(subQueryName.slice(0, subQueryName.length - 1));\n                const parentRecords = queriedRecords.get(parentKey);\n\n                if (parentRecords) {\n                    // For N+1 Query problem // TODO: reduce descendants (grandchildren and ...) queries\n\n                    const {\n                        parentType,\n                        resolverName,\n                        parentResolverName,\n                        foreignIdField,\n                        parentIdFieldName,\n                        currentIdFieldName,\n                    } = getResolversInfo(builder, resolverNames, x.query.from[0], 0);\n\n                    if (builder.events.beforeDetailSubQueries) {\n                        await builder.events.beforeDetailSubQueries({\n                            functions: builder.functions,\n                            query: x.query,\n                            graphPath: subQueryName,\n                            resolverName,\n                            parentResolverName,\n                            parentType,\n                            foreignIdField,\n                            masterIdField: parentIdFieldName,\n                            detailIdField: currentIdFieldName,\n                            parentRecords,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            resolverData,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            transactionData: tr,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            transactionOptions: trOptions,\n                        });\n                    }\n\n                    for (const p of parentRecords) {\n                        promises.push(\n                            executeCompiledQuery(\n                                builder, tr, trOptions,\n                                x.query, p, queriedRecords, resolverNames, resolverData)\n                            .then(q => ({\n                                name: subQueryName,\n                                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                                parent: p,\n                                result: q,\n                            }))\n                        );\n                    }\n\n                    if (builder.events.afterDetailSubQueries) {\n                        await builder.events.afterDetailSubQueries({\n                            functions: builder.functions,\n                            query: x.query,\n                            graphPath: subQueryName,\n                            parentRecords,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            resolverData,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            transactionData: tr,\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                            transactionOptions: trOptions,\n                        });\n                    }\n                }\n\n                const parentRemovingFields = removingFieldsMap.get(parentKey);\n                if (parentRemovingFields) {\n                    parentRemovingFields.delete(subQueryName[subQueryName.length - 1]);\n                }\n            }\n\n            const results = await Promise.all(promises);\n            results.forEach(r => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                r.parent[r.name[r.name.length - 1]] = r.result;\n            });\n        }\n\n        if (primaryRecords) {\n            if (primaryCapabilities) {\n                if (! primaryCapabilities.sorting) {\n                    primaryRecords = sortRecords(query, primaryRecords);\n                }\n\n                if (! (primaryCapabilities.offset || primaryCapabilities.limit)) {\n                    if (typeof query.offset === 'number' && typeof query.limit === 'number') {\n                        primaryRecords = primaryRecords.slice(query.offset, query.offset + query.limit);\n                    } else if (typeof query.offset === 'number') {\n                        primaryRecords = primaryRecords.slice(query.offset);\n                    } else if (typeof query.limit === 'number') {\n                        primaryRecords = primaryRecords.slice(0, query.limit);\n                    }\n                } else if (! primaryCapabilities.offset) {\n                    if (typeof query.offset === 'number') {\n                        primaryRecords = primaryRecords.slice(query.offset);\n                    }\n                } else if (! primaryCapabilities.limit) {\n                    if (typeof query.limit === 'number') {\n                        primaryRecords = primaryRecords.slice(0, query.limit);\n                    }\n                }\n            }\n        } else {\n            // NOTE: never reach here.\n            primaryRecords = [];\n        }\n\n        for (const ent of removingFieldsAndRecords) {\n            const [removingFields, records] = ent;\n            for (const r of records) {\n                for (const name of removingFields) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    delete r[name];\n                }\n            }\n        }\n\n        if (!parent && builder.events.endExecute) {\n            await builder.events.endExecute({\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                resolverData,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                transactionData: tr,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                transactionOptions: trOptions,\n            }, null);\n        }\n    } catch (e) {\n        if (!parent && builder.events.endExecute) {\n            await builder.events.endExecute({\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                resolverData,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                transactionData: tr,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                transactionOptions: trOptions,\n            }, e);\n        }\n        throw e;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return primaryRecords;\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-implied-eval\nconst globalObj = Function('return this')();\nconst objConstructor = ({}).constructor; // NOTE: objConstructor            === Object\nconst funConstructor = Function;         // NOTE: ({}).toString.constructor === Function\n\n\nexport const DatePattern = /^(\\d{4}-[01]\\d-[0-3]\\d)$/;\nexport const DateTimePattern =\n    /^((?:(?:\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+)|(?:\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d)|(?:\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d))(?:[+-][0-2]\\d:[0-5]\\d|Z))$/;\nexport const DateTimeNoTzPattern =\n    /^((?:\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+)|(?:\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d)|(?:\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d))$/;\nexport const dummyTargetObject = {};\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function isUnsafeVarNames(target: any, varName: string) {\n    if (target === globalObj ||\n        varName === '__proto__' ||\n        varName === '__defineGetter__' || varName === '__defineSetter__' ||\n        varName === '__lookupGetter__' || varName === '__lookupSetter__') {\n        return true;\n    }\n    if (varName === 'prototype' || varName === 'constructor') {\n        if (target === null || target === void 0 || typeof target === 'function') {\n            return true;\n        }\n    }\n    if (target === null || target === void 0 || target === objConstructor) {\n        if (objConstructor.hasOwnProperty(varName)) {\n            return true;\n        }\n    }\n    if (target === null || target === void 0 || target === funConstructor) {\n        // checking 'call', 'arguments', 'caller', ...\n        let con: any = funConstructor;\n        while (con) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            if (con.hasOwnProperty(varName)) {\n                return true;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            con = con.__proto__;\n        }\n    }\n    if (typeof target === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        if (! target.hasOwnProperty(varName)) {\n            // function's prototypes' members\n            return true;\n        }\n    }\n    return false;\n}\n\n\nexport function deepCloneObject<T>(obj: T): T {\n    switch (typeof obj) {\n    case 'object':\n        if (Array.isArray(obj)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return obj.slice().map(x => deepCloneObject(x)) as any;\n        } else if (obj === null) {\n            return obj;\n        } else {\n            if (obj instanceof Map) {\n                const ent: Array<[any, any]> =\n                    Array.from(obj.entries())\n                         .map(x => [deepCloneObject(x[0]), deepCloneObject(x[1])]);\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return new Map(ent) as any;\n            } else if (obj instanceof Set) {\n                const ent =\n                    Array.from(obj.values())\n                         // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                         .map(x => deepCloneObject(x));\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return new Set(ent) as any;\n            } else {\n                const r = {};\n                for (const k of Object.keys(obj)) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    r[k] = deepCloneObject(obj[k]);\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return r as any;\n            }\n        }\n    default:\n        return obj;\n    }\n}\n\n\nexport function isEqualComplexName(a: string[], b: string[]): boolean {\n    if (a.length !== b.length) {\n        return false;\n    }\n\n    for (let i = 0; i < a.length; i++) {\n        if (a[i].toLowerCase() !== b[i].toLowerCase()) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getFullQualifiedName(primaryResolverName: string[], name: string[]) {\n    const ns: string[] = [];\n    for (let i = 0; i < primaryResolverName.length; i++) {\n        const sliced = primaryResolverName.slice(i);\n        if (isEqualComplexName(name.slice(0, sliced.length), sliced)) {\n            break;\n        } else {\n            ns.push(primaryResolverName[i]);\n        }\n    }\n    if (ns.length) {\n        return ns.concat(name);\n    } else {\n        return name;\n    }\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getTrueCaseFieldName(record: any, name: string) {\n    const keys = Object.keys(record);\n    const ni = name.toLowerCase();\n    const index = keys.findIndex(x => x.toLowerCase() === ni);\n\n    if (0 > index) {\n        return null;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    return keys[index];\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getObjectValue(record: any, name: string) {\n    const keys = Object.keys(record);\n    const ni = name.toLowerCase();\n    const index = keys.findIndex(x => x.toLowerCase() === ni);\n\n    if (0 > index) {\n        return null;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    return record[keys[index]];\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getObjectValueWithFieldNameMap(map: Map<string, string>, record: any, name: string) {\n    const ni = name.toLowerCase();\n\n    if (! map.has(ni)) {\n        return null;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-non-null-assertion\n    return record[map.get(ni)!];\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getTrueCasePathName(record: any, name: string[]): string[] | null {\n    const ret: string[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let r = record;\n\n    for (const n of name) {\n        if (r === null || r === void 0) {\n            return null;\n        }\n\n        const keys = Object.keys(r);\n        const ni = n.toLowerCase();\n        const index = keys.findIndex(x => x.toLowerCase() === ni);\n\n        if (0 > index) {\n            return null;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        r = r[keys[index]];\n\n        ret.push(keys[index]);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return ret;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getObjectTrueCasePathValue(record: any, name: string[]) {\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let r = record;\n\n    for (const n of name) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        r = r[n];\n\n        if (r === null || r === void 0) {\n            return null;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return r;\n}\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getObjectPathValue(record: any, name: string[]) {\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let r = record;\n\n    for (const n of name) {\n        const keys = Object.keys(r);\n        const ni = n.toLowerCase();\n        const index = keys.findIndex(x => x.toLowerCase() === ni);\n\n        if (0 > index) {\n            return null;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        r = r[keys[index]];\n\n        if (r === null || r === void 0) {\n            return null;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return r;\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { QueryResolverFn,\n         PreparedCondition,\n         ResolverContext }      from './types';\nimport { dummyTargetObject,\n         isUnsafeVarNames,\n         getObjectValue,\n         getTrueCaseFieldName, \n         isEqualComplexName }   from './lib/util';\nimport { parse as parseCsv }    from './lib/csv-parser';\nimport { sortRecords }          from './sort';\nimport { applyWhereConditions } from './filters';\n\n\n\nexport interface StaticResolverConfig {\n    noCache?: boolean;\n    noFiltering?: boolean;\n    noSorting?: boolean;\n}\n\n// const defaultStaticResolverConfig: StaticResolverConfig = {\n//     noCache: true,\n//     noFiltering: true,\n//     noSorting: true,\n// };\nconst defaultStaticResolverConfig: StaticResolverConfig = {\n    noCache: false,\n    noFiltering: false,\n    noSorting: false,\n};\n\n\nexport function setDefaultStaticResolverConfig(conf: StaticResolverConfig): void {\n    Object.assign(defaultStaticResolverConfig, conf);\n}\n\n\nfunction jsonRecordsParser(src: string) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const records: any[] = JSON.parse(src);\n    if (! Array.isArray(records)) {\n        throw new Error(`jsonRecordsParser: Records should be array.`);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return records;\n}\n\n\nfunction csvRecordsParser(src: string) {\n    const rawRecords = parseCsv(src.trim());\n    if (! rawRecords.length) {\n        throw new Error(`csvRecordsParser: Header row is needed.`);\n    }\n\n    const header = rawRecords[0];\n\n    for (let c = 0; c < header.length; c++) {\n        if (isUnsafeVarNames(dummyTargetObject, header[c])) {\n            throw new Error(`Unsafe symbol name is appeared: ${header[c]}`);\n        }\n    }\n\n    const records: any[] = [];\n\n    for (let i = 1; i < rawRecords.length; i++) {\n        const cur = rawRecords[i];\n        const rec = {};\n        for (let c = 0; c < header.length; c++) {\n            rec[header[c]] = cur[c];\n        }\n        records.push(rec);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return records;\n}\n\n\nfunction passThroughParser(src: any[]) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return src;\n}\n\n\nfunction filterAndSliceRecords(\n        records: any[], fields: string[], conditions: PreparedCondition[],\n        limit: number | null, offset: number | null, ctx: ResolverContext,\n        config: StaticResolverConfig) {\n\n    if (! records.length) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return records;\n    }\n\n    const removingFields = new Set<string>();\n    const recordFields = new Map<string, string>(Object.keys(records[0]).map(x => [x.toLowerCase(), x]));\n    const requestedFields = new Set<string>(fields.map(x => x.toLowerCase()));\n\n    for (const field of requestedFields.keys()) {\n        if (! recordFields.has(field)) {\n            throw new Error(`Field \"${field}\" is not supplied from resolver \"${ctx.resolverName}\".`);\n        }\n    }\n\n    if (! config.noFiltering) {\n        records = applyWhereConditions(ctx, conditions, records);\n        ctx.resolverCapabilities.filtering = true;\n    }\n\n    if (records.length && ctx.parent) {\n        switch (ctx.parentType) {\n        case 'master':\n            if (ctx.foreignIdField) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-non-null-assertion\n                const parentId = getObjectValue(ctx.parent, ctx.masterIdField!);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const fName = getTrueCaseFieldName(records[0], ctx.foreignIdField!);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-non-null-assertion\n                records = records.filter(x => x[fName!] === parentId);\n            }\n            break;\n        case 'detail':\n            if (ctx.foreignIdField) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-non-null-assertion\n                const parentId = getObjectValue(ctx.parent, ctx.foreignIdField!);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const fName = getTrueCaseFieldName(records[0], ctx.masterIdField!);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-non-null-assertion\n                records = records.filter(x => x[fName!] === parentId);\n            }\n            break;\n        }\n    }\n\n    if (config.noFiltering) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return records;\n    }\n\n    if (!config.noSorting && ctx.query && ctx.query.orderBy) {\n        const primaryPathLen = ctx.query.from[0].name.length;\n        if (ctx.graphPath.length === primaryPathLen && isEqualComplexName(ctx.graphPath, ctx.query.from[0].name)) {\n            if (ctx.query.orderBy.every(w => w.name.length === primaryPathLen + 1 &&\n                recordFields.has(w.name[w.name.length - 1].toLowerCase()))) {\n\n                records = sortRecords(ctx.query, records);\n                ctx.resolverCapabilities.sorting = true;\n            }\n        }\n    }\n\n    for (const field of recordFields.keys()) {\n        if (! requestedFields.has(field)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            removingFields.add(recordFields.get(field)!);\n        }\n    }\n    for (const record of records) {\n        for (const field of removingFields) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            delete record[field];\n        }\n    }\n\n    if (ctx.resolverCapabilities.sorting) {\n        if (typeof offset === 'number') {\n            records = records.slice(offset);\n        }\n        if (typeof limit === 'number') {\n            records = records.slice(0, limit);\n        }\n        ctx.resolverCapabilities.limit = true;\n        ctx.resolverCapabilities.offset = true;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return records;\n}\n\n\nfunction staticResolverBuilderGen<T>(parser: (s: T) => any[]):\n        (resolverName: string, fetcher: () => Promise<T>, config: StaticResolverConfig) => QueryResolverFn {\n\n    return (resolverName, fetcher, config) => {\n        return async (fields, conditions, limit, offset, ctx) => {\n            let cache: Map<string, any[]> | null;\n            let cachedRecords: any[] | null = null;\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (ctx.resolverData.cache) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                cache = ctx.resolverData.cache;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                if (cache!.has(resolverName)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    cachedRecords = cache!.get(resolverName)!;\n                }\n            } else {\n                cache = new Map<string, any[]>();\n                if (! config.noCache) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    ctx.resolverData.cache = cache;\n                }\n            }\n\n            let records: any[] | null = null;\n            if (cachedRecords === null) {\n                const fetched = await fetcher();\n                records = parser(fetched);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion, @typescript-eslint/no-unsafe-return\n                cache!.set(resolverName, records.map(x => ({...x})));\n            } else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                records = cachedRecords.map(x => ({...x}));\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return filterAndSliceRecords(records, fields, conditions, limit, offset, ctx, config);\n        };\n    }\n}\n\n\nexport const staticJsonResolverBuilder:\n        (resolverName: string, fetcher: () => Promise<string>, config?: StaticResolverConfig) => QueryResolverFn =\n    (resolverName, fetcher, config) => {\n        return staticResolverBuilderGen(jsonRecordsParser)(resolverName, fetcher, config ?? defaultStaticResolverConfig);\n    };\n\n\nexport const staticCsvResolverBuilder:\n        (resolverName: string, fetcher: () => Promise<string>, config?: StaticResolverConfig) => QueryResolverFn =\n    (resolverName, fetcher, config) => {\n        return staticResolverBuilderGen(csvRecordsParser)(resolverName, fetcher, config ?? defaultStaticResolverConfig);\n    };\n\n\nexport const passThroughResolverBuilder:\n        (resolverName: string, fetcher: () => Promise<any[]>, config?: StaticResolverConfig) => QueryResolverFn =\n    (resolverName, fetcher, config) => {\n        return staticResolverBuilderGen(passThroughParser)(resolverName, fetcher, config ?? defaultStaticResolverConfig);\n    };\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { PreparedQuery,\n         PreparedOrderByField }      from './types';\nimport { getTrueCasePathName,\n         getObjectTrueCasePathValue,\n         getObjectPathValue }        from './lib/util';\n\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function sortRecords(query: PreparedQuery, records: any[]) {\n    if (query.orderBy) {\n        const primaryPathLen = query.from[0].name.length;\n        const orderFields = query.orderBy;\n\n        records = records.sort((a, b) => {\n            const direction =\n                (f: PreparedOrderByField, r: number) =>\n                    f.direction === 'desc' ? -r : r;\n\n            const fieldAndFNames = orderFields.map(f => ({\n                f,\n                fName: getTrueCasePathName(records[0], f.name.slice(primaryPathLen)),\n            }));\n\n            // eslint-disable-next-line prefer-const\n            LOOP: for (let {f, fName} of fieldAndFNames) {\n                let va = null;\n                let vb = null;\n\n                if (fName !== null) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    va = getObjectTrueCasePathValue(a, fName);\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    vb = getObjectTrueCasePathValue(b, fName);\n                } else {\n                    // Fallback (when the child relationship of records[0] is null)\n\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    va = getObjectPathValue(a, f.name.slice(primaryPathLen));\n\n                    fName = getTrueCasePathName(b, f.name.slice(primaryPathLen));\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    vb = fName !== null ? getObjectTrueCasePathValue(b, fName) : null;\n                }\n\n                if (va === vb) {\n                    continue;\n                }\n                if (va === null) {\n                    return direction(f, f.nulls === 'last' ? 1 : -1); // default is `nulls first`\n                }\n                if (vb === null) {\n                    return direction(f, f.nulls === 'last' ? -1 : 1); // default is `nulls first`\n                }\n\n                switch (typeof va) {\n                case 'number': case 'bigint':\n                    return direction(f, (va as any) - (vb as any));\n                case 'string':\n                    // TODO: date and datetime\n                    return direction(f, va > vb ? 1 : -1);\n                default:\n                    // Ignore this field\n                    continue LOOP;\n                }\n            }\n            return 0;\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return records;\n}\n","// Copyright (c) 2020 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\nexport type ComparisonOperators =\n    '=' | '!=' | '<' | '<=' | '>' | '>=' |\n    'like' | 'not_like' |\n    'in' | 'not_in' | 'includes' | 'excludes';\n\n\nexport type LogicalOperators =\n    'not' | 'and' | 'or' |\n    'true';\n\n\nexport type FieldResultType =\n    'any' | 'number' | 'string' | 'boolean' | 'date' | 'datetime';\n\n\nexport interface PreparedDateValue {\n    type: 'date';\n    value: string;\n}\n\n\nexport interface PreparedDateTimeValue {\n    type: 'datetime';\n    value: string;\n}\n\n\nexport type PreparedAtomValue =\n    number | string | null | PreparedDateValue | PreparedDateTimeValue;\n\n\nexport type PreparedValue =\n    PreparedAtomValue | Array<PreparedAtomValue>;\n\n\nexport interface PreparedFieldBase {\n    aliasName?: string | null;\n}\n\n\nexport interface PreparedFieldBaseForFnCall {\n    aliasName: string; // NOTE: It is set at compile time.\n}\n\n\nexport interface PreparedField extends PreparedFieldBase {\n    type: 'field';\n    name: string[];\n}\n\n\nexport interface PreparedFnCall extends PreparedFieldBaseForFnCall {\n    type: 'fncall';\n    fn: string;\n    args: Array<\n            Omit<PreparedField, 'aliasName'> |\n            PreparedAtomValue |\n            PreparedFnCall>;\n}\n\n\nexport interface PreparedSubQuery extends PreparedFieldBase {\n    type: 'subquery';\n    query: PreparedQuery;\n}\n\n\nexport type PreparedFieldListItem =\n    PreparedField | PreparedFnCall | PreparedSubQuery;\n\n\nexport interface ParsedResolverBase {\n    name: string[];\n    aliasName: string | null;\n\n    // Followings are for internal use.\n    //   These are set at compile time.\n\n    resolver?: QueryResolverFn;\n    resolverName?: string;\n}\n\nexport interface PreparedResolverCompiledProps {\n    queryFields?: Set<string>;\n    queryFieldsMap?: Map<string, PreparedFieldListItem>;\n    condFields?: Set<string>;\n    condAliasFields?: Set<string>;\n    havingCondFields?: Set<string>;\n    fieldAliasNames?: Set<string>;\n    sortFieldNames?: Set<string>;\n    relationshipIdFields?: Set<string>;\n}\n\nexport type ParsedResolver =\n    ParsedResolverBase & PreparedResolverCompiledProps;\n\n\nexport type PreparedResolver =\n    ParsedResolverBase & Required<PreparedResolverCompiledProps>;\n\n\nexport type PreparedConditionOperand =\n    PreparedCondition | PreparedValue | PreparedFieldListItem;\n\n\nexport interface PreparedCondition {\n    type: 'condition';\n    op: LogicalOperators | ComparisonOperators;\n    operands: Array<PreparedConditionOperand>;\n}\n\n\nexport interface PreparedOrderByField {\n    name: string[];\n    direction: 'asc' | 'desc';\n    nulls: 'first' | 'last';\n}\n\n\nexport interface ParsedQueryBase {\n    select: PreparedFieldListItem[];\n    where?: PreparedCondition[];\n    having?: PreparedCondition[];\n    groupBy?: string[];\n    orderBy?: PreparedOrderByField[];\n    limit?: number | null;\n    offset?: number | null;\n    for?: string[];\n}\n\nexport interface PreparedQueryCompiledProps {\n    whereSubQueries?: PreparedSubQuery[];\n    havingSubQueries?: PreparedSubQuery[];\n    selectSubQueries?: PreparedSubQuery[];\n}\n\nexport type ParsedQuery =\n    ParsedQueryBase &\n    {\n        from: ParsedResolver[];\n    } &\n    PreparedQueryCompiledProps;\n\n\nexport type PreparedQuery =\n    ParsedQueryBase &\n    {\n        from: PreparedResolver[];\n    } &\n    PreparedQueryCompiledProps;\n\n\nexport interface ExecutionPlan {\n    query: PreparedQuery;\n    children: ExecutionPlan[];\n}\n\n\nexport interface ExecutionPlanRoot {\n    children: ExecutionPlan[];\n    generations: Array<Promise<any>[]>;\n}\n\n\nexport const enum ResolverTreeDirection {\n    DetailsToMaster = 1,\n    MasterToDetail = 2,\n}\n\nexport interface ResolverTreeNode {\n    fieldOrRelName: string;\n    // fkeyIdName: string;\n    resolverName: string;\n    direction:\n        ResolverTreeDirection.DetailsToMaster |\n        ResolverTreeDirection.MasterToDetail;\n    children: ResolverTreeNode[];\n}\n\n\nexport interface ResolverCapabilities {\n    filtering: boolean; // for `query` resolvers.\n    sorting: boolean;   // for `query` resolvers.\n    limit: boolean;     // for `query` resolvers.\n    offset: boolean;    // for `query` resolvers.\n}\n\n\nexport interface ResolverContext {\n    functions: QueryFuncInfo[];\n    query?: PreparedQuery;   // DON'T CHANGE any properties from the resolver!\n    graphPath: string[];\n    resolverName: string;\n    parentResolverName?: string;\n    parentType?:\n        'master' |           // Accessed by `Select (Select childField From details) From Master`\n                             //   `details` is called 'child relationship name'.\n        'detail';            // Accessed by `Select master__r.childField From Detail`\n    parent?: any;            // Parent record. (For resolver function)\n    foreignIdField?: string; // [parentType='master'] Select from currentResolver where currentResolver.foreignIdField = parent.idField\n                             // [parentType='detail'] Select from currentResolver where currentResolver.idField = parent.foreignIdField\n    masterIdField?: string;  // Record id field of master.\n    detailIdField?: string;  // Record id field of detail.\n\n    parentRecords?: any[];            // For before/after sub-query events.\n    conditions?: PreparedCondition[], // For before/after sub-query events. Same object ref is passed to the resolver function's parameter.\n\n    resolverCapabilities: ResolverCapabilities;\n    resolverData: any;       // Resolver's user defined data.\n    transactionData: any;    // Transaction user defined data.\n    transactionOptions: any | undefined;\n}\n\n\nexport interface ResolverEvent extends Partial<ResolverContext> {\n    resolverData: any;\n    transactionData: any;\n    transactionOptions: any | undefined;\n}\n\n\n// export interface HavingConditionComponent { // It is not passed to the resolvers\n//     op: ComparisonOperators;\n//     fn: string;\n//     args: string[];\n//     fnResult: number | string | Date | null;\n//     value: number | string | Date | null;\n// }\n\n\nexport type QueryResolverFn = (\n    fields: string[], // NOTE: Relationship fields are not included.\n                      //       Function names are not included; functions are called by framework.\n    conditions: PreparedCondition[],\n    limit: number | null,\n    offset: number | null,\n    ctx: ResolverContext,\n    ) => Promise<any[]>;\n\nexport type InsertResolverFn = (\n    records: any[],\n    ctx: ResolverContext,\n    ) => Promise<any[]>;\n\nexport type UpdateResolverFn = (\n    records: any[],\n    ctx: ResolverContext,\n    ) => Promise<any[]>;\n\nexport type RemoveResolverFn = (\n    records: any[],\n    ctx: ResolverContext,\n    ) => Promise<void>;\n\n\nexport type AggregateFunction =\n    (ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        args: Array<PreparedAtomValue | PreparedAtomValue[]>, records: any[]) => any;\n\nexport type ScalarFunction =\n    (ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        args: PreparedAtomValue[], record: any) => any;\n\nexport type ImmediateScalarFunction =\n    (ctx: Omit<ResolverContext, 'resolverCapabilities'>,\n        args: PreparedAtomValue[]) => any;\n\n\nexport interface AggregateQueryFuncInfo {\n    type: 'aggregate';\n    name: string;\n    fn: AggregateFunction;\n}\n\nexport interface ScalarQueryFuncInfo {\n    type: 'scalar';\n    name: string;\n    fn: ScalarFunction;\n}\n\nexport interface ImmediateScalarQueryFuncInfo {\n    type: 'immediate-scalar';\n    name: string;\n    fn: ImmediateScalarFunction;\n}\n\nexport type QueryFuncInfo =\n    AggregateQueryFuncInfo | ScalarQueryFuncInfo | ImmediateScalarQueryFuncInfo;\n\n\nexport interface QueryBuilderInfoRulesSection {\n    // childRelationshipName?: (s: string) => string;\n    // resolverCase?: (s: string) => string;\n    // fieldCase?: (s: string) => string;\n    idFieldName?: (resolverName: string) => string;\n    foreignIdFieldName?: (masterResolverName: string | undefined) => string | undefined;\n}\n\n\nexport interface QueryBuilderInfoResolversSection {\n    query: {\n        // Node (table/entity/sObject) names.\n        [resolverNames: string]: QueryResolverFn;\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    insert?: {\n        [resolverNames: string]: InsertResolverFn;\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    update?: {\n        [resolverNames: string]: UpdateResolverFn;\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    remove?: {\n        [resolverNames: string]: RemoveResolverFn;\n    };\n}\n\n\nexport interface QueryBuilderInfo {\n    /** Additional (user defined) SOQL functions */\n    functions?: QueryFuncInfo[];\n    rules?: QueryBuilderInfoRulesSection;\n    /** */\n    events?: {\n        beginTransaction?: (evt: ResolverEvent) => Promise<void>;\n        endTransaction?: (evt: ResolverEvent, err: Error | null) => Promise<void>;\n        beginExecute?: (evt: ResolverEvent) => Promise<void>;\n        endExecute?: (evt: ResolverEvent, err: Error | null) => Promise<void>;\n        beforeMasterSubQueries?: (evt: ResolverEvent) => Promise<void>;\n        afterMasterSubQueries?: (evt: ResolverEvent) => Promise<void>;\n        beforeDetailSubQueries?: (evt: ResolverEvent) => Promise<void>;\n        afterDetailSubQueries?: (evt: ResolverEvent) => Promise<void>;\n    };\n    /** */\n    resolvers: QueryBuilderInfoResolversSection;\n    /** */\n    relationships?: {\n        /**\n         * detailResolverName\n         * e.g.: Contact: { account: 'Account' }\n         *       Contact: { account: { resolver: 'Account', id: 'accountId' } }\n         *\n         * NOTE: 'Account' is `masterResolverName`.\n         *       'account' is `masterObjectFieldName`.\n         *       'accountId' is `masterIdName`. (foreign key field name)\n         *       `Contact (resolver) -> account (field name)` direction is `Detail to Master`.\n         * \n         * masterResolverName\n         * e.g.: Account: { contacts: ['Contact'] }\n         *       Account: { contacts: ['Contact', 'account'] }\n         *\n         * NOTE: 'contacts' is details relationship name.\n         *       'Contact' is `detailResolverName` and 'account' is Contact's `masterObjectFieldName`.\n         *       Default masterObjectFieldName is `MasterResolverName`.\n         *       `Account (resolver) -> contacts (relationship name)` direction is `Master to Details`.\n         */\n        [detailOrMasterResolverNames: string]: {\n            [fieldOrRelNames: string]:\n                // detailResolver\n                string | { resolver: string, id: string } |\n                // masterResolver\n                [string, string?];\n        };\n    };\n}\n\n\nexport type QueryBuilderInfoInternal =\n    Required<QueryBuilderInfo> &\n    {\n        rules: Required<QueryBuilderInfoRulesSection>;\n        resolvers: Required<QueryBuilderInfoResolversSection>;\n    };\n"],"sourceRoot":""}